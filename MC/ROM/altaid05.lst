0001   0000             ;Altaid 8800
0002   0000             ;
0003   0000             ;8080MC
0004   0000             ;
0005   0000             ;Monitor program for 8080A based computer.
0006   0000             ;Written by Josh Bensadon
0007   0000             ;Free for public use, following the common shareware policies.
0008   0000             ;
0009   0000             ;
0010   0000             ;
0011   0000             ;
0012   0000             ;Version 0.0 - Josh Bensadon. Basic operation of LED's & Switches
0013   0000             ;Version 0.1 - Josh Bensadon. Serial Put_Char, Get_Char, Read/Write Sectors
0014   0000             ;Version 0.2 - Josh Bensadon. CP/M
0015   0000             ;Version 0.3 - Josh Bensadon. 38,400 BAUD, DISK XMODEM
0016   0000             ;
0017   0000             ;
0018   0000             ;Hardware
0019   0000             ;Input:	8 Data Momentary Data Switches
0020   0000             ;	1 Run  M-Switch
0021   0000             ;	1 Mode M-Switch
0022   0000             ;	1 Next M-Switch
0023   0000             ;	1 RESET M-Switch (Hardwired) Press and hold, discharges capacitor in 2 seconds to activate Reset Line
0024   0000             ;
0025   0000             ;Output: 8 Data LED's
0026   0000             ;	16 Address LED's
0027   0000             ;	1 Run LED
0028   0000             ;	1 Mode LED
0029   0000             ;	1 Red LED (Disk Read)
0030   0000             ;	1 Blue LED (Disk Write)
0031   0000             ;
0032   0000             ;Serial Port:	1 TXD (RS-232 or TTL)
0033   0000             ;		1 RXD (RS-232 or TTL)
0034   0000             ;		1 RTS (TTL) Hardwired to RESET instantly
0035   0000             ;
0036   0000             ;Switch Functionality
0037   0000             ;Upon Boot up:
0038   0000             ;D7 - Selects 9,600 Baud
0039   0000             ;D6 - Selects 19,200 Baud
0040   0000             ;D5 - Selects 38,400 Baud (stay & store)
0041   0000             ;D4 - Selects 38,400 Baud (quick exit)
0042   0000             ;
0043   0000             ;Next - Force Cold Boot (Release when Red LED comes on)
0044   0000             ;
0045   0000             ;When Front Panel is Running:
0046   0000             ;Mode selects one of four states that dictate what the data switches will do
0047   0000             ;	1- Select High Address
0048   0000             ;	2- Select Low Address
0049   0000             ;	3- Select Data (memory at this location) (if ROM selected, Data LEDs will not change)
0050   0000             ;	4- Do nothing
0051   0000             ;
0052   0000             ;NEXT advances to the next memory location.
0053   0000             ;Holding down next will engage auto increment
0054   0000             ;Holding down D7 while pressing NEXT will retreat to the previous location
0055   0000             ;
0056   0000             ;RUN turns on RUN Led & Jumps to the Address Location selected
0057   0000             ;
0058   0000             ;
0059   0000             ;
0060   0000             ;
0061   0000             ;Memory Map
0062   0000             ;0-3K ROM	-Start up
0063   0000             ;		-Monitor Menu
0064   0000             ;		-Monitor Functions
0065   0000             ;		-Front Panel Operation (438 bytes)
0066   0000             ;		-Serial TX
0067   0000             ;		-HEX Load
0068   0000             ;		-XModem
0069   0000             ;		-Read/Write Sector
0070   0000             ;		-Format RAM DISK
0071   0000             ;
0072   0000             ;3K-3.3K ROM	-CP/M BIOS (ROM extension) including Load CP/M (ROM to RAM)
0073   0000             ;3.3K-9K ROM	-CP/M Image (CCP & BDOS) (to be copied to RAM at D800)
0074   0000             ;9K-9.1K ROM	-BIOS (to be copied to RAM at EE00)
0075   0000             ;9.1K-9.6K	-ISR routine to be copied to RAM at EEC7
0076   0000             ;
0077   0000             ; 000 (16K)	-PIP
0078   0000             ; 000	0E00	PIP.COM
0079   0000             ; 800	0E10	PIP.COM
0080   0000             ; 000	0E20	PIP.COM
0081   0000             ; 800	0E30	PIP.COM
0082   0000             ; 000	0E40	XM.COM
0083   0000             ;-6780	0E4F	Sector 0, directory enteries for PIP & XM
0084   0000             ; 800	0E50	spare
0085   0000             ; 000	0E60	spare
0086   0000             ; 800	0E70	spare
0087   0000             ;
0088   0000             ;
0089   0000             ;RAM
0090   0000             ;D800		-CCP
0091   0000             ;E006		-BDOS
0092   0000             ;EE00		-BIOS
0093   0000             ;EEAE		-ISR Timer
0094   0000             ;EEC7		-ISR Serial RX
0095   0000             ;-EF21
0096   0000             ;
0097   0000             ;FD00		-CP/M Workspace
0098   0000             ;-FDB7
0099   0000             ;
0100   0000             ;FE00		-RX Data Buffer
0101   0000             ;-FEFF
0102   0000             ;
0103   0000             ;FF00		-Front Panel, Xmodem & other Monitor/Base system RAM variables
0104   0000             ;-FF3F		
0105   0000             ;FF40		-STACK
0106   0000             ;-FF7F
0107   0000             ;FF80		-Sector Buffer (write)
0108   0000             ;-FFFF
0109   0000             
0110   0000             
0111   0000             ;	READ SECTOR FROM RAM
0112   0000             ;512K RAM  allows for 64K System + 14 Tracks of 256 Sectors
0113   0000             ;BANK
0114   0000             ;0 - 64K System RAM, Stack, etc.
0115   0000             ;1 - 512 Sectors    0 to  511   Track 0, 1
0116   0000             ;2 - 512 Sectors  512 to 1023	Track 2, 3
0117   0000             ;3 - 512 Sectors 1024 to 1535	Track 4, 5
0118   0000             ;4 - 512 Sectors 1536 to 2047	Track 6, 7
0119   0000             ;5 - 512 Sectors 2048 to 2559	Track 8, 9
0120   0000             ;6 - 512 Sectors 2560 to 3071	Track 10, 11
0121   0000             ;7 - 512 Sectors 3072 to 3583	Track 12, 13        3583 = 0x0DFF
0122   0000             ;
0123   0000             ;Total 3584 Sectors in RAM
0124   0000             ;
0125   0000             ;32K ROM allows for 16K of additional ROM DISK area for Read Only Files
0126   0000             ;We must use this space entirely for Files.  
0127   0000             ;CP/M Must not be allowed to consider any of this space writable.
0128   0000             ;PIP.COM 8K  (4 blocks, 224, 225, 226, 227) Sectors 0x0E00 to 0x0E3F
0129   0000             ;XM.COM  2K  (1 block, 228) Sectors 0x0E40 to 0x0E4F.  
0130   0000             ;Sector 0x0E4F is not used in XM.COM, so it is used to set the initial directory at Sector 0
0131   0000             ;1 Block = 2K = 16 Sectors
0132   0000             ;
0133   0000             ;8 sectors = 1K, but we must go by blocks of 16 sectors (2K)
0134   0000             ;
0135   0000             ;ROM	Sec
0136   0000             ; 000	0E00	PIP.COM
0137   0000             ; 800	0E10	PIP.COM
0138   0000             ; 000	0E20	PIP.COM
0139   0000             ; 800	0E30	PIP.COM
0140   0000             ; 000	0E40	XM.COM
0141   0000             ; 800	0E50	spare
0142   0000             ; 000	0E60	spare
0143   0000             ; 800	0E70	spare
0144   0000             ;
0145   0000             ;64K ROM 27512
0146   0000             ;8000	0E80	spare
0147   0000             ;8800	0E90	spare
0148   0000             ;9000	0EA0	spare
0149   0000             ;9800	0EB0	spare
0150   0000             ;A000	0EC0	spare
0151   0000             ;A800	0ED0	spare
0152   0000             ;B000	0EE0	spare
0153   0000             ;B800	0EF0	spare
0154   0000             ;C000	0F00	spare
0155   0000             ;C800	0F10	spare
0156   0000             ;D000	0F20	spare
0157   0000             ;D800	0F30	spare
0158   0000             ;E000	0F40	spare
0159   0000             ;E800	0F50	spare
0160   0000             ;F000	0F60	spare
0161   0000             ;F800	0F70	spare
0162   0000             
0163   0000             
0164   0000             
0165   0000             
0166   0000             ;           #INCLUDE        "macros.h"
0167   0000             
0168   0000             
0169   0000             		.CSEG
0170   0000             
0171   0000             CR		.EQU 0DH
0172   0000             LF		.EQU 0AH
0173   0000             ESC		.EQU 1BH
0174   0000             
0175   0000             OUTPUT_PORT	.EQU 0C0H	;Output Port
0176   0000             INPUT_PORT	.EQU 040H	;Input Port
0177   0000             
0178   0000             				;Control (output) Port
0179   0000             ROM_HI		.EQU 040H	;Set to map ROM to High Address (Clr = RAM)
0180   0000             ROM_LOW		.EQU 041H	;Clear to map ROM to Low Addres (Set = RAM)
0181   0000             B16		.EQU 042H	;RAM Bank Select (A16)
0182   0000             B18		.EQU 043H	;RAM Bank Select (A18)
0183   0000             CASSETTE	.EQU 044H	;Cassette output
0184   0000             B15		.EQU 045H	;ROM Bank Select (A15)
0185   0000             TIMER		.EQU 046H	;
0186   0000             B17		.EQU 047H	;RAM Bank Select (A17)
0187   0000             
0188   0000             		;RAM BANK SELECT:
0189   0000             		;RAM is to be 628512 (512KB), requires 19 address lines.
0190   0000             		;A0-A15 addresses 64K of RAM (when all RAM is selected)
0191   0000             		;B16, B17, B18 select 1 of 8 blocks of 64K
0192   0000             		;Moving data between blocks requires storage in CPU registers.
0193   0000             		;
0194   0000             		;ROM BANK SELECT:
0195   0000             		;ROM is to be 27512 (64KB), requires 16 address lines
0196   0000             		;A0-A14 addresses 32K of ROM
0197   0000             		;B15 selects 1 of 2 blocks of 32K (lower or upper half of the 64K)
0198   0000             		;Breaking ROM into 2 banks allows RAM in the Upper 32K memory space.
0199   0000             		;
0200   0000             		;All ROM space is "Shadow ROM", meaning, reads are from ROM and any
0201   0000             		;memory writes will happen to the RAM at that address.
0202   0000             		;The Shadow ROM can be turned off, thus allowing the RAM to be read.
0203   0000             		;
0204   0000             		;ROM_LOW, when low, enables the ROM bank selected in the lower 32K space.
0205   0000             		;ROM_Hi, when hi, enables 16K of the ROM bank selected in the first 16K of
0206   0000             		;the upper 32K space.
0207   0000             		;
0208   0000             		;At Reset, all Control Output port bits are cleared to 0.
0209   0000             		;This allows ROM_LOW to enable shadow ROM at 0000 for CPU startup.
0210   0000             		;ROM Bank 0, RAM Bank 0.
0211   0000             		;
0212   0000             		
0213   0000             GO_CPM		.EQU	0EE00H		
0214   0000             
0215   0000             ;                 ******       *****      *****    ********* 
0216   0000             ;                 *******     *******    *******   ********* 
0217   0000             ;                 **    **   ***   ***  ***   ***     ***    
0218   0000             ;                 **    **   **     **  **     **     ***    
0219   0000             ;                 *******    **     **  **     **     ***    
0220   0000             ;                 *******    **     **  **     **     ***    
0221   0000             ;                 **    **   **     **  **     **     ***    
0222   0000             ;                 **    **   ***   ***  ***   ***     ***    
0223   0000             ;                 *******     *******    *******      ***    
0224   0000             ;                 ******       *****      *****       ***    
0225   0000             
0226   0000             
0227   0000             
0228   0000             				;Initialize System
0229   0000             				; -Format RAM DISK with E5's (blank)
0230   0000             				; -Init System RAM for Front Panel Operation
0231   0000             				; -Test INT pin, if stuck low, send message and Loop back
0232   0000             				; -Print Welcome (version)
0233   0000             				; -Load CP/M from ROM to upper RAM (includes ISR)
0234   0000             				; -Insert Jump to ISR in low RAM
0235   0000             				; -Enable Interrupts
0236   0000             				;
0237   0000             				;Proceed to Main Menu
0238   0000             				;				
0239   0000             		
0240   0000             		.ORG 0000H
0241   0000 31 80 FF    		LXI	SP,STACK
0242   0003             
0243   0003 2A 49 FF    		LHLD	RAM_SIGNATURE
0244   0006 25          		DCR	H
0245   0007 25          		DCR	H
0246   0008 C2 11 00    		JNZ	COLD_BOOT
0247   000B 7D          		MOV	A,L
0248   000C FE F8       		CPI	0F8H
0249   000E CA 3B 00    		JZ	WARM_BOOT
0250   0011             		
0251   0011             					;Initialize BITMAP at FF00			FF00 00000001
0252   0011 21 00 FF    COLD_BOOT	LXI	H,BITMAP	;HL=FF00					FF01 00000010
0253   0014 AF          		XRA	A		;A=00						FF02 00000100
0254   0015 37          		STC			;Carry set					FF03 00001000
0255   0016 17          BM_FILL		RAL			;March single bit left through Acc		FF04 00010000
0256   0017 77          		MOV	M,A		;Save it in memory				FF05 00100000
0257   0018 2C          		INR	L		;						FF06 01000000
0258   0019 D2 16 00    		JNC	BM_FILL		;Repeat until bit comes out to Carry again.	FF07 10000000
0259   001C 77          BM_ZERO		MOV	M,A		;Clear Remainder of RAM to FFFFh
0260   001D 2C          		INR	L
0261   001E BD          		CMP	L
0262   001F C2 1C 00    		JNZ	BM_ZERO
0263   0022             
0264   0022 CD D6 03    		CALL	DO_BAUD1
0265   0025             
0266   0025 21 98 0B    		LXI	H,MSG_COLD_BOOT
0267   0028 22 34 FF    		SHLD	XSECTOR
0268   002B C3 3E 00    		JMP	WARM_BOOT1
0269   002E             
0270   002E             
0271   002E~            		#if ($ > IRQ_VECTOR)	;Protect IRQ Vector
0272   002E~                         		!!!IRQ_VECTOR-CONFLICT!!!
0273   002E             		#endif
0274   002E             
0275   0038             		.ORG 0038H	;IRQ
0276   0038             IRQ_VECTOR	;RST	038H	;11   5.5uSEC
0277   0038 C3 F1 EE    		JMP	ISR_RAM	;10	Jump to ISR
0278   003B             
0279   003B 21 9D 0B    WARM_BOOT	LXI	H,MSG_WARM_BOOT
0280   003E 22 34 FF    WARM_BOOT1	SHLD	XSECTOR
0281   0041             
0282   0041 2A 41 FF    		LHLD	BAUD_SET_PTR	;Set Saved Baud Rate
0283   0044 CD FA 0B    		CALL	JMP_HL	;PCHL
0284   0047             
0285   0047             ;		XRA	A		;KILL Timer (If Enabled by BAUD SET)
0286   0047             ;		OUT	TIMER
0287   0047             
0288   0047 21 00 FE    		LXI	H,RXBUFFER
0289   004A 22 2E FF    		SHLD	RXBHEAD
0290   004D 22 30 FF    		SHLD	RXBTAIL
0291   0050             
0292   0050 21 08 FF    		LXI	H,FP_LED_MAT	;Init LED pointer
0293   0053 22 16 FF    		SHLD	FP_MAT_PTR	
0294   0056             	
0295   0056 3E 64       		MVI	A,64H		;Read High Data Switches
0296   0058 CD 3C 0E    		CALL	LED_OUT
0297   005B DB 40       		IN	INPUT_PORT
0298   005D 0F          		RRC
0299   005E 0F          		RRC
0300   005F 0F          		RRC
0301   0060 D2 11 00    		JNC	COLD_BOOT
0302   0063             
0303   0063             					;Cold or Warm boot, Data Switches will select Baud rate
0304   0063 3E 50       		MVI	A,50H		;Read High Data Switches
0305   0065 CD 3C 0E    		CALL	LED_OUT
0306   0068 DB 40       		IN	INPUT_PORT
0307   006A 21 7E 00    		LXI	H,SW_BAUD_END	;Load return Address on Stack
0308   006D E5          		PUSH	H
0309   006E 0F          		RRC
0310   006F D2 0B 04    		JNC	DO_BAUD4
0311   0072 0F          		RRC
0312   0073 D2 FA 03    		JNC	DO_BAUD3
0313   0076 0F          		RRC
0314   0077 D2 E8 03    		JNC	DO_BAUD2
0315   007A 0F          		RRC
0316   007B D2 D6 03    		JNC	DO_BAUD1
0317   007E             		;POP	H		;Leave stack messy.
0318   007E             SW_BAUD_END
0319   007E             
0320   007E DB 40       		IN	INPUT_PORT
0321   0080 57          		MOV	D,A
0322   0081             
0323   0081 3E 01       		MVI	A,1		;Allow Timer Interrupt to Trigger
0324   0083 D3 46       		OUT	TIMER
0325   0085 0E 00       		MVI	C,0
0326   0087 CD 44 0E    		CALL	DELAY_SCAN
0327   008A DB 40       		IN	INPUT_PORT
0328   008C 5F          		MOV	E,A
0329   008D F6 20       		ORI	20H		;Ignore Timer Interrupt (keep only RX input)
0330   008F 47          		MOV	B,A
0331   0090             
0332   0090 AF          		XRA	A		;Cancel Interrupt
0333   0091 D3 46       		OUT	TIMER
0334   0093             
0335   0093 CD 44 0E    		CALL	DELAY_SCAN
0336   0096 DB 40       		IN	INPUT_PORT
0337   0098 67          		MOV	H,A
0338   0099 A0          		ANA	B
0339   009A 2F          		CMA
0340   009B E6 A0       		ANI	0A0H		;Test RX and Timer inputs for Interrupt
0341   009D CA C1 00    		JZ	INT_TEST_END
0342   00A0 CD 5E 0B    		CALL	PUT_DE
0343   00A3 CD 69 0B    		CALL	PUT_HL
0344   00A6 CD AF 0B    		CALL	PRINTI		;System Start, Display Welcome Message
0345   00A9 2D496E742070 		.text "-Int pin stuck low\r\n\000"
0345   00AF 696E20737475636B206C6F770D0A00
0346   00BE C3 00 00    		JMP	$0000		;Restart
0347   00C1             INT_TEST_END	
0348   00C1 CD 3B 0E    		CALL	LED_OFF		;Set LED OFF
0349   00C4             
0350   00C4 21 F8 02    		LXI	H,02F8H		;RAM Signature is "to fate"
0351   00C7 22 49 FF    		SHLD	RAM_SIGNATURE
0352   00CA             
0353   00CA CD 4C 0B    		CALL	PUT_NEW_LINE
0354   00CD 2A 34 FF    		LHLD	XSECTOR
0355   00D0 CD 8E 0B    		CALL	PRINT		;Print COLD/WARM
0356   00D3             
0357   00D3 CD AF 0B    		CALL	PRINTI		;System Start, Display Welcome Message
0358   00D6 2D424F4F540D 		.text "-BOOT\r\nAltaid 8800 v0.5 Itty Bitty Micro Co Nov 4, 2019 Chksum=\000"
0358   00DC 0A416C7461696420383830302076302E352049747479204269747479204D6963726F20436F204E6F7620342C20323031392043686B73756D3D00
0359   0116             		
0360   0116 CD 72 0A    		CALL	CHKSUM_ROM
0361   0119 CD 5E 0B    		CALL	PUT_DE
0362   011C             		
0363   011C 3A 34 FF    		LDA	XSECTOR
0364   011F FE 98       		CPI	MSG_COLD_BOOT & $FF
0365   0121 CA 3C 01    		JZ	SKIP_RAM_CHKSUM
0366   0124             		
0367   0124 CD 92 0A    		CALL	CHKSUM_RAM
0368   0127 2A 4B FF    		LHLD	RAMDISK_CS
0369   012A 7C          		MOV	A,H
0370   012B AA          		XRA	D
0371   012C 67          		MOV	H,A
0372   012D 7D          		MOV	A,L
0373   012E AB          		XRA	E
0374   012F B4          		ORA	H
0375   0130 21 A2 0B    		LXI	H,MSG_GOOD
0376   0133 CA 39 01    		JZ	RCT_GOOD
0377   0136 21 A9 0B    		LXI	H,MSG_BAD		
0378   0139 CD 8E 0B    RCT_GOOD	CALL	PRINT		;Print GOOD/BAD
0379   013C             		
0380   013C             SKIP_RAM_CHKSUM
0381   013C             
0382   013C             
0383   013C CD 36 0F    		CALL	LOAD_CPM
0384   013F             
0385   013F 2A 38 00    		LHLD	IRQ_VECTOR	;Copy ISR Jump to RAM
0386   0142 22 38 00    		SHLD	IRQ_VECTOR
0387   0145 2A 3A 00    		LHLD	IRQ_VECTOR+2
0388   0148 22 3A 00    		SHLD	IRQ_VECTOR+2
0389   014B             		
0390   014B 3E FF       		MVI	A,255
0391   014D 32 2D FF    		STA	INT_ENABLED
0392   0150             		
0393   0150 21 47 FF    		LXI	H,TIC_COUNTER+1	;Point front panel to view TIC_Counter
0394   0153 22 26 FF    		SHLD	FPM_ADDR
0395   0156             
0396   0156             
0397   0156             
0398   0156             ;------------------------------------------------------ MAIN MENU
0399   0156             ; **        **      ***      ****   **       **
0400   0156             ; ***      ***    *** ***     **    ***      **
0401   0156             ; ****    ****   **     **    **    ****     **
0402   0156             ; ** **  ** **   **     **    **    ** **    **
0403   0156             ; **  ****  **   *********    **    **  **   **
0404   0156             ; **   **   **   *********    **    **   **  **
0405   0156             ; **   **   **   **     **    **    **    ** **
0406   0156             ; **   **   **   **     **    **    **     ****
0407   0156             ; **   **   **   **     **    **    **      ***
0408   0156             ; **   **   **   **     **   ****   **       **
0409   0156             ;------------------------------------------------------ MAIN MENU
0410   0156             
0411   0156             
0412   0156 3E 81       MAIN_MENU_FPON	MVI	A,81H		;Echo On, FP On
0413   0158 32 2C FF    		STA	GC_OPTIONS	
0414   015B             
0415   015B             
0416   015B FB          MAIN_MENU:	EI
0417   015C 3A 45 FF    		LDA	TIMER_RUN	;Start TIC interrupt (If enabled to RUN)
0418   015F D3 46       		OUT	TIMER
0419   0161 31 80 FF    		LXI	SP,STACK
0420   0164 21 5B 01    		LXI	H, MAIN_MENU	;Push Mainmenu onto stack as default return address
0421   0167 E5          		PUSH	H
0422   0168 CD AF 0B    		CALL	PRINTI		;Monitor Start, Display Welcome Message
0423   016B 0D0A4D454E55 		.text "\r\nMENU>\000"
0423   0171 3E00
0424   0173             		
0425   0173 3A 2C FF    		LDA	GC_OPTIONS
0426   0176 F6 80       		ORI	80H		;Echo On
0427   0178 32 2C FF    		STA	GC_OPTIONS
0428   017B CD 3B 0E    		CALL	LED_OFF
0429   017E             
0430   017E CD DE 0B    		CALL 	GET_CHAR	;get char
0431   0181 FE 0D       		CPI	CR
0432   0183 CA 5B 01    		JZ	MAIN_MENU
0433   0186 FE 3F       		CPI	'?'
0434   0188 CA FD 01    		JZ	DISP_HELP
0435   018B FE 2B       		CPI	'+'
0436   018D CA 69 03    		JZ	INC_FPM_ADDR
0437   0190 FE 2D       		CPI	'-'
0438   0192 CA 70 03    		JZ	DEC_FPM_ADDR
0439   0195 FE 3A       MM_0		CPI	':'
0440   0197 CA 00 06    		JZ 	GETHEXFILE	; : = START HEX FILE LOAD
0441   019A E6 5F       		ANI 	5Fh		;to upper case
0442   019C             					;Branch to Command entered
0443   019C FE 42       		CPI 	'B'		
0444   019E CA BD 03    		JZ 	DO_BAUD		; B = BAUD
0445   01A1 FE 43       		CPI 	'C'		
0446   01A3 CA 00 EE    		JZ 	GO_CPM		; C = CP/M
0447   01A6 FE 44       		CPI 	'D'		
0448   01A8 CA 51 04    		JZ 	MEM_DUMP	; D = Memory Dump
0449   01AB FE 45       		CPI 	'E'
0450   01AD CA 17 05    		JZ 	MEM_EDIT	; E = Edit Memory
0451   01B0 FE 46       		CPI 	'F'
0452   01B2 CA 05 03    		JZ 	FORMAT		; F = Format RAM DISK
0453   01B5 FE 4B       		CPI 	'K'
0454   01B7 CA 8A 0A    		JZ 	CHKSUM_RAM_SET	; K = RAM DISK Check SUM
0455   01BA FE 47       		CPI 	'G'
0456   01BC CA 47 05    		JZ 	MEM_EXEC	; G = Go (Execute at)
0457   01BF FE 4F       		CPI 	'O'
0458   01C1 CA 5C 05    		JZ 	PORT_OUT	; O = Output to port
0459   01C4 FE 49       		CPI 	'I'
0460   01C6 CA 4C 05    		JZ 	PORT_INP	; I = Input from Port
0461   01C9 FE 4D       		CPI 	'M'
0462   01CB CA 2F 04    		JZ	MEM_SELECT	; M = SELECT MEMORY SOURCE
0463   01CE FE 52       		CPI 	'R'
0464   01D0 CA F8 08    		JZ	READ_SECTOR_T	; R = READ SECTOR
0465   01D3 FE 57       		CPI 	'W'
0466   01D5 CA CB 09    		JZ	WRITE_SECTOR_T	; W = WRITE SECTOR
0467   01D8 FE 58       		CPI 	'X'
0468   01DA CA 6D 06    		JZ	XMODEM		; X = XMODEM UP OR DOWN
0469   01DD FE 54       		CPI 	'T'
0470   01DF CA 98 03    		JZ	TOGGLE_TIMER
0471   01E2 FE 4C       		CPI 	'L'
0472   01E4 CA 80 03    		JZ	TOGGLE_FP_PANEL
0473   01E7 FE 56       		CPI 	'V'
0474   01E9 CA 78 03    		JZ	VIEW_ADDR
0475   01EC             		
0476   01EC CD AF 0B    		CALL 	PRINTI		;Display Err when input is invalid
0477   01EF 0D0A494E5641 		.text "\r\nINVALID CMD\000"
0477   01F5 4C494420434D4400
0478   01FD             
0479   01FD CD AF 0B    DISP_HELP	CALL 	PRINTI		;Display Err when input is invalid
0480   0200 0D0A48454C50 		.text "\r\nHELP\r\n"
0480   0206 0D0A
0481   0208 0D0A42202D42 		.text "\r\nB -BAUD 1,2,3,4
0481   020E 41554420312C322C332C34
0482   0219 0D0A43202D43 		.text "\r\nC -CP/M"
0482   021F 502F4D
0483   0222 0D0A44202D44 		.text "\r\nD -Dump"
0483   0228 756D70
0484   022B 0D0A45202D45 		.text "\r\nE -Edit"
0484   0231 646974
0485   0234 0D0A46202D46 		.text "\r\nF -Format RAM DISK"
0485   023A 6F726D61742052414D204449534B
0486   0248 0D0A4B202D52 		.text "\r\nK -RAM DISK ChkSum"
0486   024E 414D204449534B2043686B53756D
0487   025C 0D0A4D202D52 		.text "\r\nM -RAM/ROM Select"
0487   0262 414D2F524F4D2053656C656374
0488   026F 0D0A47202D47 		.text "\r\nG -Go (Exec)"
0488   0275 6F20284578656329
0489   027D 0D0A4F202D4F 		.text "\r\nO -Output to port"
0489   0283 757470757420746F20706F7274
0490   0290 0D0A49202D49 		.text "\r\nI -Input to port"
0490   0296 6E70757420746F20706F7274
0491   02A2 0D0A52202D52 		.text "\r\nR -Read Sector"
0491   02A8 65616420536563746F72
0492   02B2 0D0A57202D57 		.text "\r\nW -Write Sector"
0492   02B8 7269746520536563746F72
0493   02C3 0D0A58202D58 		.text "\r\nX -XMODEM R,S"
0493   02C9 4D4F44454D20522C53
0494   02D2 0D0A54202D49 		.text "\r\nT -ISR_TIMER"
0494   02D8 53525F54494D4552
0495   02E0 0D0A4C202D4C 		.text "\r\nL -LED_PANEL"
0495   02E6 45445F50414E454C
0496   02EE 0D0A56202D53 		.text "\r\nV -SET FP Addr"
0496   02F4 45542046502041646472
0497   02FE 0D 0A 3E 00 		.text "\r\n>\000"
0498   0302 C3 5B 01    		JMP 	MAIN_MENU
0499   0305             
0500   0305             
0501   0305             
0502   0305             ;1 - 512 Sectors    0 to  511   0000 to 01FF
0503   0305             ;2 - 512 Sectors  512 to 1023	0200 TO 03FF
0504   0305             ;3 - 512 Sectors 1024 to 1535	0400 TO 05FF
0505   0305             ;4 - 512 Sectors 1536 to 2047	0600 TO 07FF
0506   0305             ;5 - 512 Sectors 2048 to 2559	0800 TO 09FF
0507   0305             ;6 - 512 Sectors 2560 to 3071	0A00 TO 0BFF
0508   0305             ;7 - 512 Sectors 3072 to 3583	0C00 TO 0DFF        3583 = 0x0DFF
0509   0305             
0510   0305 CD AF 0B    FORMAT		CALL 	PRINTI		;Display Err when input is invalid
0511   0308 0D0A464F524D 		.text "\r\nFORMAT?\000"
0511   030E 41543F00
0512   0312 CD DE 0B    		CALL 	GET_CHAR	;get char
0513   0315 FE 59       		CPI	'Y'
0514   0317 C0          		RNZ
0515   0318             
0516   0318 06 07       		MVI	B,7	;Bank = 7
0517   031A 11 E5 E5    		LXI	D,0E5E5H ;E5 = Blank format
0518   031D             
0519   031D CD FB 05    FORMAT_LOOP	CALL	PUT_SPACE
0520   0320 78          		MOV	A,B
0521   0321 CD 83 0B    		CALL	PUT_HEX		
0522   0324             
0523   0324 F3          		DI
0524   0325 21 00 00    		LXI	H,0	;Save Stack
0525   0328 39          		DAD	SP
0526   0329 22 36 FF    		SHLD	SP_TEMP
0527   032C             		
0528   032C 3E E8       		MVI	A,0E8H		;TXDATA HIGH, Blue LED ON
0529   032E CD 3C 0E    		CALL	LED_OUT
0530   0331             
0531   0331 31 00 00    		LXI	SP,0H	;Use SP for Formating RAM DISK
0532   0334 78          		MOV	A,B
0533   0335 D3 42       		OUT	B16	;Set A16 ;Set 1 of 8 Banks for 512KB
0534   0337 0F          		RRC		;Can't CALL/PUSH/POP, RAM is shifting under our feet
0535   0338 D3 47       		OUT	B17	;Set A17
0536   033A 0F          		RRC
0537   033B D3 43       		OUT	B18	;Set A18
0538   033D             		
0539   033D 21 00 20    		LXI	H,02000H
0540   0340 D5          FILL		PUSH	D	;11
0541   0341 D5          		PUSH	D	;11
0542   0342 D5          		PUSH	D	;11
0543   0343 D5          		PUSH	D	;11
0544   0344 2D          		DCR	L	;5 
0545   0345 C2 40 03    		JNZ	FILL	;10  58 * 256 = 14848
0546   0348 25          		DCR	H	;5
0547   0349 C2 40 03    		JNZ	FILL	;10  14848 * 32 ~= 0.5M
0548   034C             		
0549   034C AF          		XRA	A
0550   034D D3 42       		OUT	B16	;Set A16 ;Bank 0
0551   034F D3 47       		OUT	B17	;Set A17
0552   0351 D3 43       		OUT	B18	;Set A18
0553   0353             		
0554   0353 2A 36 FF    		LHLD	SP_TEMP
0555   0356 F9          		SPHL		;SP = Restored
0556   0357 FB          		EI
0557   0358             
0558   0358 05          		DCR	B
0559   0359 C2 1D 03    		JNZ	FORMAT_LOOP
0560   035C             
0561   035C 01 4F 0E    		LXI	B,0E4FH		;Write the initial Directory with PIP and XM
0562   035F CD 06 09    		CALL	READ_SEC_DB
0563   0362 01 00 00    		LXI	B,0
0564   0365 CD D0 09    		CALL	WRITE_SEC
0565   0368             
0566   0368 C9          		RET
0567   0369             
0568   0369             
0569   0369 2A 26 FF    INC_FPM_ADDR	LHLD	FPM_ADDR
0570   036C 23          		INX	H
0571   036D C3 74 03    		JMP	DFAR
0572   0370 2A 26 FF    DEC_FPM_ADDR	LHLD	FPM_ADDR
0573   0373 2B          		DCX	H
0574   0374 22 26 FF    DFAR		SHLD	FPM_ADDR
0575   0377 C9          		RET
0576   0378             
0577   0378 CD A7 05    VIEW_ADDR	CALL	SPACE_GET_WORD	;Input start address
0578   037B EB          		XCHG			;HL = ADDRESS
0579   037C 22 26 FF    		SHLD	FPM_ADDR	
0580   037F C9          		RET
0581   0380             
0582   0380             
0583   0380 3A 2C FF    TOGGLE_FP_PANEL	LDA	GC_OPTIONS
0584   0383 EE 01       		XRI	1
0585   0385 32 2C FF    		STA	GC_OPTIONS
0586   0388 E6 01       		ANI	1
0587   038A CD AF 0B    		CALL 	PRINTI		;Display Err when input is invalid
0588   038D 2046503A00  		.text " FP:\000"
0589   0392 CD 83 0B    		CALL	PUT_HEX
0590   0395 C3 9F 03    		JMP	TT_0
0591   0398             
0592   0398 3A 45 FF    TOGGLE_TIMER	LDA	TIMER_RUN
0593   039B B7          		ORA	A
0594   039C CA A4 03    		JZ	TT_1
0595   039F CD 3B 0E    TT_0		CALL	LED_OFF
0596   03A2 AF          		XRA	A
0597   03A3 3D          		DCR	A
0598   03A4 3C          TT_1		INR	A
0599   03A5 32 45 FF    		STA	TIMER_RUN
0600   03A8 D3 46       		OUT	TIMER
0601   03AA CD AF 0B    		CALL 	PRINTI		;Display Err when input is invalid
0602   03AD 204953525F54 		.text " ISR_TIMER:\000"
0602   03B3 494D45523A00
0603   03B9 CD 83 0B    		CALL	PUT_HEX
0604   03BC C9          		RET
0605   03BD             		
0606   03BD             
0607   03BD             
0608   03BD CD DE 0B    DO_BAUD		CALL 	GET_CHAR	;get char
0609   03C0 F3          		DI
0610   03C1 FE 31       		CPI 	'1'		
0611   03C3 CA D6 03    		JZ 	DO_BAUD1	; BAUD 9600
0612   03C6 FE 32       		CPI 	'2'		
0613   03C8 CA E8 03    		JZ 	DO_BAUD2	; BAUD 19200
0614   03CB FE 33       		CPI 	'3'		
0615   03CD CA FA 03    		JZ 	DO_BAUD3	; BAUD 38400 (Stay in IRQ)
0616   03D0 FE 34       		CPI 	'4'		
0617   03D2 CA 0B 04    		JZ 	DO_BAUD4	; BAUD 38400 (Quick Return)
0618   03D5 C9          		RET
0619   03D6             
0620   03D6 CD 29 04    DO_BAUD1	CALL	BAUD_SET	;Save this Routine as address to set Baud
0621   03D9 21 26 27    		LXI	H,IR1_ROM	;Source
0622   03DC 01 3B 00    		LXI	B,IR1_SIZE	;#Bytes to copy
0623   03DF E5          		PUSH	H
0624   03E0 21 FB 0B    		LXI	H,PUT_CHAR1
0625   03E3 3E 01       		MVI	A,1		;TIMER ON
0626   03E5 C3 19 04    		JMP	DB_EXIT
0627   03E8             		
0628   03E8 CD 29 04    DO_BAUD2	CALL	BAUD_SET	;Save this Routine as address to set Baud
0629   03EB 21 61 27    		LXI	H,IR2_ROM	;Source
0630   03EE 01 32 00    		LXI	B,IR2_SIZE	;#Bytes to copy
0631   03F1 E5          		PUSH	H
0632   03F2 21 1A 0C    		LXI	H,PUT_CHAR2
0633   03F5 3E 01       		MVI	A,1		;TIMER ON
0634   03F7 C3 19 04    		JMP	DB_EXIT
0635   03FA             
0636   03FA CD 29 04    DO_BAUD3	CALL	BAUD_SET	;Save this Routine as address to set Baud
0637   03FD 21 93 27    		LXI	H,IR3_ROM	;Source
0638   0400 01 36 00    		LXI	B,IR3_SIZE	;#Bytes to copy
0639   0403 E5          		PUSH	H
0640   0404 21 39 0C    		LXI	H,PUT_CHAR3
0641   0407 AF          		XRA	A		;TIMER OFF
0642   0408 C3 19 04    		JMP	DB_EXIT
0643   040B             
0644   040B CD 29 04    DO_BAUD4	CALL	BAUD_SET	;Save this Routine as address to set Baud
0645   040E 21 C9 27    		LXI	H,IR4_ROM	;Source
0646   0411 01 59 00    		LXI	B,IR4_SIZE	;#Bytes to copy
0647   0414 E5          		PUSH	H
0648   0415 21 39 0C    		LXI	H,PUT_CHAR3
0649   0418 AF          		XRA	A		;TIMER OFF
0650   0419             
0651   0419 D3 46       DB_EXIT		OUT	TIMER
0652   041B 32 45 FF    		STA	TIMER_RUN
0653   041E 22 3F FF    		SHLD	PC_PTR
0654   0421 E1          		POP	H
0655   0422 11 F1 EE    		LXI	D,ISR_RAM	;Destination
0656   0425 CD 3F 0F    		CALL	COPY_RAM_BC
0657   0428 C9          		RET
0658   0429             
0659   0429 E1          BAUD_SET	POP	H		;Saves Return address as the BAUD Routine to be set
0660   042A E5          		PUSH	H
0661   042B 22 41 FF    		SHLD	BAUD_SET_PTR
0662   042E C9          		RET
0663   042F             
0664   042F             
0665   042F 21 43 FF    MEM_SELECT	LXI	H,MEM_SOURCE
0666   0432 3E 01       		MVI	A,1
0667   0434 AE          		XRA	M
0668   0435 77          		MOV	M,A
0669   0436             
0670   0436 3A 43 FF    MEM_DISPLAY	LDA	MEM_SOURCE
0671   0439 B7          		ORA	A
0672   043A CA 47 04    		JZ	MD_ROM
0673   043D CD AF 0B    		CALL	PRINTI
0674   0440 0D0A52414D00 		.text "\r\nRAM\000"
0675   0446 C9          		RET
0676   0447 CD AF 0B    MD_ROM		CALL	PRINTI
0677   044A 0D0A524F4D00 		.text "\r\nROM\000"
0678   0450 C9          		RET
0679   0451             
0680   0451             
0681   0451             ;=============================================================================
0682   0451             ;MEMORY DUMP
0683   0451             ;-----------------------------------------------------------------------------
0684   0451 CD A7 05    MEM_DUMP:	CALL	SPACE_GET_WORD	;Input start address
0685   0454 EB          		XCHG			;HL = Start
0686   0455 CD A7 05    		CALL	SPACE_GET_WORD	;Input end address (DE = end)
0687   0458 CD 36 04    		CALL	MEM_DISPLAY
0688   045B             
0689   045B CD 4C 0B    MEM_DUMP_LP:	CALL	PUT_NEW_LINE
0690   045E CD 95 04    		CALL	DUMP_LINE	;Dump 16 byte lines (advances HL)
0691   0461 C8          		RZ			;RETURN WHEN HL=DE
0692   0462 7D          		MOV	A,L
0693   0463 B7          		ORA	A
0694   0464 C2 5B 04    		JNZ	MEM_DUMP_LP	;Dump 1 Page, then prompt for continue
0695   0467 CD 6D 04    		CALL	GET_CONTINUE
0696   046A C3 5B 04    		JMP	MEM_DUMP_LP
0697   046D             
0698   046D             
0699   046D CD 4C 0B    GET_CONTINUE	CALL	PUT_NEW_LINE
0700   0470 CD AF 0B    		CALL	PRINTI
0701   0473 507265737320 		.text "Press any key to continue\000"
0701   0479 616E79206B657920746F20636F6E74696E756500
0702   048D CD DE 0B    		CALL	GET_CHAR
0703   0490 FE 1B       		CPI	27
0704   0492 C0          		RNZ
0705   0493 E1          		POP	H		;Scrap return address
0706   0494 C9          		RET
0707   0495             
0708   0495             
0709   0495             ;-----------------------------------------------------------------------------
0710   0495             ;DUMP_LINE -- Dumps a line
0711   0495             ;xxx0:  <pre spaces> XX XX XX XX XX After spaces | ....ASCII....
0712   0495             ;-----------------------------------------------------------------------------
0713   0495 C5          DUMP_LINE:	PUSH	B		;+1
0714   0496 E5          		PUSH	H		;+2 Save H for 2nd part of display
0715   0497 E5          		PUSH	H		;+3 Start line with xxx0 address
0716   0498 7D          		MOV	A,L
0717   0499 E6 F0       		ANI	0F0h		;Mask FFF0
0718   049B 6F          		MOV	L,A
0719   049C CD 69 0B    		CALL	PUT_HL		;Print Address
0720   049F CD AF 0B    		CALL	PRINTI
0721   04A2 3A 20 00    		.text ": \000"
0722   04A5 E1          		POP	H		;-3
0723   04A6 7D          		MOV	A,L
0724   04A7 E6 0F       		ANI	0Fh		;Fetch how many prespaces to print
0725   04A9 4F          		MOV	C,A
0726   04AA 47          		MOV	B,A		;Save count of prespaces for part 2 of display
0727   04AB CD 09 05    		CALL	PUT_3C_SPACES
0728   04AE             
0729   04AE CD FB 05    DL_P1L		CALL	PUT_SPACE
0730   04B1 CD A2 EE    		CALL	READ_MEMORY
0731   04B4 CD 74 0B    		CALL	PUT_BYTE
0732   04B7 CD 03 05    		CALL	CMP_HL_DE
0733   04BA CA C7 04    		JZ	DL_P1E
0734   04BD 23          		INX	H
0735   04BE 7D          		MOV	A,L
0736   04BF E6 0F       		ANI	0Fh
0737   04C1 C2 AE 04    		JNZ	DL_P1L
0738   04C4 C3 CF 04    		JMP	DL_P2
0739   04C7             
0740   04C7 7D          DL_P1E		MOV	A,L
0741   04C8 2F          		CMA
0742   04C9 E6 0F       		ANI	0Fh
0743   04CB 4F          		MOV	C,A
0744   04CC CD 09 05    		CALL	PUT_3C_SPACES
0745   04CF             
0746   04CF CD AF 0B    DL_P2		CALL	PRINTI		;Print Seperator between part 1 and part 2
0747   04D2 20 7C 20 00 		.text " | \000"
0748   04D6             
0749   04D6 78          DL_PSL2		MOV	A,B		;Print prespaces for part 2
0750   04D7 B7          		ORA	A
0751   04D8 CA E2 04    		JZ	DL_PSE2
0752   04DB CD FB 05    		CALL	PUT_SPACE
0753   04DE 05          		DCR	B
0754   04DF C3 D6 04    		JMP	DL_PSL2
0755   04E2             DL_PSE2
0756   04E2 E1          		POP	H		;-2
0757   04E3 C1          		POP	B		;-1
0758   04E4 CD A2 EE    DL_P2L		CALL	READ_MEMORY
0759   04E7 FE 20       		CPI	' '		;A - 20h	Test for Valid ASCII characters
0760   04E9 F2 EE 04    		JP	DL_P2K1
0761   04EC 3E 2E       		MVI	A,'.'				;Replace with . if not ASCII
0762   04EE FE 7F       DL_P2K1		CPI	07Fh		;A - 07Fh
0763   04F0 FA F5 04    		JM	DL_P2K2
0764   04F3 3E 2E       		MVI	A,'.'
0765   04F5 CD F6 0B    DL_P2K2		CALL	PUT_CHAR
0766   04F8             
0767   04F8 CD 03 05    		CALL	CMP_HL_DE
0768   04FB C8          		RZ
0769   04FC 23          		INX	H
0770   04FD 7D          		MOV	A,L
0771   04FE E6 0F       		ANI	0Fh
0772   0500 C2 E4 04    		JNZ	DL_P2L
0773   0503             
0774   0503             ;-----------------------------------------------------------------------------
0775   0503             ;Compare HL with DE
0776   0503             ;Exit:		Z=1 if HL=DE
0777   0503             ;		M=1 if DE > HL
0778   0503 7C          CMP_HL_DE	MOV	A,H
0779   0504 BA          		CMP	D		;H-D
0780   0505 C0          		RNZ			;M flag set if D > H
0781   0506 7D          		MOV	A,L
0782   0507 BB          		CMP	E		;L-E
0783   0508 C9          		RET
0784   0509             
0785   0509             
0786   0509 79          PUT_3C_SPACES	MOV	A,C		;Print 3C Spaces
0787   050A B7          		ORA	A
0788   050B C8          		RZ
0789   050C 0D          		DCR	C		;Count down Prespaces
0790   050D CD AF 0B    		CALL	PRINTI		;Print pre spaces
0791   0510 20 20 20 00 		.text "   \000"
0792   0514 C3 09 05    		JMP	PUT_3C_SPACES
0793   0517             
0794   0517             
0795   0517             ;-----------------------------------------------------------------------------
0796   0517             ;EDIT MEMORY
0797   0517             ;Edit memory from a starting address until X is pressed.
0798   0517             ;Display mem loc, contents, and results of write.
0799   0517             ;-----------------------------------------------------------------------------
0800   0517 CD A7 05    MEM_EDIT:	CALL	SPACE_GET_WORD	;Input Address
0801   051A EB          		XCHG			;HL = Address to edit
0802   051B CD 36 04    		CALL	MEM_DISPLAY
0803   051E CD 4C 0B    ME_LP		CALL	PUT_NEW_LINE
0804   0521 CD 69 0B    		CALL	PUT_HL		;Print current contents of memory
0805   0524 CD FB 05    		CALL	PUT_SPACE
0806   0527 3E 3A       		MVI	A, ':'
0807   0529 CD F6 0B    		CALL	PUT_CHAR
0808   052C CD FB 05    		CALL	PUT_SPACE
0809   052F CD A2 EE    		CALL	READ_MEMORY
0810   0532 CD 74 0B    		CALL	PUT_BYTE
0811   0535 CD 71 05    		CALL	SPACE_GET_BYTE	;Input new value or Exit if invalid
0812   0538 D8          		RC			;Exit to Command Loop
0813   0539 77          		MOV	M, A		;or Save new value
0814   053A CD FB 05    		CALL	PUT_SPACE
0815   053D CD A2 EE    		CALL	READ_MEMORY
0816   0540 CD 74 0B    		CALL	PUT_BYTE
0817   0543 23          		INX	H		;Advance to next location
0818   0544 C3 1E 05    		JMP	ME_LP		;repeat input
0819   0547             
0820   0547             
0821   0547             ;=============================================================================
0822   0547             ;	MEM_EXEC - Execute at
0823   0547             ;	Get an address and jump to it
0824   0547             ;-----------------------------------------------------------------------------
0825   0547 CD A7 05    MEM_EXEC:	CALL	SPACE_GET_WORD	;Input address
0826   054A EB          		XCHG			;HL = Address
0827   054B E9          		PCHL			;Jump to HL
0828   054C             
0829   054C             
0830   054C             ;===============================================
0831   054C             ;Input from port, print contents
0832   054C CD 71 05    PORT_INP:	CALL	SPACE_GET_BYTE
0833   054F 47          		MOV	B, A
0834   0550 CD FB 05    		CALL	PUT_SPACE
0835   0553 0E DB       		MVI	C, 0DBh
0836   0555 CD 65 05    		CALL	GOBYTE
0837   0558 CD 74 0B    		CALL	PUT_BYTE
0838   055B C9          		RET
0839   055C             
0840   055C             ;Get a port address, write byte out
0841   055C CD 71 05    PORT_OUT:	CALL	SPACE_GET_BYTE
0842   055F 47          		MOV	B, A
0843   0560 CD 71 05    		CALL	SPACE_GET_BYTE
0844   0563 0E D3       		MVI	C, 0D3h
0845   0565             
0846   0565             ;===============================================
0847   0565             ;GOBYTE -- Push a two-byte instruction and RET
0848   0565             ;         and jump to it
0849   0565             ;
0850   0565             ;pre: B register contains operand
0851   0565             ;pre: C register contains opcode
0852   0565             ;post: code executed, returns to caller
0853   0565             ;-----------------------------------------------
0854   0565 21 00 00    GOBYTE:		LXI	H, 0000
0855   0568 39          		DAD	SP	;HL = STACK
0856   0569 2B          		DCX	H
0857   056A 36 C9       		MVI	M, 0C9h	;Stuff RET instruction in STACK RAM
0858   056C 2B          		DCX	H
0859   056D 70          		MOV	M, B	;Stuff Port
0860   056E 2B          		DCX	H
0861   056F 71          		MOV	M, C	;Stuff Input or Output instruction
0862   0570 E9          		PCHL
0863   0571             
0864   0571             
0865   0571             ;=============================================================================
0866   0571 CD FB 05    SPACE_GET_BYTE	CALL	PUT_SPACE
0867   0574             
0868   0574             ;=============================================================================
0869   0574             ;GET_BYTE -- Get byte from console as hex
0870   0574             ;
0871   0574             ;in:	Nothing
0872   0574             ;out:	A = Byte (if CY=0)
0873   0574             ;	A = non-hex char input (if CY=1)
0874   0574             ;-----------------------------------------------------------------------------
0875   0574 CD C9 05    GET_BYTE:	CALL	GET_HEX_CHAR	;Get 1st HEX CHAR
0876   0577 D2 81 05    		JNC	GB_1
0877   057A FE 20       		CPI	' '		;Exit if not HEX CHAR (ignoring SPACE)
0878   057C CA 74 05    		JZ	GET_BYTE	;Loop back if first char is a SPACE
0879   057F 37          		STC			;Set Carry
0880   0580 C9          		RET			;or EXIT with delimiting char
0881   0581 D5          GB_1		PUSH	D		;Process 1st HEX CHAR
0882   0582 07          		RLC
0883   0583 07          		RLC
0884   0584 07          		RLC
0885   0585 07          		RLC
0886   0586 E6 F0       		ANI	0F0h
0887   0588 57          		MOV	D,A
0888   0589 CD C9 05    		CALL	GET_HEX_CHAR
0889   058C D2 9C 05    		JNC	GB_2		;If 2nd char is HEX CHAR
0890   058F FE 20       		CPI	' '
0891   0591 CA 9F 05    		JZ	GB_UNDO		;If 2nd char is SPACE, Move 1st back to lower nibble
0892   0594 FE 0D       		CPI	CR
0893   0596 CA 9F 05    		JZ	GB_UNDO		;If 2nd char is CR, Move 1st back to lower nibble		
0894   0599 37          		STC			;Set Carry
0895   059A D1          		POP	D
0896   059B C9          		RET			;or EXIT with delimiting char
0897   059C B2          GB_2		ORA	D
0898   059D D1          		POP	D
0899   059E C9          		RET
0900   059F 7A          GB_UNDO		MOV	A,D		;Move 1st back to lower nibble
0901   05A0 0F          		RRC
0902   05A1 0F          		RRC
0903   05A2 0F          		RRC
0904   05A3 0F          		RRC
0905   05A4 B7          GB_RET		ORA	A
0906   05A5 D1          		POP	D
0907   05A6 C9          		RET
0908   05A7             
0909   05A7             
0910   05A7             ;=============================================================================
0911   05A7 CD FB 05    SPACE_GET_WORD	CALL	PUT_SPACE
0912   05AA             
0913   05AA             ;=============================================================================
0914   05AA             ;GET_WORD -- Get word from console as hex
0915   05AA             ;
0916   05AA             ;in:	Nothing
0917   05AA             ;out:	A = non-hex char input
0918   05AA             ;	DE = Word
0919   05AA             ;-----------------------------------------------------------------------------
0920   05AA 11 00 00    GET_WORD:	LXI	D,0
0921   05AD CD C9 05    		CALL	GET_HEX_CHAR	;Get 1st HEX CHAR
0922   05B0 D2 BA 05    		JNC	GW_LP
0923   05B3 FE 20       		CPI	' '		;Exit if not HEX CHAR (ignoring SPACE)
0924   05B5 CA AA 05    		JZ	GET_WORD	;Loop back if first char is a SPACE
0925   05B8 B7          		ORA	A		;Clear Carry
0926   05B9 C9          		RET			;or EXIT with delimiting char
0927   05BA 5F          GW_LP		MOV	E,A
0928   05BB CD C9 05    		CALL	GET_HEX_CHAR
0929   05BE D8          		RC			;EXIT when a delimiting char is entered
0930   05BF EB          		XCHG			;Else, shift new HEX Char Value into DE
0931   05C0 29          		DAD	H
0932   05C1 29          		DAD	H
0933   05C2 29          		DAD	H
0934   05C3 29          		DAD	H
0935   05C4 EB          		XCHG
0936   05C5 B3          		ORA	E
0937   05C6 C3 BA 05    		JMP	GW_LP
0938   05C9             
0939   05C9             
0940   05C9             
0941   05C9             ;===============================================
0942   05C9             ;Get HEX CHAR
0943   05C9             ;in:	Nothing
0944   05C9             ;out:	A = Value of HEX Char when CY=0
0945   05C9             ;	A = Received (non-hex) char when CY=1
0946   05C9             ;-----------------------------------------------
0947   05C9 CD DE 0B    GET_HEX_CHAR:	CALL	GET_CHAR
0948   05CC FE 30       		CPI	'0'
0949   05CE FA EA 05    		JM	GHC_NOT_RET
0950   05D1 FE 3A       		CPI	'9'+1
0951   05D3 FA EE 05    		JM	GHC_NRET
0952   05D6 FE 41       		CPI	'A'
0953   05D8 FA EA 05    		JM	GHC_NOT_RET
0954   05DB FE 47       		CPI	'F'+1
0955   05DD FA EC 05    		JM	GHC_ARET
0956   05E0 FE 61       		CPI	'a'
0957   05E2 FA EA 05    		JM	GHC_NOT_RET
0958   05E5 FE 67       		CPI	'f'+1
0959   05E7 FA EC 05    		JM	GHC_ARET
0960   05EA 37          GHC_NOT_RET	STC
0961   05EB C9          		RET
0962   05EC D6 07       GHC_ARET	SUI	07h
0963   05EE E6 0F       GHC_NRET	ANI	0Fh
0964   05F0 C9          		RET
0965   05F1             
0966   05F1             
0967   05F1             
0968   05F1             
0969   05F1             ;===============================================
0970   05F1             ;ASCHEX -- Convert ASCII coded hex to nibble
0971   05F1             ;
0972   05F1             ;pre:	A register contains ASCII coded nibble
0973   05F1             ;post:	A register contains nibble
0974   05F1             ;-----------------------------------------------
0975   05F1 D6 30       ASCHEX:		SUI	30h
0976   05F3 FE 0A       		CPI	0Ah
0977   05F5 F8          		RM
0978   05F6 E6 5F       		ANI	5Fh
0979   05F8 D6 07       		SUI	07h
0980   05FA C9          		RET
0981   05FB             
0982   05FB             ;===============================================
0983   05FB             ;PUT_SPACE -- Print a space to the console
0984   05FB             ;
0985   05FB             ;pre: none
0986   05FB             ;post: 0x20 printed to console
0987   05FB             ;-----------------------------------------------
0988   05FB 3E 20       PUT_SPACE:	MVI	A, ' '
0989   05FD C3 F6 0B    		JMP	PUT_CHAR
0990   0600             
0991   0600             
0992   0600             
0993   0600             ;----------------------------------------------------------------------------------------------------; ASCII HEXFILE TRANSFER
0994   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
0995   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
0996   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
0997   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
0998   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
0999   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1000   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1001   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1002   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1003   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1004   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1005   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1006   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1007   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1008   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1009   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1010   0600             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1011   0600             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1012   0600             ;----------------------------------------------------------------------------------------------------; ASCII HEXFILE TRANSFER
1013   0600 CD F1 08    GETHEXFILE	CALL	ECHO_FP_OFF	;TURN OFF ECHO
1014   0603 AF          		XRA	A
1015   0604 5F          		MOV	E,A		;ZERO ERROR COUNTER
1016   0605 C3 10 06    		JMP	GHDOLINE
1017   0608             
1018   0608 CD DE 0B    GHWAIT		CALL	GET_CHAR
1019   060B FE 3A       		CPI	':'
1020   060D C2 08 06    		JNZ	GHWAIT
1021   0610             
1022   0610 CD 74 05    GHDOLINE	CALL	GET_BYTE	;GET BYTE COUNT
1023   0613 4F          		MOV	C,A		;BYTE COUNTER
1024   0614 57          		MOV	D,A		;CHECKSUM
1025   0615             
1026   0615 CD 74 05    		CALL	GET_BYTE	;GET HIGH ADDRESS
1027   0618 67          		MOV	H,A
1028   0619 82          		ADD	D
1029   061A 57          		MOV	D,A
1030   061B             
1031   061B CD 74 05    		CALL	GET_BYTE	;GET LOW ADDRESS
1032   061E 6F          		MOV	L,A
1033   061F 82          		ADD	D
1034   0620 57          		MOV	D,A
1035   0621             
1036   0621 CD 74 05    		CALL	GET_BYTE	;GET RECORD TYPE
1037   0624 FE 01       		CPI	1
1038   0626 CA 45 06    		JZ	GHEND	;IF RECORD TYPE IS 01 THEN END
1039   0629 82          		ADD	D
1040   062A 57          		MOV	D,A
1041   062B             
1042   062B CD 74 05    GHLOOP		CALL	GET_BYTE	;GET DATA
1043   062E 77          		MOV	M,A
1044   062F 82          		ADD	D
1045   0630 57          		MOV	D,A
1046   0631 23          		INX	H
1047   0632             
1048   0632 0D          		DCR	C
1049   0633 C2 2B 06    		JNZ	GHLOOP
1050   0636             
1051   0636 CD 74 05    		CALL	GET_BYTE	;GET CHECKSUM
1052   0639 82          		ADD	D
1053   063A CA 08 06    		JZ	GHWAIT
1054   063D 1C          		INR	E
1055   063E C2 08 06    		JNZ	GHWAIT
1056   0641 1D          		DCR	E
1057   0642 C3 08 06    		JMP	GHWAIT
1058   0645             
1059   0645 CD AF 0B    GHEND		CALL	PRINTI
1060   0648 0D0A48455820 		.text "\r\nHEX TRANSFER COMPLETE ERRORS=\000"
1060   064E 5452414E5346455220434F4D504C455445204552524F52533D00
1061   0668 7B          		MOV	A,E
1062   0669 CD 74 0B    		CALL	PUT_BYTE
1063   066C C9          		RET
1064   066D             
1065   066D             
1066   066D             ;-----------------------------------------------------------------------------------; XMODEM ROUTINES
1067   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1068   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1069   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1070   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1071   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1072   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1073   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1074   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1075   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1076   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1077   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1078   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1079   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1080   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1081   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1082   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1083   066D             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
1084   066D             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
1085   066D             ;-----------------------------------------------------------------------------------; XMODEM ROUTINES
1086   066D             
1087   066D             SOH	.equ	1	;Start of Header
1088   066D             EOT	.equ	4	;End of Transmission
1089   066D             ACK	.equ	6
1090   066D             DLE	.equ	16
1091   066D             DC1	.equ	17	; (X-ON)
1092   066D             DC3	.equ	19	; (X-OFF)
1093   066D             NAK	.equ	21
1094   066D             SYN	.equ	22
1095   066D             CAN	.equ	24	;(Cancel)
1096   066D             
1097   066D             ;---------------------------------------------------------------------------------
1098   066D             ;XMODEM MENU
1099   066D             ;ENTRY:	TOP OF STACK HOLDS RETURN ADDRESS (EXIT MECHANISM IF XMODEM IS CANCELLED)
1100   066D             ;---------------------------------------------------------------------------------
1101   066D CD FB 05    XMODEM		CALL	PUT_SPACE
1102   0670 CD DE 0B    		CALL	GET_CHAR	;get char
1103   0673 E6 5F       		ANI	5Fh		;to upper case
1104   0675 FE 53       		CPI	'S'
1105   0677 CA 85 06    		JZ	XMDN		; S = Send (Download) (Save Disk image to PC/Terminal)
1106   067A FE 52       		CPI	'R'
1107   067C CA AD 06    		JZ	XMUP		; R = Receive / UPLOAD (Load PC to MC)
1108   067F CD AF 0B    		CALL 	PRINTI
1109   0682 3F 00       		.text "?\000"
1110   0684 C9          		RET
1111   0685             
1112   0685             ;---------------------------------------------------------------------------------
1113   0685             ;XMDN - XMODEM DOWNLOAD (send file from IMSAI to Terminal)
1114   0685             ;INPUT STARTING ADDRESS AND COUNT OF BLOCKS (WORD)
1115   0685             ;WAIT FOR 'C' OR NAK FROM HOST TO START CRC/CS TRANSFER
1116   0685             ;---------------------------------------------------------------------------------
1117   0685 CD F1 08    XMDN		CALL	ECHO_FP_OFF
1118   0688             
1119   0688             		
1120   0688             
1121   0688             	;HL = Address of data to send from the IMSAI 8080
1122   0688             	;DE = Count of Blocks to send.
1123   0688             
1124   0688 CD C2 06    		CALL	XMS_INIT	;Starts the Seq, Sets the CS/CRC format
1125   068B             					;Cancelled Transfers will cause a RET
1126   068B 21 00 00    		LXI	H,0		;Sector 0
1127   068E C3 9B 06    		JMP	XMDN_0
1128   0691             		
1129   0691 CD 06 09    XMDN_LP		CALL	READ_SEC_DB
1130   0694 CD E6 06    		CALL	XMS_SEND	;Sends the packet @HL, Resends if NAK
1131   0697             					;Cancelled Transfers will cause a RET
1132   0697 2A 34 FF    		LHLD	XSECTOR
1133   069A 23          		INX	H
1134   069B 22 34 FF    XMDN_0		SHLD	XSECTOR
1135   069E 44          		MOV	B,H
1136   069F 4D          		MOV	C,L
1137   06A0             
1138   06A0 11 00 F2    		LXI	D,-3584		;Total 3584 Sectors in RAM
1139   06A3 19          		DAD	D
1140   06A4 D2 91 06    		JNC	XMDN_LP
1141   06A7             
1142   06A7 CD 3E 07    		CALL	XMS_EOT		;Send End of Transmission
1143   06AA C3 E8 08    		JMP	PURGE
1144   06AD             
1145   06AD             
1146   06AD             ;---------------------------------------------------------------------------------
1147   06AD             ;XMUP - XMODEM UPLOAD (receive file from Terminal to IMSAI 8080)
1148   06AD             ;INPUT STARTING ADDRESS
1149   06AD             ;SEND 'C' OR NAK TO HOST TO START CRC/CS TRANSFER
1150   06AD             ;---------------------------------------------------------------------------------
1151   06AD CD F1 08    XMUP		CALL	ECHO_FP_OFF
1152   06B0             
1153   06B0             
1154   06B0 21 00 00    		LXI	H,0		;Sector 0
1155   06B3 22 34 FF    		SHLD	XSECTOR
1156   06B6             
1157   06B6 CD 94 07    		CALL	XMR_INIT	;Starts the transfer & Receives first PACKET
1158   06B9             					;Cancelled Transfers will cause a RET
1159   06B9             
1160   06B9 CD D0 07    XMUP_LP		CALL	XMR_RECV	;Receives the next packet @HL, Resends if NAK
1161   06BC             					;Cancelled Transfers will cause a RET
1162   06BC DA B9 06    		JC	XMUP_LP		;Jump until EOT Received
1163   06BF C3 E8 08    		JMP	PURGE		;Purge and RET
1164   06C2             
1165   06C2             
1166   06C2             
1167   06C2             ;---------------------------------------------------------------------------------
1168   06C2             ;INIT FOR SENDING XMODEM PROTOCOL, GET NAK OR 'C', SAVE THE XMTYPE
1169   06C2             ;---------------------------------------------------------------------------------
1170   06C2 3E 01       XMS_INIT	MVI	A,1		;First SEQ number
1171   06C4 32 32 FF    		STA	XMSEQ
1172   06C7             
1173   06C7 06 0A       		MVI	B,10		;10 retries for initiating the transfer
1174   06C9 3E 2D       XMS_INIT_LP	MVI	A,45		;GET CHAR, 45 SECONDS TIMEOUT (EXPECT C OR NAK)
1175   06CB CD BB 08    		CALL	TIMED_GETCHAR
1176   06CE DA 70 07    		JC	XM_CANCEL	;Cancel if Host Timed out
1177   06D1             
1178   06D1 FE 15       		CPI	NAK		;If NAK, Start Checksum Download
1179   06D3 CA E2 06    		JZ	XMS_DO
1180   06D6 FE 43       		CPI	'C'		;If C, Start CRC Download
1181   06D8 CA E2 06    		JZ	XMS_DO
1182   06DB 05          		DCR	B		;Count down Retries
1183   06DC C2 C9 06    		JNZ	XMS_INIT_LP
1184   06DF C3 70 07    		JMP	XM_CANCEL	;Cancel XModem if all retries exhausted
1185   06E2             
1186   06E2 32 33 FF    XMS_DO		STA	XMTYPE
1187   06E5 C9          		RET
1188   06E6             
1189   06E6             ;---------------------------------------------------------------------------------
1190   06E6             ;SEND A PACKET (RESEND UPON NAK)
1191   06E6             ;---------------------------------------------------------------------------------
1192   06E6 21 80 FF    XMS_SEND	LXI	H,SECTOR_BUFFER	;Default Buffer
1193   06E9             
1194   06E9 3E 01       		MVI	A,SOH		;SEND THE HEADER FOR CRC OR CHECKSUM
1195   06EB CD F6 0B    		CALL	PUT_CHAR
1196   06EE 3A 32 FF    		LDA	XMSEQ
1197   06F1 CD F6 0B    		CALL	PUT_CHAR
1198   06F4 2F          		CMA
1199   06F5 CD F6 0B    		CALL	PUT_CHAR
1200   06F8 11 00 00    		LXI	D,0000H		;Init DE=0000 (CRC Accumulator)
1201   06FB 0E 00       		MVI	C,0		;Init C=00 (CS Accumulator)
1202   06FD 06 80       		MVI	B,128		;Count 128 bytes per block
1203   06FF 7E          XMS_BLP		MOV	A,M		;Fetch bytes to send  -------------------\
1204   0700 CD F6 0B    		CALL	PUT_CHAR	;Send them
1205   0703 81          		ADD	C		;Update the CS
1206   0704 4F          		MOV	C,A
1207   0705 7E          		MOV	A,M
1208   0706 CD 8B 08    		CALL	CRC_UPDATE	;Update the CRC
1209   0709 23          		INX	H		;Advance to next byte in block
1210   070A 05          		DCR	B		;Count down bytes sent
1211   070B C2 FF 06    		JNZ	XMS_BLP		;Loop back until 128 bytes are sent -----^
1212   070E 3A 33 FF    		LDA	XMTYPE
1213   0711 FE 15       		CPI	NAK		;If NAK, send Checksum
1214   0713 CA 1B 07    		JZ	XMS_CS		;----------------------v
1215   0716 7A          		MOV	A,D		;else, Send the CRC next
1216   0717 CD F6 0B    		CALL	PUT_CHAR
1217   071A 4B          		MOV	C,E
1218   071B 79          XMS_CS		MOV	A,C		;----------------------/
1219   071C CD F6 0B    		CALL	PUT_CHAR
1220   071F             					;Packet Sent, get Ack/Nak Response
1221   071F 3E 2D       		MVI	A,45		;GET CHAR, 45 SECONDS TIMEOUT (EXPECT C OR NAK)
1222   0721 CD BB 08    		CALL	TIMED_GETCHAR
1223   0724             
1224   0724 DA 70 07    		JC	XM_CANCEL	;Cancel download if no response within 45 seconds
1225   0727 FE 15       		CPI	NAK
1226   0729 CA E6 06    		JZ	XMS_SEND	;Loop back to resend packet
1227   072C FE 18       		CPI	CAN
1228   072E CA 70 07    		JZ	XM_CANCEL
1229   0731 FE 06       		CPI	ACK
1230   0733 C2 70 07    		JNZ	XM_CANCEL
1231   0736             
1232   0736 3A 32 FF    		LDA	XMSEQ
1233   0739 3C          		INR	A		;NEXT SEQ
1234   073A 32 32 FF    		STA	XMSEQ
1235   073D C9          		RET
1236   073E             
1237   073E             
1238   073E             ;---------------------------------------------------------------------------------
1239   073E             ;XMDN - DOWNLOAD XMODEM PACKET
1240   073E             ;---------------------------------------------------------------------------------
1241   073E 3E 04       XMS_EOT		MVI	A,EOT		;HANDLE THE END OF TRANSFER FOR CRC OR CHECKSUM
1242   0740 CD F6 0B    		CALL	PUT_CHAR
1243   0743 3E 2D       		MVI	A,45		;GET CHAR, 45 SECONDS TIMEOUT (EXPECT C OR NAK)
1244   0745 CD BB 08    		CALL	TIMED_GETCHAR
1245   0748 DA 70 07    		JC	XM_CANCEL
1246   074B FE 15       		CPI	NAK
1247   074D CA 3E 07    		JZ	XMS_EOT
1248   0750 FE 06       		CPI	ACK
1249   0752 C2 70 07    		JNZ	XM_CANCEL
1250   0755             
1251   0755 CD AF 0B    XM_DONE		CALL	PRINTI
1252   0758 0D0A5452414E 		.text "\r\nTRANSFER COMPLETE\r\n\000"
1252   075E 5346455220434F4D504C4554450D0A00
1253   076E AF          		XRA	A		;CLEAR A, CY
1254   076F C9          		RET
1255   0770             
1256   0770             ;FINISHING CODE PRIOR TO LEAVING XMODEM
1257   0770 3E 18       XM_CANCEL	MVI	A,CAN
1258   0772 CD F6 0B    		CALL	PUT_CHAR
1259   0775 CD F6 0B    		CALL	PUT_CHAR
1260   0778 CD E8 08    		CALL	PURGE
1261   077B CD AF 0B    		CALL	PRINTI
1262   077E 5452414E5346 		.text "TRANSFER CANCELED\r\n\000"
1262   0784 45522043414E43454C45440D0A00
1263   0792 C1          		POP	B		;SCRAP CALLING ROUTINE AND HEAD TO PARENT
1264   0793 C9          		RET
1265   0794             
1266   0794             
1267   0794             
1268   0794             
1269   0794             
1270   0794             
1271   0794             ;---------------------------------------------------------------------------------
1272   0794             ;START XMODEM RECEIVING and RECEIVE FIRST PACKET
1273   0794             ;---------------------------------------------------------------------------------
1274   0794 1E 2D       XMR_INIT	MVI	E,45		;ATTEMPTS TO INITIATE XMODEM CRC TRANSFER
1275   0796 3E 01       		MVI	A,1		;EXPECTED SEQ NUMBER starts at 1
1276   0798 32 32 FF    		STA	XMSEQ
1277   079B CD E8 08    XMR_CRC		CALL	PURGE
1278   079E 3E 43       		MVI	A,'C'		;Send C
1279   07A0 32 33 FF    		STA	XMTYPE		;Save as XM Type (CRC or CS)
1280   07A3 CD F6 0B    		CALL	PUT_CHAR
1281   07A6 CD 66 08    		CALL	XMGET_HDR	;Await a packet
1282   07A9 D2 E6 07    		JNC	XMR_TSEQ	;Jump if first packet received
1283   07AC C2 70 07    		JNZ	XM_CANCEL	;Cancel if there was a response that was not a header
1284   07AF 1D          		DCR	E		;Otherwise, if no response, retry a few times
1285   07B0 C2 9B 07    		JNZ	XMR_CRC
1286   07B3             
1287   07B3 1E 0F       		MVI	E,15		;ATTEMPTS TO INITIATE XMODEM CHECKSUM TRANSFER
1288   07B5 CD E8 08    XMR_CS		CALL	PURGE
1289   07B8 3E 15       		MVI	A,NAK		;Send NAK
1290   07BA 32 33 FF    		STA	XMTYPE		;Save as XM Type (CRC or CS)
1291   07BD CD F6 0B    		CALL	PUT_CHAR
1292   07C0 CD 66 08    		CALL	XMGET_HDR	;Await a packet
1293   07C3 D2 E6 07    		JNC	XMR_TSEQ	;Jump if first packet received
1294   07C6 C2 70 07    		JNZ	XM_CANCEL	;Cancel if there was a response that was not a header
1295   07C9 1D          		DCR	E		;Otherwise, if no response, retry a few times
1296   07CA C2 B5 07    		JNZ	XMR_CS
1297   07CD C3 70 07    		JMP	XM_CANCEL	;Abort
1298   07D0             
1299   07D0             
1300   07D0             ;--------------------- XMODEM RECEIVE
1301   07D0             ;Entry:	XMR_TSEQ in the middle of the routine
1302   07D0             ;Pre:	C=1 (expected first block as received when negogiating CRC or Checksum)
1303   07D0             ;	HL=Memory to dump the file to
1304   07D0             ;Uses:	B to count the 128 bytes per block
1305   07D0             ;	C to track Block Number expected
1306   07D0             ;	DE as CRC (Within Loop) (D is destroyed when Getting Header)
1307   07D0             ;------------------------------------
1308   07D0             XMR_RECV	
1309   07D0 CD 66 08    XMR_LP		CALL	XMGET_HDR
1310   07D3 D2 E6 07    		JNC	XMR_TSEQ
1311   07D6 CA 5B 08    		JZ	XMR_NAK		;NACK IF TIMED OUT
1312   07D9 FE 04       		CPI	EOT
1313   07DB C2 70 07    		JNZ	XM_CANCEL	;CANCEL IF CAN RECEIVED (OR JUST NOT EOT)
1314   07DE 3E 06       		MVI	A,ACK
1315   07E0 CD F6 0B    		CALL	PUT_CHAR
1316   07E3 C3 55 07    		JMP	XM_DONE
1317   07E6             
1318   07E6 4F          XMR_TSEQ	MOV	C,A		;Save Seq number from packet
1319   07E7 3A 32 FF    		LDA	XMSEQ
1320   07EA B9          		CMP	C		;CHECK IF THIS SEQ IS EXPECTED
1321   07EB CA FC 07    		JZ	XMR_SEQ_OK	;Jump if CORRECT SEQ
1322   07EE 3D          		DCR	A		;Else test if Previous SEQ
1323   07EF 32 32 FF    		STA	XMSEQ
1324   07F2 B9          		CMP	C
1325   07F3 C2 70 07    		JNZ	XM_CANCEL	;CANCEL IF SEQUENCE ISN'T PREVIOUS BLOCK
1326   07F6 CD E8 08    		CALL	PURGE		;ELSE, PURGE AND SEND ACK (ASSUMING PREVIOUS ACK WAS NOT RECEIVED)
1327   07F9 C3 4D 08    		JMP	XMR_ACK
1328   07FC             
1329   07FC 06 80       XMR_SEQ_OK	MVI	B,128		;128 BYTES PER BLOCK
1330   07FE 0E 00       		MVI	C,0		;Clear Checksum
1331   0800 11 00 00    		LXI	D,0000H		;CLEAR CRC
1332   0803 21 80 FF    		LXI	H,SECTOR_BUFFER	;Default Buffer
1333   0806 CD B9 08    XMR_BLK_LP	CALL	TIMED1_GETCHAR
1334   0809 DA 5B 08    		JC	XMR_NAK
1335   080C 77          		MOV	M,A		;SAVE DATA BYTE
1336   080D CD 8B 08    		CALL	CRC_UPDATE
1337   0810 7E          		MOV	A,M		;Update checksum
1338   0811 81          		ADD	C
1339   0812 4F          		MOV	C,A
1340   0813 23          		INX	H		;ADVANCE
1341   0814 05          		DCR	B
1342   0815 C2 06 08    		JNZ	XMR_BLK_LP
1343   0818             					;After 128 byte packet, verify error checking byte(s)
1344   0818 3A 33 FF    		LDA	XMTYPE		;Determine if we are using CRC or Checksum
1345   081B FE 15       		CPI	NAK		;If NAK, then use Checksum
1346   081D CA 37 08    		JZ	XMR_CCS
1347   0820             		
1348   0820 CD B9 08    		CALL	TIMED1_GETCHAR	;Check with CRC
1349   0823 DA 5B 08    		JC	XMR_NAK
1350   0826 BA          		CMP	D
1351   0827 C2 5B 08    		JNZ	XMR_NAK
1352   082A CD B9 08    		CALL	TIMED1_GETCHAR
1353   082D DA 5B 08    		JC	XMR_NAK
1354   0830 BB          		CMP	E
1355   0831 C2 5B 08    		JNZ	XMR_NAK
1356   0834 C3 41 08    		JMP	XMR_SAVE
1357   0837             
1358   0837 CD B9 08    XMR_CCS		CALL	TIMED1_GETCHAR
1359   083A DA 5B 08    		JC	XMR_NAK
1360   083D B9          		CMP	C
1361   083E C2 5B 08    		JNZ	XMR_NAK
1362   0841             
1363   0841             		;If we were transfering to a FILE, this is where we would write the
1364   0841             		;sector and reset HL to the same 128 byte sector buffer.
1365   0841             		;CALL	WRITE_SECTOR
1366   0841             
1367   0841 2A 34 FF    XMR_SAVE	LHLD	XSECTOR
1368   0844 44          		MOV	B,H
1369   0845 4D          		MOV	C,L
1370   0846 23          		INX	H
1371   0847 22 34 FF    		SHLD	XSECTOR
1372   084A CD D0 09    		CALL	WRITE_SEC
1373   084D             
1374   084D             
1375   084D 3E 06       XMR_ACK		MVI	A,ACK		;The sending of the Ack is done by
1376   084F CD F6 0B    		CALL	PUT_CHAR	;the calling routine, to allow writes to disk
1377   0852             			
1378   0852 3A 32 FF    		LDA	XMSEQ
1379   0855 3C          		INR	A		;Advance to next SEQ BLOCK
1380   0856 32 32 FF    		STA	XMSEQ
1381   0859 37          		STC			;Carry set when NOT last packet
1382   085A C9          		RET
1383   085B             
1384   085B CD E8 08    XMR_NAK		CALL	PURGE
1385   085E 3E 15       		MVI	A,NAK
1386   0860 CD F6 0B    		CALL	PUT_CHAR
1387   0863 C3 D0 07    		JMP	XMR_LP
1388   0866             
1389   0866             
1390   0866             ;--------------------- XMODEM - GET HEADER
1391   0866             ;
1392   0866             ;pre:	Nothing
1393   0866             ;post:	Carry Set: A=0, (Zero set) if Timeout
1394   0866             ;	Carry Set: A=CAN (Not Zero) if Cancel received
1395   0866             ;	Carry Set: A=EOT (Not Zero) if End of Tranmission received
1396   0866             ;	Carry Clear and A = B = Seq if Header found and is good
1397   0866             ;------------------------------------------
1398   0866 CD B9 08    XMGET_HDR	CALL	TIMED1_GETCHAR	;GET CHAR, 1 SECONDS TIMEOUT (EXPECT SOH)
1399   0869 D8          		RC			;Return if Timed out
1400   086A FE 01       		CPI	SOH		;TEST IF START OF HEADER
1401   086C CA 7C 08    		JZ	GS_SEQ		;IF SOH RECEIVED, GET SEQ NEXT
1402   086F FE 04       		CPI	EOT		;TEST IF END OF TRANSMISSION
1403   0871 CA 79 08    		JZ	GS_ESC		;IF EOT RECEIVED, TERMINATE XMODEM
1404   0874 FE 18       		CPI	CAN		;TEST IF CANCEL
1405   0876 C2 66 08    		JNZ	XMGET_HDR
1406   0879 B7          GS_ESC		ORA	A		;Clear Z flag (because A<>0)
1407   087A 37          		STC
1408   087B C9          		RET
1409   087C CD B9 08    GS_SEQ		CALL	TIMED1_GETCHAR	;GET SEQ CHAR
1410   087F D8          		RC			;Return if Timed out
1411   0880 47          		MOV	B,A		;SAVE SEQ
1412   0881 CD B9 08    		CALL	TIMED1_GETCHAR	;GET SEQ COMPLEMENT
1413   0884 D8          		RC			;Return if Timed out
1414   0885 2F          		CMA
1415   0886 B8          		CMP	B		;TEST IF SEQ VALID
1416   0887 C2 66 08    		JNZ	XMGET_HDR	;LOOP BACK AND TRY AGAIN IF HEADER INCORRECT (SYNC FRAME)
1417   088A C9          		RET
1418   088B             
1419   088B             ;------------------------------------------ CRC_UPDATE
1420   088B             ;HANDLE THE CRC CALCULATION FOR UP/DOWNLOADING
1421   088B             ;Total Time=775 cycles = 388uSec
1422   088B             ;In:	A  = New char to roll into CRC accumulator
1423   088B             ;	DE = 16bit CRC accumulator
1424   088B             ;Out:	DE = 16bit CRC accumulator
1425   088B             ;------------------------------------------
1426   088B             ;CRC_UPDATE	XRA	D		;4
1427   088B             ;		MOV	D,A		;5
1428   088B             ;		PUSH	B		;11
1429   088B             ;		MVI	B,8		;7	PRELOOP=27
1430   088B             ;CRCU_LP	ORA	A		;4	CLEAR CARRY
1431   088B             ;		MOV	A,E		;5
1432   088B             ;		RAL			;4
1433   088B             ;		MOV	E,A		;5
1434   088B             ;		MOV	A,D		;5
1435   088B             ;		RAL			;4
1436   088B             ;		MOV	D,A		;5
1437   088B             ;		JNC	CRCU_NX		;10
1438   088B             ;		MOV	A,D		;5
1439   088B             ;		XRI	10h		;7
1440   088B             ;		MOV	D,A		;5
1441   088B             ;		MOV	A,E		;5
1442   088B             ;		XRI	21H		;7
1443   088B             ;		MOV	E,A		;5
1444   088B             ;CRCU_NX		DCR	B		;5
1445   088B             ;		JNZ	CRCU_LP		;10	LOOP=91*8 (WORSE CASE)
1446   088B             ;		POP	B		;10	POSTLOOP=20
1447   088B             ;		RET			;10
1448   088B             
1449   088B             
1450   088B             ;------------------------------------------ CRC_UPDATE
1451   088B             ;HANDLE THE CRC CALCULATION FOR UP/DOWNLOADING
1452   088B             ;Total Time=604 cycles = 302uSec MAX
1453   088B             ;In:	A  = New char to roll into CRC accumulator
1454   088B             ;	DE = 16bit CRC accumulator
1455   088B             ;Out:	DE = 16bit CRC accumulator
1456   088B             ;------------------------------------------
1457   088B EB          CRC_UPDATE	XCHG			;4
1458   088C AC          		XRA	H		;4
1459   088D 67          		MOV	H,A		;5
1460   088E 29          		DAD	H		;10	Shift HL Left 1
1461   088F DC B0 08    		CC	CRC_UPC		;17 (10/61)
1462   0892 29          		DAD	H		;10	Shift HL Left 2
1463   0893 DC B0 08    		CC	CRC_UPC		;17
1464   0896 29          		DAD	H		;10	Shift HL Left 3
1465   0897 DC B0 08    		CC	CRC_UPC		;17
1466   089A 29          		DAD	H		;10	Shift HL Left 4
1467   089B DC B0 08    		CC	CRC_UPC		;17
1468   089E 29          		DAD	H		;10	Shift HL Left 5
1469   089F DC B0 08    		CC	CRC_UPC		;17
1470   08A2 29          		DAD	H		;10	Shift HL Left 6
1471   08A3 DC B0 08    		CC	CRC_UPC		;17
1472   08A6 29          		DAD	H		;10	Shift HL Left 7
1473   08A7 DC B0 08    		CC	CRC_UPC		;17
1474   08AA 29          		DAD	H		;10	Shift HL Left 8
1475   08AB DC B0 08    		CC	CRC_UPC		;17
1476   08AE EB          		XCHG			;4
1477   08AF C9          		RET			;10
1478   08B0             
1479   08B0 7C          CRC_UPC		MOV	A,H		;5
1480   08B1 EE 10       		XRI	10h		;7
1481   08B3 67          		MOV	H,A		;5
1482   08B4 7D          		MOV	A,L		;5
1483   08B5 EE 21       		XRI	21H		;7
1484   08B7 6F          		MOV	L,A		;5
1485   08B8 C9          		RET			;10
1486   08B9             
1487   08B9             
1488   08B9             ;===============================================
1489   08B9             ;TIMED1_GETCHAR - Gets a character within 1 second
1490   08B9             ;
1491   08B9             ;pre:	nothing
1492   08B9             ;post: 	Carry Set = No Char, Time Out
1493   08B9             ;	Carry Clear, A = Char
1494   08B9             ;-----------------------------------------------
1495   08B9 3E 01       TIMED1_GETCHAR	MVI	A,1
1496   08BB             
1497   08BB             ;===============================================
1498   08BB             ;TIMED_GETCHAR - Gets a character within a time limit
1499   08BB             ;
1500   08BB             ;pre:	A contains # of seconds to wait before returning
1501   08BB             ;post: 	Carry Set & Zero Set = No Char, Time Out
1502   08BB             ;	Carry Clear, A = Char
1503   08BB             ;-----------------------------------------------
1504   08BB D5          TIMED_GETCHAR	PUSH	D
1505   08BC C5          		PUSH	B
1506   08BD 57          		MOV	D,A
1507   08BE 01 00 00    		LXI	B,0	;B,C=Loop Count down until timeout
1508   08C1 3A 2C FF    TGC_LP1		LDA	GC_OPTIONS
1509   08C4 0F          		RRC
1510   08C5 06 08       		MVI	B,8		;XX = 1 Second
1511   08C7 DA CC 08    		JC	TGC_LP2
1512   08CA 06 42       		MVI	B,66		;XX = 1 Second
1513   08CC CD C1 0B    TGC_LP2		CALL	GET_STAT	;45  TEST FOR RX DATA
1514   08CF C2 E2 08    		JNZ	TGC_DO	;10
1515   08D2 0D          		DCR	C	;5
1516   08D3 C2 CC 08    		JNZ	TGC_LP2	;10	;73 Cycles Loop time. 39*256*.5 ~= 9.3 mSec
1517   08D6 05          		DCR	B
1518   08D7 C2 CC 08    		JNZ	TGC_LP2	;	1 Second waiting
1519   08DA 15          		DCR	D		;Count down Seconds until Time Out
1520   08DB C2 C1 08    		JNZ	TGC_LP1
1521   08DE 37          		STC		;SET CARRY TO INDICATE TIME OUT
1522   08DF             		;MVI	A,0
1523   08DF C3 E5 08    		JMP	TGC_RET
1524   08E2 CD DE 0B    TGC_DO		CALL	GET_CHAR
1525   08E5 C1          TGC_RET		POP	B
1526   08E6 D1          		POP	D
1527   08E7 C9          		RET
1528   08E8             
1529   08E8             
1530   08E8             ;===============================================
1531   08E8             ;PURGE - Clears all in coming bytes until the line is clear for a full 2 seconds
1532   08E8             ;-----------------------------------------------
1533   08E8 3E 02       PURGE		MVI	A,2	;2 seconds for time out
1534   08EA CD BB 08    		CALL	TIMED_GETCHAR
1535   08ED D2 E8 08    		JNC	PURGE
1536   08F0 C9          		RET
1537   08F1             
1538   08F1             
1539   08F1 AF          ECHO_FP_OFF	XRA	A
1540   08F2 32 2C FF    		STA	GC_OPTIONS	;Echo Off, FP Off
1541   08F5 C3 3B 0E    		JMP	LED_OFF		
1542   08F8             
1543   08F8             
1544   08F8             
1545   08F8             ;XModem implementation on 8080 Monitor (CP/M-80)
1546   08F8             ;
1547   08F8             ;Terminal uploads to 8080 system:
1548   08F8             ;-Terminal user enters command "XU aaaa"
1549   08F8             ;-8080 "drives" the protocol since it's the receiver
1550   08F8             ;-8080 sends <Nak> every 10 seconds until the transmitter sends a packet
1551   08F8             ;-if transmitter does not begin within 10 trys (100 seconds), 8080 aborts XMODEM
1552   08F8             ;-a packet is:
1553   08F8             ; <SOH> [seq] [NOT seq] [128 bytes of data] [checksum or CRC]
1554   08F8             ;
1555   08F8             ;<SOH> = 1 (Start of Header)
1556   08F8             ;<EOT> = 4 (End of Transmission)
1557   08F8             ;<ACK> = 6
1558   08F8             ;<DLE> = 16
1559   08F8             ;<DC1> = 17 (X-ON)
1560   08F8             ;<DC3> = 19 (X-OFF)
1561   08F8             ;<NAK> = 21
1562   08F8             ;<SYN> = 22
1563   08F8             ;<CAN> = 24 (Cancel)
1564   08F8             ;
1565   08F8             ;Checksum is the Modulo 256 sum of all 128 data bytes
1566   08F8             ;
1567   08F8             ;                                     <<<<<          [NAK]
1568   08F8             ;       [SOH][001][255][...][csum]    >>>>>
1569   08F8             ;                                     <<<<<          [ACK]
1570   08F8             ;       [SOH][002][254][...][csum]    >>>>>
1571   08F8             ;                                     <<<<<          [ACK]
1572   08F8             ;       [SOH][003][253][...][csum]    >>>>>
1573   08F8             ;                                     <<<<<          [ACK]
1574   08F8             ;       [EOT]                         >>>>>
1575   08F8             ;                                     <<<<<          [ACK]
1576   08F8             ;
1577   08F8             ;-if we get <EOT> then ACK and terminate XModem
1578   08F8             ;-if we get <CAN> then terminate XModem
1579   08F8             ;-if checksum invalid, then NAK
1580   08F8             ;-if seq number not correct as per [NOT seq], then NAK
1581   08F8             ;-if seq number = previous number, then ACK (But ignore block)
1582   08F8             ;-if seq number not the expected number, then <CAN><CAN> and terminate XModem
1583   08F8             ;-if data not received after 10 seconds, then NAK (inc Timeout Retry)
1584   08F8             ;-if timeout retry>10 then <CAN><CAN> and terminate XModem
1585   08F8             ;
1586   08F8             ;-To keep synchronized,
1587   08F8             ;  -Look for <SOH>, qualify <SOH> by checking the [seq] / [NOT seq]
1588   08F8             ;  -if no <SOH> found after 135 chars, then NAK
1589   08F8             ;
1590   08F8             ;-False EOT condtion
1591   08F8             ;  -NAK the first EOT
1592   08F8             ;  -if the next char is EOT again, then ACK and leave XModem
1593   08F8             ;
1594   08F8             ;-False <CAN>, expect a 2nd <CAN> ?
1595   08F8             ;
1596   08F8             ;-Using CRC, send "C" instead of <NAK> for the first packet
1597   08F8             ;  -Send "C" every 3 seconds for 3 tries, then degrade to checksums by sending <NAK>
1598   08F8             ;
1599   08F8             ;
1600   08F8             ;
1601   08F8             ;* The character-receive subroutine should be called with a
1602   08F8             ;parameter specifying the number of seconds to wait.  The
1603   08F8             ;receiver should first call it with a time of 10, then <nak> and
1604   08F8             ;try again, 10 times.
1605   08F8             ;  After receiving the <soh>, the receiver should call the
1606   08F8             ;character receive subroutine with a 1-second timeout, for the
1607   08F8             ;remainder of the message and the <cksum>.  Since they are sent
1608   08F8             ;as a continuous stream, timing out of this implies a serious
1609   08F8             ;like glitch that caused, say, 127 characters to be seen instead
1610   08F8             ;of 128.
1611   08F8             ;
1612   08F8             ;* When the receiver wishes to <nak>, it should call a "PURGE"
1613   08F8             ;subroutine, to wait for the line to clear.  Recall the sender
1614   08F8             ;tosses any characters in its UART buffer immediately upon
1615   08F8             ;completing sending a block, to ensure no glitches were mis-
1616   08F8             ;interpreted.
1617   08F8             ;  The most common technique is for "PURGE" to call the
1618   08F8             ;character receive subroutine, specifying a 1-second timeout,
1619   08F8             ;and looping back to PURGE until a timeout occurs.  The <nak> is
1620   08F8             ;then sent, ensuring the other end will see it.
1621   08F8             ;
1622   08F8             ;* You may wish to add code recommended by Jonh Mahr to your
1623   08F8             ;character receive routine - to set an error flag if the UART
1624   08F8             ;shows framing error, or overrun.  This will help catch a few
1625   08F8             ;more glitches - the most common of which is a hit in the high
1626   08F8             ;bits of the byte in two consecutive bytes.  The <cksum> comes
1627   08F8             ;out OK since counting in 1-byte produces the same result of
1628   08F8             ;adding 80H + 80H as with adding 00H + 00H.
1629   08F8             
1630   08F8             
1631   08F8             
1632   08F8             
1633   08F8             ;------------------------------------------------------ Subroutines
1634   08F8             		;All ROM space is "Shadow ROM", meaning, reads are from ROM and any
1635   08F8             		;memory writes will happen to the RAM at that address.
1636   08F8             		;The Shadow ROM can be turned off, thus allowing the RAM to be read.
1637   08F8             		;
1638   08F8             		;ROM_LOW, when low, enables the ROM bank selected in the lower 32K space.
1639   08F8             		;ROM_Hi, when hi, enables 16K of the ROM bank selected in the first 16K of
1640   08F8             		;the upper 32K space.
1641   08F8             ;ROM_HI		.EQU 040H	;Set to map ROM to High Address (Clr = RAM)
1642   08F8             ;ROM_LOW	.EQU 041H	;Clear to map ROM to Low Addres (Set = RAM)
1643   08F8             		
1644   08F8             RAM_CODE
1645   08F8             
1646   08F8             
1647   08F8             
1648   08F8             ;	READ SECTOR FROM RAM
1649   08F8             ;512K RAM  allows for 64K System + 14 Tracks of 256 Sectors
1650   08F8             ;BANK
1651   08F8             ;0 - 64K System RAM, Stack, etc.
1652   08F8             ;1 - 512 Sectors    0 to  511   Track 0, 1
1653   08F8             ;2 - 512 Sectors  512 to 1023	Track 2, 3
1654   08F8             ;3 - 512 Sectors 1024 to 1535	Track 4, 5
1655   08F8             ;4 - 512 Sectors 1536 to 2047	Track 6, 7
1656   08F8             ;5 - 512 Sectors 2048 to 2559	Track 8, 9
1657   08F8             ;6 - 512 Sectors 2560 to 3071	Track 10, 11
1658   08F8             ;7 - 512 Sectors 3072 to 3583	Track 12, 13        3583 = 0x0DFF
1659   08F8             ;
1660   08F8             ;Total 3584 Sectors in RAM
1661   08F8             ;
1662   08F8             ;32K ROM allows for 16K of additional ROM DISK area for Read Only Files
1663   08F8             ;We must use this space entirely for Files.  
1664   08F8             ;CP/M Must not be allowed to consider any of this space writable.
1665   08F8             ;PIP.COM 8K  (4 blocks, 224, 225, 226, 227) Sectors 0x0E00 to 0x0E3F
1666   08F8             ;XM.COM  2K  (1 block, 228) Sectors 0x0E40 to 0x0E4F.  
1667   08F8             ;Sector 0x0E4F is not used in XM.COM, so it is used to set the initial directory at Sector 0
1668   08F8             ;1 Block = 2K = 16 Sectors
1669   08F8             ;
1670   08F8             ;8 sectors = 1K, but we must go by blocks of 16 sectors (2K)
1671   08F8             ;
1672   08F8             ;ROM	Sec
1673   08F8             ;  00	0E00	PIP.COM
1674   08F8             ;  00	0E10	PIP.COM
1675   08F8             ;  00	0E20	PIP.COM
1676   08F8             ;  00	0E30	PIP.COM
1677   08F8             ;  00	0E40	XM.COM
1678   08F8             ;  00	0E50	spare
1679   08F8             ;  00	0E60	spare
1680   08F8             ;  00	0E70	spare
1681   08F8             ;
1682   08F8             ;64K ROM 27512
1683   08F8             ;8000	0E80	spare
1684   08F8             ;8800	0E90	spare
1685   08F8             ;9000	0EA0	spare
1686   08F8             ;9800	0EB0	spare
1687   08F8             ;A000	0EC0	spare
1688   08F8             ;A800	0ED0	spare
1689   08F8             ;B000	0EE0	spare
1690   08F8             ;B800	0EF0	spare
1691   08F8             ;C000	0F00	spare
1692   08F8             ;C800	0F10	spare
1693   08F8             ;D000	0F20	spare
1694   08F8             ;D800	0F30	spare
1695   08F8             ;E000	0F40	spare
1696   08F8             ;E800	0F50	spare
1697   08F8             ;F000	0F60	spare
1698   08F8             ;F800	0F70	spare
1699   08F8             
1700   08F8             ;If reading from an even track, we need to read RAM in the lower 32K, therefore we must
1701   08F8             ;run the routine in upper 32K
1702   08F8             ;If reading from an odd track, we need to read RAM in upper 32K.
1703   08F8             ;Writting to RAM is never a problem.
1704   08F8             ;Routine must run from ROM, since bank switching RAM will not affect ROM.
1705   08F8             
1706   08F8             					;Prompt User for Sector number to read
1707   08F8 CD A7 05    READ_SECTOR_T	CALL	SPACE_GET_WORD	;Input Sector
1708   08FB 42          		MOV	B,D	;BC <- DE
1709   08FC 4B          		MOV	C,E
1710   08FD CD 06 09    		CALL	READ_SEC_DB	;Read Sector into Default Buffer
1711   0900             
1712   0900             		;LXI	H,SECTOR_BUFFER	;Dump Sector to screen
1713   0900 11 FF FF    		LXI	D,0FFFFH
1714   0903 C3 5B 04    		JMP	MEM_DUMP_LP
1715   0906             
1716   0906             		
1717   0906 21 80 FF    READ_SEC_DB	LXI	H,SECTOR_BUFFER	;Default Buffer
1718   0909 22 B5 FD    		SHLD	DMAADD	;Destination, CP/M Data Buffer
1719   090C             
1720   090C             
1721   090C             			;Entry, BC = Sector#
1722   090C             			;	DMAADD = Location to store Sector
1723   090C F5          READ_SEC	PUSH	PSW
1724   090D C5          		PUSH	B
1725   090E D5          		PUSH	D
1726   090F E5          		PUSH	H
1727   0910             		
1728   0910             		;CALL	PRINTI
1729   0910             		;.text " R:\000"
1730   0910             		;CALL	PUT_BC
1731   0910             
1732   0910 3E E4       		MVI	A,0E4H		;TXDATA HIGH, RED LED ON
1733   0912 D3 C0       		OUT	OUTPUT_PORT	;Set LED ON
1734   0914             
1735   0914 CD 41 0A    		CALL	HASH_SECTOR	;Convert Sector in BC to Address in DE and Bank in A
1736   0917             					;DE =ADDRESS, A=BANK & HIGH/LOW 32K.  Z=1 for ROM
1737   0917             					
1738   0917 F3          		DI		;No interrupts (due to RAM BANKING)
1739   0918 CA 5C 09    		JZ	RS_ROM_SEC	;Read from ROM Sector
1740   091B 21 00 00    		LXI	H,0	;Save Stack
1741   091E 39          		DAD	SP
1742   091F 22 36 FF    		SHLD	SP_TEMP
1743   0922 EB          		XCHG		;HL = Read address
1744   0923 F9          		SPHL		;SP = Read address
1745   0924 2A B5 FD    		LHLD	DMAADD	;Destination, CP/M Data Buffer (in Bank 0)
1746   0927             
1747   0927 1F          		RAR
1748   0928 D2 93 09    		JNC	RS_ROM_HI ;Reading from LOW 32K RAM, so code must Continue Read in HIGH ROM
1749   092B             				
1750   092B             				;Else, Reading from HIGH 32K RAM
1751   092B             				;Bank of Source Sector in A
1752   092B             				;Bank of Source Sector in A, A is also loop counter
1753   092B E6 07       		ANI	7	;c=0, upper 5 bits=0
1754   092D D3 42       RS_LOOP		OUT	B16	;Write A16 ;Set 1 of 8 Banks for 512KB
1755   092F 1F          		RAR
1756   0930 D3 47       		OUT	B17	;Write A17
1757   0932 1F          		RAR
1758   0933 D3 43       		OUT	B18	;Write A18
1759   0935 17          		RAL
1760   0936 17          		RAL
1761   0937             				
1762   0937 D1          		POP	D	;Read 4 bytes
1763   0938 C1          		POP	B
1764   0939             		
1765   0939 17          		RAL		;Bank 0 (because c is 0)
1766   093A D3 42       		OUT	B16	;Clr A16
1767   093C D3 47       		OUT	B17	;Clr A17
1768   093E D3 43       		OUT	B18	;Clr A18
1769   0940 1F          		RAR
1770   0941             		
1771   0941 73          		MOV	M,E
1772   0942 23          		INX	H
1773   0943 72          		MOV	M,D
1774   0944 23          		INX	H
1775   0945 71          		MOV	M,C
1776   0946 23          		INX	H
1777   0947 70          		MOV	M,B
1778   0948 23          		INX	H
1779   0949 C6 08       		ADI	8	;c=1 after 32 itterations
1780   094B D2 2D 09    		JNC	RS_LOOP
1781   094E             
1782   094E 2A 36 FF    RS_EXIT		LHLD	SP_TEMP
1783   0951 F9          		SPHL		;SP = Restored
1784   0952             		
1785   0952 FB          RS_EXIT2	EI
1786   0953 3E 80       		MVI	A,80H		;TXDATA HIGH
1787   0955 D3 C0       		OUT	OUTPUT_PORT	;Set LED off
1788   0957 E1          		POP	H
1789   0958 D1          		POP	D
1790   0959 C1          		POP	B
1791   095A F1          		POP	PSW
1792   095B C9          		RET
1793   095C             
1794   095C             				;Sector is in ROM
1795   095C 2A B5 FD    RS_ROM_SEC	LHLD	DMAADD	;Destination, CP/M Data Buffer
1796   095F EB          		XCHG		;HL = Read address, DE = Destination Address
1797   0960 7C          		MOV	A,H	;Offset to start of EPROM ROM DRIVE
1798   0961 C6 2B       		ADI	ROM_DISK >>8	;ROM_DISK
1799   0963 67          		MOV	H,A
1800   0964 FA 6F 09    		JM	RS_ERR_RH ;Jump to map in Upper ROM, not implemented.
1801   0967             
1802   0967 06 80       		MVI	B,128
1803   0969 CD B0 EE    		CALL	COPY_RAM	;Copy the ROM_SECTOR to CP/M DMAADD
1804   096C C3 52 09    		JMP	RS_EXIT2
1805   096F             
1806   096F CD AF 0B    RS_ERR_RH	CALL	PRINTI		;System Start, Display Welcome Message
1807   0972 0D0A55707065 		.text "\r\nUpper EPROM not implemented\000"
1807   0978 72204550524F4D206E6F7420696D706C656D656E74656400
1808   0990 C3 52 09    		JMP	RS_EXIT2
1809   0993             
1810   0993             
1811   0993 37          RS_ROM_HI	STC
1812   0994 17          		RAL
1813   0995 D3 40       		OUT	ROM_HI	;MAP ROM TO HIGH ADDRESS
1814   0997 C3 9A 89    		JMP	RS_ROM_HIGH+8000H ;CONTINUE EXECUTION HIGH
1815   099A D3 41       RS_ROM_HIGH	OUT	ROM_LOW	;MAP LOW ROM OUT
1816   099C 1F          		RAR
1817   099D             
1818   099D             ; RLC       | Rotate A Left,  CY<-MSB
1819   099D             ; RRC       | Rotate A Right, CY<-LSB
1820   099D             ; RAL       | Rotate A Left  through Carry
1821   099D             ; RAR       | Rotate A Right through Carry
1822   099D             		
1823   099D             				;Bank of Source Sector in A, A is also loop counter
1824   099D E6 07       		ANI	7	;c=0, upper 5 bits=0
1825   099F D3 42       RSRH_LOOP	OUT	B16	;Write A16 ;Set 1 of 8 Banks for 512KB
1826   09A1 1F          		RAR		
1827   09A2 D3 47       		OUT	B17	;Write A17
1828   09A4 1F          		RAR
1829   09A5 D3 43       		OUT	B18	;Write A18
1830   09A7 17          		RAL
1831   09A8 17          		RAL
1832   09A9             		
1833   09A9 D1          		POP	D	;Read 4 bytes
1834   09AA C1          		POP	B
1835   09AB             		
1836   09AB 17          		RAL		;Bank 0 (because c = 0)
1837   09AC D3 42       		OUT	B16	;Clr A16
1838   09AE D3 47       		OUT	B17	;Clr A17
1839   09B0 D3 43       		OUT	B18	;Clr A18
1840   09B2 1F          		RAR
1841   09B3             		
1842   09B3 73          		MOV	M,E
1843   09B4 23          		INX	H
1844   09B5 72          		MOV	M,D
1845   09B6 23          		INX	H
1846   09B7 71          		MOV	M,C
1847   09B8 23          		INX	H
1848   09B9 70          		MOV	M,B
1849   09BA 23          		INX	H
1850   09BB C6 08       		ADI	8	;c=1 after 32 itterations
1851   09BD D2 9F 89    		JNC	RSRH_LOOP+8000H
1852   09C0             		
1853   09C0 AF          		XRA	A
1854   09C1 D3 41       		OUT	ROM_LOW	;MAP LOW ROM BACKIN
1855   09C3 C3 C6 09    		JMP	RS_ROM_LOW ;CONTINUE EXECUTION LOW
1856   09C6 D3 40       RS_ROM_LOW	OUT	ROM_HI	;MAP HIGH ROM OUT
1857   09C8 C3 4E 09    		JMP	RS_EXIT
1858   09CB             
1859   09CB             
1860   09CB             
1861   09CB             ;	WRITE SECTOR TO RAM
1862   09CB             ;
1863   09CB             ;It does not matter if the RAM we write to is in Shadow ROM space, since all Writes go to RAM.
1864   09CB             ;This routine will easily work from LOW ROM
1865   09CB             ;Routine must run from ROM, since bank switching RAM will not affect ROM.
1866   09CB             
1867   09CB             
1868   09CB CD A7 05    WRITE_SECTOR_T	CALL	SPACE_GET_WORD	;Input Sector
1869   09CE 42          		MOV	B,D	;BC <- DE
1870   09CF 4B          		MOV	C,E
1871   09D0             
1872   09D0             			;Entry, BC = Sector#
1873   09D0 F5          WRITE_SEC	PUSH	PSW
1874   09D1 C5          		PUSH	B
1875   09D2 D5          		PUSH	D
1876   09D3 E5          		PUSH	H
1877   09D4             
1878   09D4             		;CALL	PRINTI
1879   09D4             		;.text " W:\000"
1880   09D4             		;CALL	PUT_BC
1881   09D4             		
1882   09D4             		
1883   09D4 3E E8       		MVI	A,0E8H		;TXDATA HIGH, Blue LED ON
1884   09D6 D3 C0       		OUT	OUTPUT_PORT	;Set LED ON
1885   09D8             		
1886   09D8 CD 41 0A    		CALL	HASH_SECTOR	;Convert Sector in BC to Address in DE and Bank in A
1887   09DB             		
1888   09DB CA 23 0A    		JZ	WRITE_ERR
1889   09DE F3          		DI
1890   09DF 21 00 00    		LXI	H,0
1891   09E2 39          		DAD	SP
1892   09E3 22 36 FF    		SHLD	SP_TEMP
1893   09E6 31 80 FF    		LXI	SP,SECTOR_BUFFER
1894   09E9 EB          		XCHG		;HL = Write address
1895   09EA             
1896   09EA             		;ORA	A	;Clear carry
1897   09EA 1F          		RAR		;Shift out High/Low 32K, leave BANK only in A
1898   09EB             				
1899   09EB E6 07       		ANI	7	;c=0, upper 5 bits=0
1900   09ED 17          WS_LOOP		RAL		;Bank 0 (because c = 0)
1901   09EE D3 42       		OUT	B16	;Clr A16
1902   09F0 D3 47       		OUT	B17	;Clr A17
1903   09F2 D3 43       		OUT	B18	;Clr A18
1904   09F4 1F          		RAR
1905   09F5             
1906   09F5 D1          		POP	D	;Read 4 bytes
1907   09F6 C1          		POP	B
1908   09F7             		
1909   09F7             				;Bank of Destination Sector in A
1910   09F7 D3 42       		OUT	B16	;Write A16 ;Set 1 of 8 Banks for 512KB
1911   09F9 1F          		RAR		
1912   09FA D3 47       		OUT	B17	;Write A17
1913   09FC 1F          		RAR
1914   09FD D3 43       		OUT	B18	;Write A18
1915   09FF 17          		RAL
1916   0A00 17          		RAL
1917   0A01             		
1918   0A01             		
1919   0A01 73          		MOV	M,E
1920   0A02 23          		INX	H
1921   0A03 72          		MOV	M,D
1922   0A04 23          		INX	H
1923   0A05 71          		MOV	M,C
1924   0A06 23          		INX	H
1925   0A07 70          		MOV	M,B
1926   0A08 23          		INX	H
1927   0A09 C6 08       		ADI	8	;c=1 after 32 itterations
1928   0A0B D2 ED 09    		JNC	WS_LOOP
1929   0A0E             
1930   0A0E AF          		XRA	A
1931   0A0F D3 42       		OUT	B16	;Clr A16
1932   0A11 D3 47       		OUT	B17	;Clr A17
1933   0A13 D3 43       		OUT	B18	;Clr A18
1934   0A15             
1935   0A15 2A 36 FF    		LHLD	SP_TEMP
1936   0A18 F9          		SPHL		;SP = Restored
1937   0A19             		
1938   0A19 FB          		EI
1939   0A1A 3E 80       WS_EXIT		MVI	A,80H		;TXDATA HIGH
1940   0A1C D3 C0       		OUT	OUTPUT_PORT	;Set LED off
1941   0A1E             
1942   0A1E E1          		POP	H
1943   0A1F D1          		POP	D
1944   0A20 C1          		POP	B
1945   0A21 F1          		POP	PSW
1946   0A22 C9          		RET
1947   0A23             
1948   0A23 CD AF 0B    WRITE_ERR	CALL	PRINTI		;
1949   0A26 0D0A57726974 		.text "\r\nWrite to ROM Fail:\000"
1949   0A2C 6520746F20524F4D204661696C3A00
1950   0A3B CD 83 0B    		CALL	PUT_HEX
1951   0A3E C3 1A 0A    		JMP	WS_EXIT
1952   0A41             
1953   0A41             
1954   0A41             ;Input:	BC has Sector number.  Valid are 0000 to 0F7F
1955   0A41             ;				RAM is 0000 to 0DFF
1956   0A41             ;				ROM is 0E00 to 0F7F
1957   0A41             ;
1958   0A41             ;Output: DE = Memory Address in RAM
1959   0A41             ;	 A  = Bank and High/Low 32 K
1960   0A41             ;	Zero Flag set if Sector is in ROM
1961   0A41             ;
1962   0A41             		;B:C   xxxxbbbA : BCDEFGHI   512 Sectors per 64KB block
1963   0A41             		;to
1964   0A41             		;D:E             ABCDEFGH : I0000000  = Base Address of Sec
1965   0A41             		;A     xxxxnnnA  (where nnn = bbb + 1) 0 to 6 now becomes bank 1 to 7 for RAM
1966   0A41             		;					7 now becomes bank 8 for ROM (but with Zero Flag SET)
1967   0A41             				
1968   0A41 78          HASH_SECTOR	MOV	A,B	;A = xxxxbbbA
1969   0A42 1F          		RAR		;A = xxxxxbbb   c=A   (Put bit A in Carry)
1970   0A43 79          		MOV	A,C	;A = BCDEFGHI
1971   0A44 1F          		RAR		;A = ABCDEFGH   c=I
1972   0A45 57          		MOV	D,A	;D = ABCDEFGH
1973   0A46             		
1974   0A46 3E 00       		MVI	A,0	;A = 00000000
1975   0A48 1F          		RAR		;A = I0000000
1976   0A49 5F          		MOV	E,A	;E = I0000000   (lower/upper 128 bytes of a 256 page)
1977   0A4A             		
1978   0A4A 78          		MOV	A,B	;A = xxxxbbbA
1979   0A4B 3C          		INR	A	;Set Bank base = 1 (Bank never to exceed 7)
1980   0A4C 3C          		INR	A	;Set Bank base = 1 (Bank never to exceed 7)
1981   0A4D FE 10       		CPI	10H
1982   0A4F D8          		RC		;If Bank <=7 Return
1983   0A50 C8          		RZ		;If Bank =8 Return
1984   0A51 FE 11       		CPI	11H
1985   0A53 C8          		RZ		;If Bank =8 Return
1986   0A54             
1987   0A54 CD AF 0B    		CALL	PRINTI		;
1988   0A57 0D0A496E7661 		.text "\r\nInvalid Sector:\000"
1988   0A5D 6C696420536563746F723A00
1989   0A69 CD 83 0B    		CALL	PUT_HEX
1990   0A6C             		
1991   0A6C 01 00 00    		LXI	B,0
1992   0A6F C3 41 0A    		JMP	HASH_SECTOR
1993   0A72             		
1994   0A72             
1995   0A72             ; RLC       | Rotate A Left,  CY<-MSB
1996   0A72             ; RRC       | Rotate A Right, CY<-LSB
1997   0A72             ; RAL       | Rotate A Left  through Carry
1998   0A72             ; RAR       | Rotate A Right through Carry
1999   0A72             
2000   0A72             ;HASH_SECTOR	MOV	A,C	;B:C   xxxxbbbA : BCDEFGHI   512 Sectors per 64KB block
2001   0A72             ;      		RRC		;to
2002   0A72             ;    		ANI	80H	;D:E             ABCDEFGH : I0000000  = Base Address of Sec
2003   0A72             ;      		MOV	E,A
2004   0A72             ;		
2005   0A72             ;      		MOV	A,B
2006   0A72             ;     		RAR
2007   0A72             ;  		INR	A	;Set Bank base = 1 (Bank never to exceed 7)
2008   0A72             ;   		PUSH	PSW
2009   0A72             ; 		CPI	8
2010   0A72             ;		JNC	SEC_ERROR ;Invalid Sector # (messy Stack)
2011   0A72             ;      		POP	PSW		
2012   0A72             ;  		PUSH	PSW
2013   0A72             ;      		MOV	A,C
2014   0A72             ;    		RAR
2015   0A72             ;     		MOV	D,A
2016   0A72             ;      		POP	PSW	;A = BANK, CARRY = HIGH/LOW 32K
2017   0A72             ;      		RAL
2018   0A72             ;      		RET
2019   0A72             		
2020   0A72             		
2021   0A72             ;LOOP_BACK	CALL	GET_CHAR
2022   0A72             ;		JZ	LOOP_BACK
2023   0A72             ;		CALL	PUT_CHAR
2024   0A72             ;		JMP	LOOP_BACK
2025   0A72             
2026   0A72             
2027   0A72 21 00 00    CHKSUM_ROM	LXI	H,0		;Start Address = 0
2028   0A75 AF          		XRA	A
2029   0A76 57          		MOV	D,A		;Clear MSB of checksum
2030   0A77 01 00 80    		LXI	B,8000H
2031   0A7A 86          CSR_LOOP	ADD	M
2032   0A7B D2 7F 0A    		JNC	CSR_NEXT
2033   0A7E 14          		INR	D
2034   0A7F 23          CSR_NEXT	INX	H
2035   0A80 0D          		DCR	C
2036   0A81 C2 7A 0A    		JNZ	CSR_LOOP
2037   0A84 05          		DCR	B
2038   0A85 C2 7A 0A    		JNZ	CSR_LOOP
2039   0A88 5F          		MOV	E,A
2040   0A89 C9          		RET
2041   0A8A             
2042   0A8A             
2043   0A8A CD 92 0A    CHKSUM_RAM_SET	CALL	CHKSUM_RAM
2044   0A8D EB          		XCHG
2045   0A8E 22 4B FF    		SHLD	RAMDISK_CS
2046   0A91 C9          		RET
2047   0A92             
2048   0A92 CD AF 0B    CHKSUM_RAM	CALL	PRINTI		;System Start, Display Welcome Message
2049   0A95 0D0A52414D20 		.text "\r\nRAM DISK Chksum=\000"
2049   0A9B 4449534B2043686B73756D3D00
2050   0AA8             
2051   0AA8 06 07       		MVI	B,7	;Bank = 7
2052   0AAA AF          		XRA	A
2053   0AAB 57          		MOV	D,A
2054   0AAC 5F          		MOV	E,A
2055   0AAD 32 2D FF    		STA	INT_ENABLED
2056   0AB0 F3          		DI
2057   0AB1 21 00 00    		LXI	H,0	;Save Stack
2058   0AB4 39          		DAD	SP
2059   0AB5 22 36 FF    		SHLD	SP_TEMP
2060   0AB8             
2061   0AB8 3E E4       		MVI	A,0E4H		;TXDATA HIGH, RED LED ON
2062   0ABA CD 3C 0E    		CALL	LED_OUT		;Set LED ON
2063   0ABD             		
2064   0ABD 78          CSA_LOOP1	MOV	A,B
2065   0ABE D3 42       		OUT	B16	;Set A16 ;Set 1 of 8 Banks for 512KB
2066   0AC0 0F          		RRC		;Can't CALL/PUSH/POP, RAM is shifting under our feet
2067   0AC1 D3 47       		OUT	B17	;Set A17
2068   0AC3 0F          		RRC
2069   0AC4 D3 43       		OUT	B18	;Set A18
2070   0AC6             
2071   0AC6 78          		MOV	A,B
2072   0AC7 F6 A8       		ORI	0A8H
2073   0AC9 D3 C0       		OUT	OUTPUT_PORT	;Set LED
2074   0ACB             
2075   0ACB             
2076   0ACB 31 00 80    		LXI	SP,08000H	;Use SP for Check Sum RAM DISK
2077   0ACE 21 00 40    		LXI	H,04000H
2078   0AD1 7B          		MOV	A,E
2079   0AD2 58          		MOV	E,B	;Save Bank into E
2080   0AD3 C1          CSA_LOOP2	POP	B	;11
2081   0AD4 80          		ADD	B
2082   0AD5 D2 D9 0A    		JNC	CSA_NEXT1
2083   0AD8 14          		INR	D
2084   0AD9             CSA_NEXT1	
2085   0AD9 81          		ADD	C
2086   0ADA D2 DE 0A    		JNC	CSA_NEXT2
2087   0ADD 14          		INR	D
2088   0ADE             CSA_NEXT2
2089   0ADE 2D          		DCR	L	
2090   0ADF C2 D3 0A    		JNZ	CSA_LOOP2
2091   0AE2 25          		DCR	H	
2092   0AE3 C2 D3 0A    		JNZ	CSA_LOOP2
2093   0AE6             		
2094   0AE6 43          		MOV	B,E	;Restore Bank
2095   0AE7 5F          		MOV	E,A	;Save Checksum Accumulator
2096   0AE8             
2097   0AE8 AF          		XRA	A
2098   0AE9 D3 42       		OUT	B16	;Set A16 ;Bank 0
2099   0AEB D3 47       		OUT	B17	;Set A17
2100   0AED D3 43       		OUT	B18	;Set A18
2101   0AEF             		
2102   0AEF 2A 36 FF    		LHLD	SP_TEMP
2103   0AF2 F9          		SPHL		;SP = Restored
2104   0AF3             		
2105   0AF3 05          		DCR	B
2106   0AF4 C2 BD 0A    		JNZ	CSA_LOOP1
2107   0AF7             
2108   0AF7 3E 01       		MVI	A,1
2109   0AF9 D3 40       		OUT	ROM_HI	;MAP ROM TO HIGH ADDRESS
2110   0AFB C3 FE 8A    		JMP	CSAH_ROM_HIGH+8000H ;CONTINUE EXECUTION HIGH
2111   0AFE D3 41       CSAH_ROM_HIGH	OUT	ROM_LOW	;MAP LOW ROM OUT
2112   0B00             
2113   0B00 06 07       		MVI	B,7	;Bank = 7
2114   0B02             		
2115   0B02 78          CSAH_LOOP1	MOV	A,B
2116   0B03 D3 42       		OUT	B16	;Set A16 ;Set 1 of 8 Banks for 512KB
2117   0B05 0F          		RRC		;Can't CALL/PUSH/POP, RAM is shifting under our feet
2118   0B06 D3 47       		OUT	B17	;Set A17
2119   0B08 0F          		RRC
2120   0B09 D3 43       		OUT	B18	;Set A18
2121   0B0B             		
2122   0B0B 78          		MOV	A,B
2123   0B0C F6 A0       		ORI	0A0H
2124   0B0E D3 C0       		OUT	OUTPUT_PORT	;Set LED
2125   0B10             
2126   0B10 31 00 00    		LXI	SP,00000H	;Use SP for Check Sum RAM DISK
2127   0B13 21 00 40    		LXI	H,04000H
2128   0B16 7B          		MOV	A,E
2129   0B17 58          		MOV	E,B	;Save Bank into E
2130   0B18 C1          CSAH_LOOP2	POP	B	;11
2131   0B19 80          		ADD	B
2132   0B1A D2 1E 8B    		JNC	CSAH_NEXT1+8000H
2133   0B1D 14          		INR	D
2134   0B1E             CSAH_NEXT1	
2135   0B1E 81          		ADD	C
2136   0B1F D2 23 8B    		JNC	CSAH_NEXT2+8000H
2137   0B22 14          		INR	D
2138   0B23             CSAH_NEXT2
2139   0B23 2D          		DCR	L	
2140   0B24 C2 18 8B    		JNZ	CSAH_LOOP2+8000H
2141   0B27 25          		DCR	H	
2142   0B28 C2 18 8B    		JNZ	CSAH_LOOP2+8000H
2143   0B2B             		
2144   0B2B 43          		MOV	B,E	;Restore Bank
2145   0B2C 5F          		MOV	E,A	;Save Checksum Accumulator
2146   0B2D             
2147   0B2D 05          		DCR	B
2148   0B2E C2 02 8B    		JNZ	CSAH_LOOP1+8000H
2149   0B31             
2150   0B31 AF          		XRA	A
2151   0B32 D3 42       		OUT	B16	;Set A16 ;Bank 0
2152   0B34 D3 47       		OUT	B17	;Set A17
2153   0B36 D3 43       		OUT	B18	;Set A18
2154   0B38             
2155   0B38 AF          		XRA	A
2156   0B39 D3 41       		OUT	ROM_LOW	;MAP LOW ROM BACKIN
2157   0B3B C3 3E 0B    		JMP	CSA_ROM_LOW ;CONTINUE EXECUTION LOW
2158   0B3E D3 40       CSA_ROM_LOW	OUT	ROM_HI	;MAP HIGH ROM OUT
2159   0B40             
2160   0B40 2A 36 FF    		LHLD	SP_TEMP
2161   0B43 F9          		SPHL		;SP = Restored
2162   0B44             
2163   0B44 3D          		DCR	A	;A=FF
2164   0B45 32 2D FF    		STA	INT_ENABLED
2165   0B48             		
2166   0B48 CD 5E 0B    		CALL	PUT_DE
2167   0B4B             
2168   0B4B C9          		RET
2169   0B4C             
2170   0B4C             
2171   0B4C             ;===============================================
2172   0B4C             ;PUT_NEW_LINE -- Start a new line on the console
2173   0B4C             ;
2174   0B4C             ;pre: none
2175   0B4C             ;post: 0x0A printed to console
2176   0B4C             ;-----------------------------------------------
2177   0B4C CD AF 0B    PUT_NEW_LINE:	CALL	PRINTI
2178   0B4F 0D 0A 00    		.text "\r\n\000"
2179   0B52 C9          		RET
2180   0B53             
2181   0B53             ;===============================================
2182   0B53             ;PUT_BC Prints BC Word
2183   0B53             ;-----------------------------------------------
2184   0B53 F5          PUT_BC:		PUSH	PSW
2185   0B54 78          		MOV	A, B
2186   0B55 CD 74 0B    		CALL	PUT_BYTE
2187   0B58 79          		MOV	A, C
2188   0B59 CD 74 0B    		CALL	PUT_BYTE
2189   0B5C F1          		POP	PSW
2190   0B5D C9          		RET
2191   0B5E             
2192   0B5E             ;===============================================
2193   0B5E             ;PUT_DE Prints DE Word
2194   0B5E             ;-----------------------------------------------
2195   0B5E F5          PUT_DE:		PUSH	PSW
2196   0B5F 7A          		MOV	A, D
2197   0B60 CD 74 0B    		CALL	PUT_BYTE
2198   0B63 7B          		MOV	A, E
2199   0B64 CD 74 0B    		CALL	PUT_BYTE
2200   0B67 F1          		POP	PSW
2201   0B68 C9          		RET
2202   0B69             
2203   0B69             ;===============================================
2204   0B69             ;PUT_HL Prints HL Word
2205   0B69             ;-----------------------------------------------
2206   0B69 F5          PUT_HL:		PUSH	PSW
2207   0B6A 7C          		MOV	A, H
2208   0B6B CD 74 0B    		CALL	PUT_BYTE
2209   0B6E 7D          		MOV	A, L
2210   0B6F CD 74 0B    		CALL	PUT_BYTE
2211   0B72 F1          		POP	PSW
2212   0B73 C9          		RET
2213   0B74             
2214   0B74             ;===============================================
2215   0B74             ;PUT_BYTE -- Output byte to console as hex
2216   0B74             ;
2217   0B74             ;pre:	A register contains byte to be output
2218   0B74             ;post:
2219   0B74             ;-----------------------------------------------
2220   0B74 F5          PUT_BYTE:	PUSH	PSW
2221   0B75 0F          		RRC
2222   0B76 0F          		RRC
2223   0B77 0F          		RRC
2224   0B78 0F          		RRC
2225   0B79 CD 83 0B    		CALL	PUT_HEX
2226   0B7C F1          		POP	PSW
2227   0B7D F5          		PUSH	PSW
2228   0B7E CD 83 0B    		CALL	PUT_HEX
2229   0B81 F1          		POP	PSW
2230   0B82 C9          		RET
2231   0B83             
2232   0B83             ;===============================================
2233   0B83             ;PUT_HEX -- Convert nibble to ASCII char
2234   0B83             ;
2235   0B83             ;pre: A register contains nibble
2236   0B83             ;post: A register contains ASCII char
2237   0B83             ;-----------------------------------------------
2238   0B83 E6 0F       PUT_HEX:	ANI	0Fh
2239   0B85 C6 90       		ADI	90h
2240   0B87 27          		DAA
2241   0B88 CE 40       		ACI	40h
2242   0B8A 27          		DAA
2243   0B8B C3 F6 0B    		JMP	PUT_CHAR
2244   0B8E             
2245   0B8E             
2246   0B8E             ;===============================================
2247   0B8E             ;PRINT -- Print a null-terminated string
2248   0B8E             ;
2249   0B8E             ;pre: HL contains pointer to start of a null-
2250   0B8E             ;     terminated string
2251   0B8E             ;-----------------------------------------------
2252   0B8E 7E          PRINT:		MOV	A, M
2253   0B8F 23          		INX	H
2254   0B90 B7          		ORA	A
2255   0B91 C8          		RZ
2256   0B92 CD F6 0B    		CALL	PUT_CHAR
2257   0B95 C3 8E 0B    		JMP	PRINT
2258   0B98             
2259   0B98 434F4C4400  MSG_COLD_BOOT	.text "COLD\000"
2260   0B9D 5741524D00  MSG_WARM_BOOT	.text "WARM\000"
2261   0BA2 203D474F4F44 MSG_GOOD	.text " =GOOD\000"
2261   0BA8 00
2262   0BA9 203D42414400 MSG_BAD		.text " =BAD\000"
2263   0BAF             
2264   0BAF             ;===============================================
2265   0BAF             ;PRINT IMMEDIATE
2266   0BAF             ;-----------------------------------------------
2267   0BAF E3          PRINTI:		XTHL	;HL = Top of Stack
2268   0BB0 F5          		PUSH	PSW
2269   0BB1 CD 8E 0B    		CALL	PRINT
2270   0BB4 F1          		POP	PSW
2271   0BB5 E3          		XTHL	;Move updated return address back to stack
2272   0BB6 C9          		RET
2273   0BB7             
2274   0BB7             ;===============================================
2275   0BB7             ;PRINT B-LENGTH
2276   0BB7             ;-----------------------------------------------
2277   0BB7 7E          PRINTB		MOV	A, M
2278   0BB8 CD F6 0B    		CALL	PUT_CHAR
2279   0BBB 23          		INX	H
2280   0BBC 05          		DCR	B
2281   0BBD C2 B7 0B    		JNZ	PRINTB
2282   0BC0 C9          		RET
2283   0BC1             
2284   0BC1             
2285   0BC1             
2286   0BC1             				;Get status of buffer,	ACC=0, Z=1 if Buffer Empty
2287   0BC1             				;			ACC=FF, Z=0 if Buffer has chars
2288   0BC1 E5          GET_STAT	PUSH	H
2289   0BC2 21 48 FF    		LXI	H,FP_PRECOUNT
2290   0BC5 35          		DCR	M
2291   0BC6 CC 74 0C    		CZ	FP_OPERATE
2292   0BC9 2A 30 FF    		LHLD	RXBTAIL	;HL = Tail of Buffer
2293   0BCC 3A 2E FF    		LDA	RXBHEAD	;Test if Buffer Empty
2294   0BCF 95          		SUB	L
2295   0BD0 E1          		POP	H
2296   0BD1 C8          		RZ		;Exit if Tail = Head (=Empty)
2297   0BD2 3E FF       		MVI	A,0FFH
2298   0BD4 C9          		RET
2299   0BD5             
2300   0BD5             
2301   0BD5 3A 2C FF    ECHO_OFF	LDA	GC_OPTIONS	;Echo off
2302   0BD8 E6 7F       		ANI	7FH
2303   0BDA 32 2C FF    		STA	GC_OPTIONS
2304   0BDD C9          		RET
2305   0BDE             
2306   0BDE             				;Gets next Char from Buffer,  	ACC=0, Z=1 if Buffer Empty
2307   0BDE             				;				ACC = Char if Buffer not Empty
2308   0BDE CD C1 0B    GET_CHAR	CALL	GET_STAT
2309   0BE1 CA DE 0B    		JZ	GET_CHAR
2310   0BE4 E5          		PUSH	H
2311   0BE5 2A 30 FF    		LHLD	RXBTAIL	;HL = Tail of Buffer
2312   0BE8 3A 2C FF    		LDA	GC_OPTIONS
2313   0BEB 07          		RLC		
2314   0BEC 7E          		MOV	A,M
2315   0BED 2C          		INR	L
2316   0BEE 22 30 FF    		SHLD	RXBTAIL
2317   0BF1 E1          		POP	H
2318   0BF2 D0          		RNC		;Return if NO Echo
2319   0BF3             		
2320   0BF3 FE 20       		CPI	' '	;Do not echo control chars
2321   0BF5 F8          		RM
2322   0BF6             
2323   0BF6 E5          PUT_CHAR:	PUSH	H
2324   0BF7 2A 3F FF    		LHLD	PC_PTR
2325   0BFA             		;PCHL			;Jump to Put_Char1, Put_Char2, Put_Char3
2326   0BFA E9          JMP_HL		PCHL		;PC = HL
2327   0BFB             
2328   0BFB             
2329   0BFB             PUT_CHAR1	;PUSH	H		;H makes Delay, L holds Output Port Latch
2330   0BFB C5          		PUSH	B		;D makes Delay, E holds Output Port
2331   0BFC 47          		MOV	B,A
2332   0BFD 0E 09       		MVI	C,9
2333   0BFF 3A 2B FF    		LDA	OUTPUT_LAST
2334   0C02 07          		RLC
2335   0C03 6F          		MOV	L,A
2336   0C04             
2337   0C04 37          		STC			;Start Bit
2338   0C05 3F          		CMC
2339   0C06 F3          		DI
2340   0C07 7D          PC1_BIT_LOOP	MOV	A,L
2341   0C08 1F          		RAR
2342   0C09 D3 C0       		OUT	OUTPUT_PORT	;Set RS232 TX
2343   0C0B CD 68 0C    		CALL	PC1_DELAY
2344   0C0E 78          		MOV	A,B
2345   0C0F 0F          		RRC
2346   0C10 47          		MOV	B,A
2347   0C11 0D          		DCR	C
2348   0C12 C2 07 0C    		JNZ	PC1_BIT_LOOP	;208t = 104uSec
2349   0C15             		
2350   0C15 26 09       		MVI	H,9
2351   0C17 C3 53 0C    		JMP	PC_EXIT		
2352   0C1A             
2353   0C1A             
2354   0C1A             PUT_CHAR2	;PUSH	H		;H makes Delay, L holds Output Port Latch
2355   0C1A C5          		PUSH	B		;B holds Char to send, C counts bits
2356   0C1B 47          		MOV	B,A
2357   0C1C 0E 09       		MVI	C,9
2358   0C1E 3A 2B FF    		LDA	OUTPUT_LAST
2359   0C21 07          		RLC
2360   0C22 6F          		MOV	L,A
2361   0C23             
2362   0C23 37          		STC			;Start Bit
2363   0C24 3F          		CMC
2364   0C25 F3          		DI
2365   0C26 7D          PC2_BIT_LOOP	MOV	A,L		;5
2366   0C27 1F          		RAR			;4
2367   0C28 D3 C0       		OUT	OUTPUT_PORT	;10 Set RS232 TX
2368   0C2A CD 6F 0C    		CALL	PC2_DELAY
2369   0C2D 78          		MOV	A,B		;5
2370   0C2E 0F          		RRC			;4
2371   0C2F 47          		MOV	B,A		;5
2372   0C30 0D          		DCR	C		;5
2373   0C31 C2 26 0C    		JNZ	PC2_BIT_LOOP	;10   104t = 52uSec
2374   0C34             		
2375   0C34 26 01       		MVI	H,1
2376   0C36 C3 53 0C    		JMP	PC_EXIT		
2377   0C39             
2378   0C39             					;38,400, 52t = 26uSec
2379   0C39             PUT_CHAR3	;PUSH	H		;H makes Delay, L holds Output Port Latch
2380   0C39 C5          		PUSH	B		;B holds Char to send, C counts bits
2381   0C3A 47          		MOV	B,A
2382   0C3B 0E 09       		MVI	C,9
2383   0C3D 3A 2B FF    		LDA	OUTPUT_LAST
2384   0C40 07          		RLC
2385   0C41 6F          		MOV	L,A
2386   0C42             
2387   0C42 37          		STC			;Start Bit
2388   0C43 3F          		CMC
2389   0C44 F3          		DI
2390   0C45 7D          PC3_BIT_LOOP	MOV	A,L		;5
2391   0C46 1F          		RAR			;4
2392   0C47 D3 C0       		OUT	OUTPUT_PORT	;10 Set RS232 TX
2393   0C49 78          		MOV	A,B		;5
2394   0C4A 78          		MOV	A,B		;5
2395   0C4B 0F          		RRC			;4
2396   0C4C 47          		MOV	B,A		;5
2397   0C4D 0D          		DCR	C		;5
2398   0C4E C2 45 0C    		JNZ	PC3_BIT_LOOP	;10   52t = 26uSec
2399   0C51             		
2400   0C51 26 01       		MVI	H,1
2401   0C53             		
2402   0C53 3A 2B FF    PC_EXIT		LDA	OUTPUT_LAST	;Stop Bit
2403   0C56 D3 C0       		OUT	OUTPUT_PORT	;Set RS232 TX
2404   0C58 CD 6A 0C    		CALL	PC1_DELAY_LOOP
2405   0C5B             
2406   0C5B 3A 2D FF    		LDA	INT_ENABLED
2407   0C5E B7          		ORA	A
2408   0C5F CA 63 0C    		JZ	PC_NO_INT
2409   0C62 FB          		EI
2410   0C63             PC_NO_INT	
2411   0C63 78          		MOV	A,B		;Return with Char in A
2412   0C64 07          		RLC
2413   0C65 C1          		POP	B
2414   0C66 E1          		POP	H
2415   0C67 C9          		RET
2416   0C68             
2417   0C68             		
2418   0C68 26 09       PC1_DELAY	MVI	H,9
2419   0C6A 25          PC1_DELAY_LOOP	DCR	H
2420   0C6B C2 6A 0C    		JNZ	PC1_DELAY_LOOP
2421   0C6E C9          		RET
2422   0C6F 26 01       PC2_DELAY	MVI	H,1
2423   0C71 C3 6A 0C    		JMP	PC1_DELAY_LOOP
2424   0C74             
2425   0C74             
2426   0C74             
2427   0C74             ;------------------------------------------------------ ISR IN ROM
2428   0C74             ; *********   *******    ********         ****   **       **       ********     *****    **     **
2429   0C74             ; *********  *********   *********         **    ***      **       *********   *******   ***   ***
2430   0C74             ;    ***     **     **   **     **         **    ****     **       **     **  ***   ***  **** ****
2431   0C74             ;    ***     **          **     **         **    ** **    **       **     **  **     **  *********
2432   0C74             ;    ***     *******     ********          **    **  **   **       ********   **     **  ** *** **
2433   0C74             ;    ***       *******   ********          **    **   **  **       ********   **     **  ** *** **
2434   0C74             ;    ***            **   **  **            **    **    ** **       **  **     **     **  **     **
2435   0C74             ;    ***     **     **   **   **           **    **     ****       **   **    ***   ***  **     **
2436   0C74             ; *********  *********   **    **          **    **      ***       **    **    *******   **     **
2437   0C74             ; *********   *******    **     **        ****   **       **       **     **    *****    **     **
2438   0C74             ;------------------------------------------------------ 
2439   0C74             
2440   0C74             
2441   0C74             
2442   0C74             ISR_TIMER_ROM	
2443   0C74             ;		CALL	FP_OPERATE
2444   0C74             ;		RET
2445   0C74             
2446   0C74             ;------------------------------------------------------ 
2447   0C74 3A 2C FF    FP_OPERATE	LDA	GC_OPTIONS
2448   0C77 0F          		RRC
2449   0C78 D0          		RNC	;EXIT IF GC_OPTIONS.0 is off
2450   0C79 3E 14       		MVI	A,20
2451   0C7B 32 48 FF    		STA	FP_PRECOUNT
2452   0C7E 2A 46 FF    		LHLD	TIC_COUNTER
2453   0C81 23          		INX	H
2454   0C82 22 46 FF    		SHLD	TIC_COUNTER
2455   0C85             
2456   0C85 CD A6 0C    		CALL	FP_MAT_SCAN
2457   0C88 2A 26 FF    		LHLD	FPM_ADDR
2458   0C8B CD 11 0D    		CALL	PUT_LED_AD
2459   0C8E CD A2 EE    		CALL	READ_MEMORY	;MOV A,M (from RAM or ROM)
2460   0C91 CD 2C 0D    		CALL	PUT_LED_DATA
2461   0C94 CD 3B 0D    		CALL	GET_KEY
2462   0C97 C5          		PUSH	B
2463   0C98 C4 47 0D    		CNZ	DO_KEY
2464   0C9B C1          		POP	B
2465   0C9C CD B6 0D    		CALL	REPEAT_KEYS
2466   0C9F CD DD 0D    		CALL	DISP_MODIFIERS
2467   0CA2 CD 29 0E    		CALL	STAT_UPDATE
2468   0CA5 C9          		RET
2469   0CA6             
2470   0CA6             ;---------------------- Service Front Panel LED Matrix (multiplexed)--------
2471   0CA6             ;FP_MAT_PTR = Pointer to RAM with image of what LED's should be on/off
2472   0CA6             ;FP_LED_MAT = RAM image of LEDs
2473   0CA6             ;FP_SW_MAT  = Input of Switches Read (reads all Rows, must be 7 bytes after LEDs)
2474   0CA6             ;Output:                                    HighAddr  Low-Addr --Data--  Stat
2475   0CA6             ;1000 dcba : Low  nibble of High Address    ----xxxx  -------- --------  ----
2476   0CA6             ;1001 dcba : High nibble of High Address    xxxx----  -------- --------  ----
2477   0CA6             ;1010 dcba : Low  nibble of Low  Address    --------  ----xxxx --------  ----
2478   0CA6             ;1011 dcba : High nibble of Low  Address    --------  xxxx---- --------  ----
2479   0CA6             ;1100 dcba : Low  nibble of Data & Switches --------  -------- ----xxxx  ---- & Low  Data Switches
2480   0CA6             ;1101 dcba : High nibble of Data & Switches --------  -------- xxxx----  ---- & High Data Switches
2481   0CA6             ;1110 dcba : Status & Switches              --------  -------- --------  xxxx & Control Switches
2482   0CA6             ;1111 dcba : Not decoded
2483   0CA6             
2484   0CA6 2A 16 FF    FP_MAT_SCAN	LHLD	FP_MAT_PTR	;HL = Base of LED output matrix (FP_LED_MAT)
2485   0CA9             
2486   0CA9 7E          		MOV	A,M		;Get how LED's should be (low nibble)
2487   0CAA E6 0F       		ANI	0FH		;Clear upper nibble (reserved for column)
2488   0CAC 67          		MOV	H,A
2489   0CAD             		
2490   0CAD 7D          		MOV	A,L		;Get column (from low nibble of address)
2491   0CAE 87          		ADD	A		;Shift up to upper nibble
2492   0CAF 87          		ADD	A		;(use ADD to do arithmetic shift, low nibble =0)
2493   0CB0 87          		ADD	A
2494   0CB1 87          		ADD	A
2495   0CB2 B4          		ORA	H		;Include LED's
2496   0CB3 CD 3C 0E    		CALL	LED_OUT
2497   0CB6             					;Read switches while scanning.
2498   0CB6 26 FF       		MVI	H,(FP_LED_MAT >> 8)
2499   0CB8 7D          		MOV	A,L
2500   0CB9 C6 07       		ADI	7		;Add 7 to index into FP_SW_MAT
2501   0CBB 6F          		MOV	L,A
2502   0CBC DB 40       		IN	INPUT_PORT	;Read Input Switches
2503   0CBE 77          		MOV	M,A		;Save to Switch Matrix in RAM
2504   0CBF 7D          		MOV	A,L
2505   0CC0 DE 06       		SBI	6		; Subtract 6 for net effect of +1 to count
2506   0CC2 6F          		MOV	L,A               
2507   0CC3 FE 0F       		CPI	(FP_LED_MAT & 0FFH)+7
2508   0CC5 C2 CA 0C    		JNZ	FPMS_LED_NOROLL   
2509   0CC8 2E 08       		MVI	L,FP_LED_MAT & 0FFH
2510   0CCA 22 16 FF    FPMS_LED_NOROLL	SHLD	FP_MAT_PTR        
2511   0CCD                                                       
2512   0CCD                                                     ;Debounce Switches
2513   0CCD 3A 18 FF    		LDA	FP_SW_PTR	; Get switch pointer
2514   0CD0 C6 19       		ADI	(FP_SW_DBC & 0FFH )
2515   0CD2 6F          		MOV	L,A
2516   0CD3 E5          		PUSH	H		;H=Pointer to Debounce counter for this key
2517   0CD4             
2518   0CD4 3A 18 FF    		LDA	FP_SW_PTR	;Get switch pointer
2519   0CD7 E6 03       		ANI	3		;break out bit mapped
2520   0CD9 6F          		MOV	L,A		;BITMAP (assume H=FF from above)
2521   0CDA 66          		MOV	H,M		;H=Bitmapped (0001, 0010, 0100, 1000)
2522   0CDB 3A 18 FF    		LDA	FP_SW_PTR	;Get swtich pointer
2523   0CDE 0F          		RRC			;break out memory location for switch inputs
2524   0CDF 0F          		RRC	
2525   0CE0 E6 03       		ANI	3
2526   0CE2 C6 13       		ADI	(FP_SW_MAT & 0FFH)+4  ;Start of Switches (D3 to D0)
2527   0CE4 6F          		MOV	L,A
2528   0CE5 7C          		MOV	A,H		;Get Bit map of switch to sample
2529   0CE6 26 FF       		MVI	H,(FP_LED_MAT >> 8)
2530   0CE8 A6          		ANA	M		;Read Raw Switch input sampled (clear carry)
2531   0CE9             
2532   0CE9             	;Count is set to 00 if switch input is logic 1 (not pressed)
2533   0CE9             	;Count advances up to FF if switch is pressed
2534   0CE9             	;Count does not advance if Positive
2535   0CE9             	;Main line code may test the count for 00 to indicate a key pressed
2536   0CE9             	;Main line code may then advanced the count to 01 to "acknowledge" the press (for single events)
2537   0CE9             
2538   0CE9 E1          		POP	H		;M(H)=Counter
2539   0CEA 3E 00       		MVI	A,0		;Reset count to 00h when key is up.
2540   0CEC C2 FC 0C    		JNZ	FPMS_SAVE	;Jump if key is up
2541   0CEF             
2542   0CEF 7E          FPMS_DOWN	MOV	A,M		
2543   0CF0 3C          		INR	A
2544   0CF1 CA FD 0C    		JZ	FPMS_NEXT	;Jump to do nothing
2545   0CF4 FE 08       		CPI	08H		;Check for trigger to flag (Sensitivity for Key Down event)
2546   0CF6 37          		STC			;
2547   0CF7 3F          		CMC			;Clear carry
2548   0CF8 C2 FC 0C    		JNZ	FPMS_SAVE
2549   0CFB 37          		STC			;Set carry to Save Key Pressed		
2550   0CFC 77          FPMS_SAVE	MOV	M,A		;Save Debounce Count to Switch Debounce Counters (SW_DBC)
2551   0CFD 3A 18 FF    FPMS_NEXT	LDA	FP_SW_PTR	;Get switch pointer
2552   0D00 3C          		INR	A		;Increment to next switch
2553   0D01 D2 07 0D    		JNC	FPMS_NOFLAG
2554   0D04 32 25 FF    		STA	FP_SW_FLAG	;Save flagged key (base 1)
2555   0D07 FE 0B       FPMS_NOFLAG	CPI	11		;Test for last switch
2556   0D09 C2 0D 0D    		JNZ	FPMS_SW_NOROLL
2557   0D0C AF          		XRA	A
2558   0D0D 32 18 FF    FPMS_SW_NOROLL	STA	FP_SW_PTR
2559   0D10 C9          		RET
2560   0D11             
2561   0D11             
2562   0D11             
2563   0D11             ;------------------------------------------------------ 
2564   0D11 7C          PUT_LED_AD	MOV	A,H              
2565   0D12 CD 21 0D    		CALL	PUT_LED_ADHI     
2566   0D15 7D          		MOV	A,L              
2567   0D16             ;		CALL	PUT_LED_ADLO     
2568   0D16             ;		RET                      
2569   0D16                                                      
2570   0D16 32 0A FF    PUT_LED_ADLO	STA	FP_LED_MAT+2
2571   0D19 0F          		RRC
2572   0D1A 0F          		RRC
2573   0D1B 0F          		RRC
2574   0D1C 0F          		RRC
2575   0D1D 32 0B FF    		STA	FP_LED_MAT+3
2576   0D20 C9          		RET
2577   0D21             
2578   0D21 32 08 FF    PUT_LED_ADHI	STA	FP_LED_MAT
2579   0D24 0F          		RRC
2580   0D25 0F          		RRC
2581   0D26 0F          		RRC
2582   0D27 0F          		RRC                      
2583   0D28 32 09 FF    		STA	FP_LED_MAT+1     
2584   0D2B C9          		RET                      
2585   0D2C             
2586   0D2C 32 0C FF    PUT_LED_DATA	STA	FP_LED_MAT+4
2587   0D2F 0F          		RRC
2588   0D30 0F          		RRC
2589   0D31 0F          		RRC
2590   0D32 0F          		RRC
2591   0D33 32 0D FF    		STA	FP_LED_MAT+5
2592   0D36 C9          		RET
2593   0D37             
2594   0D37 32 0E FF    PUT_LED_STAT	STA	FP_LED_MAT+6
2595   0D3A C9          		RET
2596   0D3B             
2597   0D3B             ;------------------------------------------------------ 
2598   0D3B 3A 25 FF    GET_KEY		LDA	FP_SW_FLAG	;Get Key pressed (1 to 12 or 0 if no key)
2599   0D3E B7          		ORA	A
2600   0D3F C8          		RZ			;Exit if 0 (no key)
2601   0D40 F5          		PUSH	PSW		;Stack the Key
2602   0D41 AF          		XRA	A		;Clear Flag 
2603   0D42 32 25 FF    		STA	FP_SW_FLAG
2604   0D45 F1          		POP	PSW		;Return with A = Key
2605   0D46 C9          		RET
2606   0D47             
2607   0D47             
2608   0D47             ;------------------------------------------------------ 
2609   0D47 FE 0B       DO_KEY		CPI	11		;Check for NeXT key
2610   0D49 CA 92 0D    		JZ	KEY_NEXT
2611   0D4C FE 0A       		CPI	10		;Check for MODify Key
2612   0D4E CA A3 0D    		JZ	KEY_MOD
2613   0D51 FE 09       		CPI	9		;Check for RUN Key
2614   0D53 CA AD 0D    		JZ	KEY_RUN
2615   0D56             					;By Default, Key is a Data Button
2616   0D56 3D          		DCR	A
2617   0D57 6F          		MOV	L,A
2618   0D58 26 FF       		MVI	H,(BITMAP >> 8)
2619   0D5A 46          		MOV	B,M		;Get BitMap of key pressed
2620   0D5B             
2621   0D5B 3A 29 FF    		LDA	FPM_MOD_FIELD
2622   0D5E F6 80       		ORI	80H
2623   0D60 32 29 FF    		STA	FPM_MOD_FIELD	;Stop Flashing of field (Don't change low 2 bits for field edit)
2624   0D63 E6 03       		ANI	3
2625   0D65 CA 91 0D    		JZ	MODO_NULL
2626   0D68 3D          		DCR	A
2627   0D69 CA 81 0D    		JZ	MODO_ADHI
2628   0D6C 3D          		DCR	A
2629   0D6D CA 89 0D    		JZ	MODO_ADLO
2630   0D70             ;		DCR	A		;By default, we are modifying Memory
2631   0D70             ;		JZ	MODO_DATA
2632   0D70 2A 26 FF    MODO_DATA	LHLD	FPM_ADDR	;Data
2633   0D73 7E          		MOV	A,M
2634   0D74 A8          		XRA	B
2635   0D75 77          		MOV	M,A
2636   0D76 BE          		CMP	M		;Test for ROM
2637   0D77 C8          		RZ
2638   0D78 3A 29 FF    		LDA	FPM_MOD_FIELD	;If ROM start flashing of field
2639   0D7B E6 7F       		ANI	7FH
2640   0D7D 32 29 FF    		STA	FPM_MOD_FIELD	
2641   0D80 C9          		RET
2642   0D81 3A 27 FF    MODO_ADHI	LDA	FPM_ADDR+1	;High Address
2643   0D84 A8          		XRA	B
2644   0D85 32 27 FF    		STA	FPM_ADDR+1	;High Address
2645   0D88 C9          		RET
2646   0D89 3A 26 FF    MODO_ADLO	LDA	FPM_ADDR	 ;Low Address
2647   0D8C A8          		XRA	B               
2648   0D8D 32 26 FF    		STA	FPM_ADDR	 ;Low Address
2649   0D90 C9          		RET                     
2650   0D91                                                     
2651   0D91             MODO_NULL				 ;DATA Key pressed without any Mod Field
2652   0D91             					 ;Do Nothing
2653   0D91 C9          		RET			 
2654   0D92             
2655   0D92                                                     
2656   0D92 3A 29 FF    KEY_NEXT	LDA	FPM_MOD_FIELD
2657   0D95 3D          		DCR	A
2658   0D96 CA 9D 0D    		JZ	KEY_NEXT_1	;Cancel if modifying field is High Address
2659   0D99 3D          		DCR	A
2660   0D9A C2 CC 0D    		JNZ	DO_NEXT_PREV	;Cancel if modifying field is Low Address
2661   0D9D             KEY_NEXT_1	;XRA	A		;Cancel any modifying field
2662   0D9D 32 29 FF    		STA	FPM_MOD_FIELD	
2663   0DA0 C3 CC 0D    		JMP	DO_NEXT_PREV
2664   0DA3             
2665   0DA3             		
2666   0DA3             
2667   0DA3 3A 29 FF    KEY_MOD		LDA	FPM_MOD_FIELD	;Advance Modify Field
2668   0DA6 3C          		INR	A
2669   0DA7 E6 03       		ANI	3
2670   0DA9 32 29 FF    		STA	FPM_MOD_FIELD
2671   0DAC C9          		RET
2672   0DAD             		
2673   0DAD 3E 01       KEY_RUN		MVI	A,1		;RUN LED
2674   0DAF CD 37 0D    		CALL	PUT_LED_STAT
2675   0DB2 2A 26 FF    		LHLD	FPM_ADDR	;Execute code
2676   0DB5 E9          		PCHL
2677   0DB6             
2678   0DB6             
2679   0DB6             ;------------------------------------------------------ 
2680   0DB6 3A 28 FF    REPEAT_KEYS	LDA	FPM_REPEAT     
2681   0DB9 3C          		INR	A
2682   0DBA 3C          		INR	A
2683   0DBB 32 28 FF    		STA	FPM_REPEAT
2684   0DBE C0          		RNZ
2685   0DBF 3A 23 FF    		LDA	FP_SW_DBC+10	;NEXT Switch
2686   0DC2 FE 40       		CPI	40H
2687   0DC4 D8          		RC
2688   0DC5 3E FF       		MVI	A,0FFH
2689   0DC7 32 23 FF    		STA	FP_SW_DBC+10	;NEXT Switch
2690   0DCA 3C          		INR	A
2691   0DCB C0          		RNZ
2692   0DCC             		;CALL	DO_NEXT_PREV
2693   0DCC 2A 26 FF    DO_NEXT_PREV	LHLD	FPM_ADDR	;Execut NEXT/PREV
2694   0DCF 23          		INX	H
2695   0DD0 3A 20 FF    		LDA	FP_SW_DBC+7	;Test for D7 as shift and do Key Previous
2696   0DD3 B7          		ORA	A
2697   0DD4 CA D9 0D    		JZ	DNP_UP
2698   0DD7 2B          		DCX	H
2699   0DD8 2B          		DCX	H	
2700   0DD9 22 26 FF    DNP_UP		SHLD	FPM_ADDR
2701   0DDC C9          		RET
2702   0DDD             
2703   0DDD             
2704   0DDD             ;------------------------------------------------------ 
2705   0DDD 3A 29 FF    DISP_MODIFIERS	LDA	FPM_MOD_FIELD
2706   0DE0 B7          		ORA	A
2707   0DE1 C8          		RZ
2708   0DE2 3D          		DCR	A
2709   0DE3 CA F7 0D    		JZ	MOD_ADHI
2710   0DE6 3D          		DCR	A
2711   0DE7 CA 01 0E    		JZ	MOD_ADLO
2712   0DEA 3D          		DCR	A
2713   0DEB C0          		RNZ
2714   0DEC 2A 26 FF    MOD_DATA	LHLD	FPM_ADDR	;Data
2715   0DEF 7E          		MOV	A,M
2716   0DF0 CD 0B 0E    		CALL	FLASH
2717   0DF3 CD 2C 0D    		CALL	PUT_LED_DATA
2718   0DF6 C9          		RET
2719   0DF7 3A 27 FF    MOD_ADHI	LDA	FPM_ADDR+1	;High Address
2720   0DFA CD 0B 0E    		CALL	FLASH          
2721   0DFD CD 21 0D    		CALL	PUT_LED_ADHI   
2722   0E00 C9          		RET                    
2723   0E01 3A 26 FF    MOD_ADLO	LDA	FPM_ADDR	  ;Low Address
2724   0E04 CD 0B 0E    		CALL	FLASH          
2725   0E07 CD 16 0D    		CALL	PUT_LED_ADLO   
2726   0E0A C9          		RET                    
2727   0E0B             
2728   0E0B F5          FLASH		PUSH	PSW
2729   0E0C 3A 2A FF    		LDA	FPM_FLASH_COD
2730   0E0F 3C          		INR	A
2731   0E10 32 2A FF    		STA	FPM_FLASH_COD
2732   0E13 07          		RLC
2733   0E14 07          		RLC
2734   0E15 07          		RLC
2735   0E16 E6 03       		ANI	3
2736   0E18 3D          		DCR	A
2737   0E19 CA 22 0E    		JZ	FLASH_OFF
2738   0E1C 3D          		DCR	A
2739   0E1D CA 25 0E    		JZ	FLASH_ON
2740   0E20 F1          		POP	PSW
2741   0E21 C9          		RET
2742   0E22 F1          FLASH_OFF	POP	PSW
2743   0E23 AF          		XRA	A
2744   0E24 C9          		RET
2745   0E25 F1          FLASH_ON	POP	PSW
2746   0E26 3E FF       		MVI	A,0FFH
2747   0E28 C9          		RET
2748   0E29             
2749   0E29             
2750   0E29             ;------------------------------------------------------ 
2751   0E29 21 0E FF    STAT_UPDATE	LXI	H,FP_LED_MAT+6
2752   0E2C 3E 02       		MVI	A,2
2753   0E2E B6          		ORA	M
2754   0E2F 77          		MOV	M,A
2755   0E30 3A 29 FF    		LDA	FPM_MOD_FIELD
2756   0E33 E6 7F       		ANI	07FH
2757   0E35 C0          		RNZ
2758   0E36 3E FD       		MVI	A,0FDH
2759   0E38 A6          		ANA	M
2760   0E39 77          		MOV	M,A
2761   0E3A C9          		RET
2762   0E3B                                                   
2763   0E3B AF          LED_OFF		XRA	A
2764   0E3C F6 80       LED_OUT		ORI	80H		;TXDATA HIGH
2765   0E3E 32 2B FF    		STA	OUTPUT_LAST
2766   0E41 D3 C0       		OUT	OUTPUT_PORT	;Set LED off
2767   0E43 C9          		RET
2768   0E44                                                    
2769   0E44             
2770   0E44 CD A6 0C    DELAY_SCAN	CALL	FP_MAT_SCAN
2771   0E47 0D          		DCR	C
2772   0E48 C2 44 0E    		JNZ	DELAY_SCAN
2773   0E4B C9          		RET
2774   0E4C             
2775   0E4C             
2776   0E4C             
2777   0E4C             
2778   0E4C             
2779   0E4C             
2780   0E4C             
2781   0E4C             
2782   0E4C             MSIZE		.EQU  61	;MEMORY SIZE IN KBYTES.
2783   0E4C             
2784   0E4C             IOBYTE		.EQU  3		;ADDRESS OF I/O BYTE.
2785   0E4C             CCP		.EQU  (MSIZE-7)*1024	;START OF CPM (D800)
2786   0E4C             BDOS		.EQU  CCP+806H		;START OF BDOS (E006)
2787   0E4C             ;BIOS		.EQU  CCP+1600H		;START OF BIOS (EE00)
2788   0E4C             
2789   0E4C             ;       Page Zero Definitions.
2790   0E4C             CDISK		.EQU	4		;Location of current disk
2791   0E4C             DBUF		.EQU	80h		;Default sector buffer
2792   0E4C             
2793   0E4C             
2794   0E4C             		
2795   0F03             		.ORG	($ & 0FF00H) + 103H
2796   0F03             
2797   0F03 C3 4F 0F    ROM_JUMP_TABLE	JMP  	CBOOT	;FROM COLD START LOADER.
2798   0F06 C3 7B 0F    		JMP  	WBOOT 	;FROM WARM BOOT.
2799   0F09 C3 C1 0B    		JMP  	GET_STAT ;CHECK CONSOLE KB STATUS.
2800   0F0C C3 AE 0F    		JMP  	CONIN 	;READ CONSOLE CHARACTER.
2801   0F0F C3 BA 0F    		JMP  	CONOT 	;WRITE CONSOLE CHARACTER.
2802   0F12 C3 D7 0F    		JMP  	LIST 	;WRITE LISTING CHAR.
2803   0F15 C3 D8 0F    		JMP  	PUNCH 	;WRITE PUNCH CHAR.
2804   0F18 C3 DD 0F    		JMP  	READER 	;READ READER CHAR.
2805   0F1B C3 EE 0F    		JMP  	HOME 	;MOVE DISK TO TRACK ZERO.
2806   0F1E C3 E2 0F    		JMP  	SELDSK 	;SELECT DISK DRIVE.
2807   0F21 C3 F1 0F    		JMP  	SETTRK 	;SEEK TO TRACK IN REG A.
2808   0F24 C3 F8 0F    		JMP  	SETSEC 	;SET SECTOR NUMBER.
2809   0F27 C3 FE 0F    		JMP  	SETDMA 	;SET DISK STARTING ADR.
2810   0F2A C3 09 10    		JMP  	DREAD 	;READ SELECTED SECTOR.
2811   0F2D C3 13 10    		JMP  	DWRITE 	;WRITE SELECTED SECTOR.
2812   0F30 C3 E1 0F    		JMP  	LISTST 	;List status (output)
2813   0F33 C3 06 10    		JMP  	SECTRN 	;Translate sector number
2814   0F36             
2815   0F36             
2816   0F36 21 35 10    LOAD_CPM	LXI	H,RAM_IMG	;Source
2817   0F39 11 00 D8    		LXI	D,RAM_BASE	;Destination
2818   0F3C 01 F1 16    		LXI	B,RAM_SIZE	;#Bytes to copy
2819   0F3F             		
2820   0F3F 04          COPY_RAM_BC	INR	B		;Pre-inrement Count High byte
2821   0F40 7E          CRBC_LOOP	MOV	A,M		;A=M(HL)
2822   0F41 EB          		XCHG
2823   0F42 77          		MOV	M,A		;M(DE)=A
2824   0F43 EB          		XCHG
2825   0F44 23          		INX	H
2826   0F45 13          		INX	D
2827   0F46 0D          		DCR	C
2828   0F47 C2 40 0F    		JNZ	CRBC_LOOP
2829   0F4A 05          		DCR	B
2830   0F4B C2 40 0F    		JNZ	CRBC_LOOP
2831   0F4E C9          		RET
2832   0F4F             
2833   0F4F             ;       B O O T   C P / M   f r o m   d i s k.
2834   0F4F 31 80 FF    CBOOT		LXI  SP,STACK		;SET STACK POINTER.
2835   0F52 CD AF 0B    		CALL PRINTI
2836   0F55 0D0A416C7461 		.text "\r\nAltaid 8800 - 61K CP/M 2.2\r\n\000"
2836   0F5B 69642038383030202D2036314B2043502F4D20322E320D0A00
2837   0F74             	
2838   0F74 AF          	        XRA     A
2839   0F75 32 04 00    	        STA     CDISK           ;Force A drive
2840   0F78 32 03 00    	        STA     IOBYTE          ;Clear I/O byte
2841   0F7B             
2842   0F7B 31 80 FF    WBOOT		LXI  SP,STACK		;SET STACK POINTER.
2843   0F7E             
2844   0F7E CD AF 0B    		CALL PRINTI
2845   0F81 0D0A57424F4F 		.text "\r\nWBOOT\r\n\000"
2845   0F87 540D0A00
2846   0F8B             
2847   0F8B                     		      		;Boot CP/M
2848   0F8B CD 36 0F    		CALL	LOAD_CPM	;Copy CPM image from ROM to RAM
2849   0F8E             
2850   0F8E             					; SET UP JUMPS IN CP/M PAGE ZERO.
2851   0F8E             
2852   0F8E 01 80 00    		LXI  B,DBUF	;SET DEFAULT DMA ADR.
2853   0F91 CD FE 0F    		CALL SETDMA
2854   0F94 3E C3       		MVI  A,0C3H	;PUT JMP TO WBOOT
2855   0F96 32 00 00    		STA  0		;ADR AT ZERO.
2856   0F99 32 05 00    		STA  5
2857   0F9C 21 03 EE    		LXI  H,WBOOTV
2858   0F9F 22 01 00    		SHLD 1
2859   0FA2 21 06 E0    		LXI  H,BDOS	;PUT JUMP TO BDOS
2860   0FA5 22 06 00    		SHLD 6		;AT ADR 5,6,7.
2861   0FA8             
2862   0FA8 CD D5 0B    		CALL	ECHO_OFF		
2863   0FAB             	
2864   0FAB C3 94 EE    		JMP  	RAM_WBOOT
2865   0FAE             
2866   0FAE             ;===============================================
2867   0FAE             ;       C O N S O L   S T A T U S
2868   0FAE             ;
2869   0FAE             ;       This routine samples the Console status and
2870   0FAE             ;       returns the following values in the A register.
2871   0FAE             ;
2872   0FAE             ;       EXIT    A = 0 (zero), means no character
2873   0FAE             ;               currently ready to read.
2874   0FAE             ;
2875   0FAE             ;               A = FFh (255), means character
2876   0FAE             ;               currently ready to read.
2877   0FAE             ;-----------------------------------------------
2878   0FAE             ;CONST		JMP	GET_STAT
2879   0FAE             
2880   0FAE             ;===============================================
2881   0FAE             ;       C O N S O L   I N P U T
2882   0FAE             ;
2883   0FAE             ;       Read the next character into the A register, clearing the high
2884   0FAE             ;       order bit.  If no character currently ready to read then wait
2885   0FAE             ;       for a character to arrive before returning.
2886   0FAE             ;
2887   0FAE             ;       EXIT    A = character read from terminal.
2888   0FAE             ;-----------------------------------------------
2889   0FAE             CONIN:	;CALL	ECHO_OFF
2890   0FAE CD DE 0B    	CALL	GET_CHAR
2891   0FB1 E6 7F       	ANI	7FH	;MAKE MOST SIG. BIT = 0.
2892   0FB3 FE 7F       	CPI	7FH	;IS IT A RUBOUT?
2893   0FB5 C0          	RNZ		;RETURN IF NOT.
2894   0FB6 32 AF FD    	STA	CONOTF	;SET NO PRINT FLAG.
2895   0FB9 C9          	RET		;RETURN FROM CONIN.
2896   0FBA             	
2897   0FBA             ;===============================================
2898   0FBA             ;       C O N S O L   O U T P U T
2899   0FBA             ;
2900   0FBA             ;       Send a character to the console.  If the console is not ready to
2901   0FBA             ;       receive a character wait until the console is ready.
2902   0FBA             ;
2903   0FBA             ;       ENTRY   C = ASCII character to output to console.
2904   0FBA             ;-----------------------------------------------
2905   0FBA 79          CONOT:	MOV	A,C	;GET CHARACTER.
2906   0FBB FE 7F       	CPI	7FH	;IS IT A RUBOUT?
2907   0FBD C8          	RZ		;IF SO, DON'T PRINT IT.
2908   0FBE E5          	PUSH	H
2909   0FBF 21 AF FD    	LXI	H,CONOTF
2910   0FC2 34          	INR	M	;GET NO PRINT FLAG.
2911   0FC3 36 00       	MVI	M,0	;RESET THE FLAG
2912   0FC5 F2 D1 0F    	JP   	CONOTA	;NOT SET, SO PRINT.
2913   0FC8 CD AF 0B    	CALL	PRINTI
2914   0FCB 08 20 08 00 	.text "\008 \008\000"
2915   0FCF E1          	POP	H
2916   0FD0 C9          	RET		;RETURN.
2917   0FD1             
2918   0FD1             
2919   0FD1             			;ANOTHER BACKSPACE.
2920   0FD1 79          CONOTA:	MOV	A,C	;GET CHARACTER.
2921   0FD2 CD F6 0B    	CALL	PUT_CHAR ;PRINT IT.
2922   0FD5 E1          	POP	H
2923   0FD6 C9          	RET		;RETURN.
2924   0FD7             
2925   0FD7             ;
2926   0FD7             ; WRITE A CHARACTER ON LISTING DEVICE.
2927   0FD7             ;
2928   0FD7 C9          LIST:	RET		;RETURN FROM LIST.
2929   0FD8             
2930   0FD8             
2931   0FD8             ;
2932   0FD8             ; PUNCH PAPER TAPE.
2933   0FD8             ;
2934   0FD8 79          PUNCH:	MOV	A,C	;GET CHARACTER.
2935   0FD9 CD F6 0B    	CALL	PUT_CHAR ;PRINT IT.
2936   0FDC C9          	RET		;RETURN FROM PUNCH.
2937   0FDD             
2938   0FDD             ;
2939   0FDD             ;  NORMALLY USED TO READ PAPER TAPE.
2940   0FDD             ;
2941   0FDD CD DE 0B    READER:	CALL	GET_CHAR
2942   0FE0 C9          	RET		;RETURN FROM READER.
2943   0FE1             
2944   0FE1 C9          LISTST	RET
2945   0FE2             
2946   0FE2             
2947   0FE2             ;       S E L E C T   D I S K   D R I V E
2948   0FE2             ;
2949   0FE2             ;       Select the disk drive for subsequent disk transfers and
2950   0FE2             ;       return the appropriate DPH address. 
2951   0FE2             ;
2952   0FE2             ;       ENTRY   C = disk Selection value.
2953   0FE2             ;
2954   0FE2             ;       EXIT    HL = 0, if drive not selectable.
2955   0FE2             ;               HL = DPH address if drive is selectable.
2956   0FE2             ;
2957   0FE2 21 00 00    SELDSK:	LXI	H,0
2958   0FE5 79          	MOV	A,C	;GET NEW DISK NUMBER.
2959   0FE6 FE 01       	CPI	NDSK
2960   0FE8 D0          	RNC		;If Disk invalid...EXIT
2961   0FE9             	
2962   0FE9 21 75 EE    	LXI	H,DPBASE
2963   0FEC AF          	XRA	A	;SET A = 0.
2964   0FED C9          	RET		;RETURN FROM SELDSK.
2965   0FEE             
2966   0FEE             
2967   0FEE             ; MOVE DISK TO TRACK ZERO.
2968   0FEE             ;
2969   0FEE 01 00 00    HOME:	LXI  B,0	;SEEK TO TRACK ZERO.
2970   0FF1             
2971   0FF1             ;
2972   0FF1             ; SET TRACK NUMBER TO WHATEVER IS IN REGISTER C.
2973   0FF1             ; ALSO PERFORM MOVE TO THE CORRECT TRACK (SEEK).
2974   0FF1             ;
2975   0FF1 60          SETTRK:	MOV  H,B	;GET NEW TRACK NUMBER.
2976   0FF2 69          	MOV  L,C	;MOVE B&C TO H&L.
2977   0FF3 22 B3 FD    	SHLD  TRK	;UPDATE OLD WITH NEW.
2978   0FF6             
2979   0FF6             ;	CALL PRINTI
2980   0FF6             ;	.text "\r\nTrk:\000"
2981   0FF6             ;	CALL	PUT_HL
2982   0FF6             	
2983   0FF6             ; MOVE THE HEAD TO THE TRACK IN REGISTER A.
2984   0FF6             
2985   0FF6 AF          	XRA  A		;Clear flags
2986   0FF7 C9          	RET		;RETURN FROM SEEK.
2987   0FF8             
2988   0FF8             ;
2989   0FF8             ; SET DISK SECTOR NUMBER.
2990   0FF8             ;
2991   0FF8 79          SETSEC:	MOV  A,C	;GET SECTOR NUMBER.
2992   0FF9 32 B2 FD    	STA  SECT	;PUT AT SECT # ADDRESS.
2993   0FFC             
2994   0FFC             ;	CALL PRINTI
2995   0FFC             ;	.text "\r\nSec:\000"
2996   0FFC             ;	CALL	PUT_BYTE
2997   0FFC             
2998   0FFC AF          	XRA  A		;Clear flags
2999   0FFD C9          	RET		;RETURN FROM SETSEC.
3000   0FFE             ;
3001   0FFE             ; SET DISK DMA ADDRESS.
3002   0FFE             ;
3003   0FFE E5          SETDMA:	PUSH H
3004   0FFF 60          	MOV  H,B	;MOVE B&C TO H&L.
3005   1000 69          	MOV  L,C
3006   1001 22 B5 FD    	SHLD DMAADD	;PUT AT DMA ADR ADDRESS.
3007   1004 E1          	POP  H
3008   1005 C9          	RET		;RETURN FROM SETDMA.
3009   1006             
3010   1006             
3011   1006             ;       Translate sector number from logical to physical.
3012   1006             ;
3013   1006             ;       ENTRY   DE = 0, no translation required.
3014   1006             ;               DE = translation table address.
3015   1006             ;               BC = sector number to translate.
3016   1006             ;
3017   1006             ;       EXIT    HL = translated sector.
3018   1006             
3019   1006 69          SECTRN:	MOV     L,C	;No Translation
3020   1007 60          	MOV     H,B
3021   1008 C9          	RET
3022   1009             	
3023   1009             
3024   1009             ;
3025   1009             ; READ THE SECTOR AT SECT, FROM THE PRESENT DISK/TRACK/SSECT.
3026   1009             ; USE STARTING ADDRESS AT DMAADD.
3027   1009             ;
3028   1009 2A B2 FD    DREAD:		LHLD	SECT	;H=Track,L=Sector
3029   100C             ;	CALL PRINTI
3030   100C             ;	.text "\r\nRead:\000"
3031   100C             ;	CALL	PUT_HL
3032   100C             
3033   100C 44          		MOV	B,H
3034   100D 4D          		MOV	C,L
3035   100E CD 0C 09    		CALL	READ_SEC	;Reads to DMAADD CP/M Buffer
3036   1011             		
3037   1011 AF          		XRA  A			;SET FLAGS.
3038   1012 C9          		RET
3039   1013             
3040   1013             ;
3041   1013             ; WRITE THE SECTOR AT SECT, ON THE PRESENT TRACK.
3042   1013             ; USE STARTING ADDRESS AT DMAADD.
3043   1013             ;
3044   1013 2A B2 FD    DWRITE:		LHLD	SECT	;H=Track,L=Sector
3045   1016             ;	CALL PRINTI
3046   1016             ;	.text "\r\nWrite:\000"
3047   1016             ;	CALL	PUT_HL
3048   1016 44          		MOV	B,H
3049   1017 4D          		MOV	C,L
3050   1018 C3 D0 09    		JMP	WRITE_SEC
3051   101B             		
3052   101B             ;-----------------------------------------------------------------------------------------------------
3053   101B FE 61       TO_UPPER	CPI	'a'
3054   101D D8          		RC		;Return if ACC < 'a'
3055   101E FE 7B       		CPI	'z'+1
3056   1020 D0          		RNC		;Return if ACC > 'z'
3057   1021 E6 5F       		ANI	5Fh	;Flag upper case
3058   1023 C9          		RET
3059   1024             
3060   1024             
3061   1024             ;-----------------------------------------------------------------------------------------------------
3062   1024             		;HL = (HL) word at memory location HL
3063   1024 7E          LD_HL_HL	MOV	A,M		;Fetch L from (HL)
3064   1025 23          		INX	H
3065   1026 66          		MOV	H,M		;Fetch H from (HL+1)
3066   1027 6F          		MOV	L,A
3067   1028 C9          		RET
3068   1029             
3069   1029             ;-----------------------------------------------------------------------------------------------------
3070   1029             ;	FILL_BLOCK, Fills a block of RAM with value in A
3071   1029             ;	Input:	A = value
3072   1029             ;		HL = Start Address
3073   1029             ;		B = Length of Fill (MAX = 0 = 256 bytes)
3074   1029             ;-----------------------------------------------------------------------------------------------------
3075   1029 C5          FILL_BLOCK	PUSH	B
3076   102A E5          		PUSH	H
3077   102B 77          FB_LP		MOV	M,A
3078   102C 23          		INX	H
3079   102D 05          		DCR	B
3080   102E C2 2B 10    		JNZ	FB_LP
3081   1031 E1          		POP	H
3082   1032 C1          		POP	B
3083   1033 C9          		RET
3084   1034             
3085   1034             ;-----------------------------------------------------------------------------------------------------
3086   1034 E9          VCALL		PCHL		;Jump to HL
3087   1035             		
3088   1035             
3089   1035             		
3090   1035             ;		.ORG	5800h
3091   1035             
3092   1035             
3093   1035             ;The following is CP/M v2.2
3094   1035             ;It is copied from EPROM at this location (RAM_IMG) to it's correct location in RAM at (RAM_BASE)
3095   1035             
3096   1035             		
3097   1035             RAM_IMG		.EQU	$		;Copy CP/M & BIOS to RAM
3098   1035             RAM_BASE	.EQU	CCP
3099   1035             RB		.EQU	RAM_BASE - RAM_IMG ;Offset for Assembler
3100   1035             
3101   1035             				;Image of DISK A with CP/M.  Skip first 128 byte boot loader
3102   1035 C35CDBC358DB    .DB 0C3h,05Ch,0DBh,0C3h,058h,0DBh,07Fh,000h,043h,06Fh,070h,079h,072h,069h,067h,068h  ;0080h
3102   103B 7F00436F707972696768
3103   1045 742031393739    .DB 074h,020h,031h,039h,037h,039h,020h,028h,063h,029h,020h,062h,079h,020h,044h,069h  ;0090h
3103   104B 20286329206279204469
3104   1055 676974616C20    .DB 067h,069h,074h,061h,06Ch,020h,052h,065h,073h,065h,061h,072h,063h,068h,020h,020h  ;00A0h
3104   105B 52657365617263682020
3105   1065 202020200000    .DB 020h,020h,020h,020h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;00B0h
3105   106B 00000000000000000000
3106   1075 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;00C0h
3106   107B 00000000000000000000
3107   1085 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;00D0h
3107   108B 00000000000000000000
3108   1095 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;00E0h
3108   109B 00000000000000000000
3109   10A5 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;00F0h
3109   10AB 00000000000000000000
3110   10B5 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,008h,0D8h,000h,000h,05Fh,00Eh,002h,0C3h  ;0100h
3110   10BB 000008D800005F0E02C3
3111   10C5 0500C5CD8CD8    .DB 005h,000h,0C5h,0CDh,08Ch,0D8h,0C1h,0C9h,03Eh,00Dh,0CDh,092h,0D8h,03Eh,00Ah,0C3h  ;0110h
3111   10CB C1C93E0DCD92D83E0AC3
3112   10D5 92D83E20C392    .DB 092h,0D8h,03Eh,020h,0C3h,092h,0D8h,0C5h,0CDh,098h,0D8h,0E1h,07Eh,0B7h,0C8h,023h  ;0120h
3112   10DB D8C5CD98D8E17EB7C823
3113   10E5 E5CD8CD8E1C3    .DB 0E5h,0CDh,08Ch,0D8h,0E1h,0C3h,0ACh,0D8h,00Eh,00Dh,0C3h,005h,000h,05Fh,00Eh,00Eh  ;0130h
3113   10EB ACD80E0DC305005F0E0E
3114   10F5 C30500CD0500    .DB 0C3h,005h,000h,0CDh,005h,000h,032h,0EEh,0DFh,03Ch,0C9h,00Eh,00Fh,0C3h,0C3h,0D8h  ;0140h
3114   10FB 32EEDF3CC90E0FC3C3D8
3115   1105 AF32EDDF11CD    .DB 0AFh,032h,0EDh,0DFh,011h,0CDh,0DFh,0C3h,0CBh,0D8h,00Eh,010h,0C3h,0C3h,0D8h,00Eh  ;0150h
3115   110B DFC3CBD80E10C3C3D80E
3116   1115 11C3C3D80E12    .DB 011h,0C3h,0C3h,0D8h,00Eh,012h,0C3h,0C3h,0D8h,011h,0CDh,0DFh,0C3h,0DFh,0D8h,00Eh  ;0160h
3116   111B C3C3D811CDDFC3DFD80E
3117   1125 13C30500CD05    .DB 013h,0C3h,005h,000h,0CDh,005h,000h,0B7h,0C9h,00Eh,014h,0C3h,0F4h,0D8h,011h,0CDh  ;0170h
3117   112B 00B7C90E14C3F4D811CD
3118   1135 DFC3F9D80E15    .DB 0DFh,0C3h,0F9h,0D8h,00Eh,015h,0C3h,0F4h,0D8h,00Eh,016h,0C3h,0C3h,0D8h,00Eh,017h  ;0180h
3118   113B C3F4D80E16C3C3D80E17
3119   1145 C305001EFF0E    .DB 0C3h,005h,000h,01Eh,0FFh,00Eh,020h,0C3h,005h,000h,0CDh,013h,0D9h,087h,087h,087h  ;0190h
3119   114B 20C30500CD13D9878787
3120   1155 8721EFDFB632    .DB 087h,021h,0EFh,0DFh,0B6h,032h,004h,000h,0C9h,03Ah,0EFh,0DFh,032h,004h,000h,0C9h  ;01A0h
3120   115B 0400C93AEFDF320400C9
3121   1165 FE61D8FE7BD0    .DB 0FEh,061h,0D8h,0FEh,07Bh,0D0h,0E6h,05Fh,0C9h,03Ah,0ABh,0DFh,0B7h,0CAh,096h,0D9h  ;01B0h
3121   116B E65FC93AABDFB7CA96D9
3122   1175 3AEFDFB73E00    .DB 03Ah,0EFh,0DFh,0B7h,03Eh,000h,0C4h,0BDh,0D8h,011h,0ACh,0DFh,0CDh,0CBh,0D8h,0CAh  ;01C0h
3122   117B C4BDD811ACDFCDCBD8CA
3123   1185 96D93ABBDF3D    .DB 096h,0D9h,03Ah,0BBh,0DFh,03Dh,032h,0CCh,0DFh,011h,0ACh,0DFh,0CDh,0F9h,0D8h,0C2h  ;01D0h
3123   118B 32CCDF11ACDFCDF9D8C2
3124   1195 96D91107D821    .DB 096h,0D9h,011h,007h,0D8h,021h,080h,000h,006h,080h,0CDh,042h,0DCh,021h,0BAh,0DFh  ;01E0h
3124   119B 80000680CD42DC21BADF
3125   11A5 3600233511AC    .DB 036h,000h,023h,035h,011h,0ACh,0DFh,0CDh,0DAh,0D8h,0CAh,096h,0D9h,03Ah,0EFh,0DFh  ;01F0h
3125   11AB DFCDDAD8CA96D93AEFDF
3126   11B5 B7C4BDD82108    .DB 0B7h,0C4h,0BDh,0D8h,021h,008h,0D8h,0CDh,0ACh,0D8h,0CDh,0C2h,0D9h,0CAh,0A7h,0D9h  ;0200h
3126   11BB D8CDACD8CDC2D9CAA7D9
3127   11C5 CDDDD9C382DB    .DB 0CDh,0DDh,0D9h,0C3h,082h,0DBh,0CDh,0DDh,0D9h,0CDh,01Ah,0D9h,00Eh,00Ah,011h,006h  ;0210h
3127   11CB CDDDD9CD1AD90E0A1106
3128   11D5 D8CD0500CD29    .DB 0D8h,0CDh,005h,000h,0CDh,029h,0D9h,021h,007h,0D8h,046h,023h,078h,0B7h,0CAh,0BAh  ;0220h
3128   11DB D92107D8462378B7CABA
3129   11E5 D97ECD30D977    .DB 0D9h,07Eh,0CDh,030h,0D9h,077h,005h,0C3h,0ABh,0D9h,077h,021h,008h,0D8h,022h,088h  ;0230h
3129   11EB 05C3ABD9772108D82288
3130   11F5 D8C90E0BCD05    .DB 0D8h,0C9h,00Eh,00Bh,0CDh,005h,000h,0B7h,0C8h,00Eh,001h,0CDh,005h,000h,0B7h,0C9h  ;0240h
3130   11FB 00B7C80E01CD0500B7C9
3131   1205 0E19C3050011    .DB 00Eh,019h,0C3h,005h,000h,011h,080h,000h,00Eh,01Ah,0C3h,005h,000h,021h,0ABh,0DFh  ;0250h
3131   120B 80000E1AC3050021ABDF
3132   1215 7EB7C83600AF    .DB 07Eh,0B7h,0C8h,036h,000h,0AFh,0CDh,0BDh,0D8h,011h,0ACh,0DFh,0CDh,0EFh,0D8h,03Ah  ;0260h
3132   121B CDBDD811ACDFCDEFD83A
3133   1225 EFDFC3BDD811    .DB 0EFh,0DFh,0C3h,0BDh,0D8h,011h,028h,0DBh,021h,000h,0E0h,006h,006h,01Ah,0BEh,0C2h  ;0270h
3133   122B 28DB2100E006061ABEC2
3134   1235 CFDB132305C2    .DB 0CFh,0DBh,013h,023h,005h,0C2h,0FDh,0D9h,0C9h,0CDh,098h,0D8h,02Ah,08Ah,0D8h,07Eh  ;0280h
3134   123B FDD9C9CD98D82A8AD87E
3135   1245 FE20CA22DAB7    .DB 0FEh,020h,0CAh,022h,0DAh,0B7h,0CAh,022h,0DAh,0E5h,0CDh,08Ch,0D8h,0E1h,023h,0C3h  ;0290h
3135   124B CA22DAE5CD8CD8E123C3
3136   1255 0FDA3E3FCD8C    .DB 00Fh,0DAh,03Eh,03Fh,0CDh,08Ch,0D8h,0CDh,098h,0D8h,0CDh,0DDh,0D9h,0C3h,082h,0DBh  ;02A0h
3136   125B D8CD98D8CDDDD9C382DB
3137   1265 1AB7C8FE20DA    .DB 01Ah,0B7h,0C8h,0FEh,020h,0DAh,009h,0DAh,0C8h,0FEh,03Dh,0C8h,0FEh,05Fh,0C8h,0FEh  ;02B0h
3137   126B 09DAC8FE3DC8FE5FC8FE
3138   1275 2EC8FE3AC8FE    .DB 02Eh,0C8h,0FEh,03Ah,0C8h,0FEh,03Bh,0C8h,0FEh,03Ch,0C8h,0FEh,03Eh,0C8h,0C9h,01Ah  ;02C0h
3138   127B 3BC8FE3CC8FE3EC8C91A
3139   1285 B7C8FE20C013    .DB 0B7h,0C8h,0FEh,020h,0C0h,013h,0C3h,04Fh,0DAh,085h,06Fh,0D0h,024h,0C9h,03Eh,000h  ;02D0h
3139   128B C34FDA856FD024C93E00
3140   1295 21CDDFCD59DA    .DB 021h,0CDh,0DFh,0CDh,059h,0DAh,0E5h,0E5h,0AFh,032h,0F0h,0DFh,02Ah,088h,0D8h,0EBh  ;02E0h
3140   129B E5E5AF32F0DF2A88D8EB
3141   12A5 CD4FDAEB228A    .DB 0CDh,04Fh,0DAh,0EBh,022h,08Ah,0D8h,0EBh,0E1h,01Ah,0B7h,0CAh,089h,0DAh,0DEh,040h  ;02F0h
3141   12AB D8EBE11AB7CA89DADE40
3142   12B5 47131AFE3ACA    .DB 047h,013h,01Ah,0FEh,03Ah,0CAh,090h,0DAh,01Bh,03Ah,0EFh,0DFh,077h,0C3h,096h,0DAh  ;0300h
3142   12BB 90DA1B3AEFDF77C396DA
3143   12C5 7832F0DF7013    .DB 078h,032h,0F0h,0DFh,070h,013h,006h,008h,0CDh,030h,0DAh,0CAh,0B9h,0DAh,023h,0FEh  ;0310h
3143   12CB 0608CD30DACAB9DA23FE
3144   12D5 2AC2A9DA363F    .DB 02Ah,0C2h,0A9h,0DAh,036h,03Fh,0C3h,0ABh,0DAh,077h,013h,005h,0C2h,098h,0DAh,0CDh  ;0320h
3144   12DB C3ABDA771305C298DACD
3145   12E5 30DACAC0DA13    .DB 030h,0DAh,0CAh,0C0h,0DAh,013h,0C3h,0AFh,0DAh,023h,036h,020h,005h,0C2h,0B9h,0DAh  ;0330h
3145   12EB C3AFDA23362005C2B9DA
3146   12F5 0603FE2EC2E9    .DB 006h,003h,0FEh,02Eh,0C2h,0E9h,0DAh,013h,0CDh,030h,0DAh,0CAh,0E9h,0DAh,023h,0FEh  ;0340h
3146   12FB DA13CD30DACAE9DA23FE
3147   1305 2AC2D9DA363F    .DB 02Ah,0C2h,0D9h,0DAh,036h,03Fh,0C3h,0DBh,0DAh,077h,013h,005h,0C2h,0C8h,0DAh,0CDh  ;0350h
3147   130B C3DBDA771305C2C8DACD
3148   1315 30DACAF0DA13    .DB 030h,0DAh,0CAh,0F0h,0DAh,013h,0C3h,0DFh,0DAh,023h,036h,020h,005h,0C2h,0E9h,0DAh  ;0360h
3148   131B C3DFDA23362005C2E9DA
3149   1325 060323360005    .DB 006h,003h,023h,036h,000h,005h,0C2h,0F2h,0DAh,0EBh,022h,088h,0D8h,0E1h,001h,00Bh  ;0370h
3149   132B C2F2DAEB2288D8E1010B
3150   1335 00237EFE3FC2    .DB 000h,023h,07Eh,0FEh,03Fh,0C2h,009h,0DBh,004h,00Dh,0C2h,001h,0DBh,078h,0B7h,0C9h  ;0380h
3150   133B 09DB040DC201DB78B7C9
3151   1345 444952204552    .DB 044h,049h,052h,020h,045h,052h,041h,020h,054h,059h,050h,045h,053h,041h,056h,045h  ;0390h
3151   134B 41205459504553415645
3152   1355 52454E205553    .DB 052h,045h,04Eh,020h,055h,053h,045h,052h,000h,016h,000h,000h,000h,000h,021h,010h  ;03A0h
3152   135B 45520016000000002110
3153   1365 DB0E0079FE06    .DB 0DBh,00Eh,000h,079h,0FEh,006h,0D0h,011h,0CEh,0DFh,006h,004h,01Ah,0BEh,0C2h,04Fh  ;03B0h
3153   136B D011CEDF06041ABEC24F
3154   1375 DB132305C23C    .DB 0DBh,013h,023h,005h,0C2h,03Ch,0DBh,01Ah,0FEh,020h,0C2h,054h,0DBh,079h,0C9h,023h  ;03C0h
3154   137B DB1AFE20C254DB79C923
3155   1385 05C24FDB0CC3    .DB 005h,0C2h,04Fh,0DBh,00Ch,0C3h,033h,0DBh,0AFh,032h,007h,0D8h,031h,0ABh,0DFh,0C5h  ;03D0h
3155   138B 33DBAF3207D831ABDFC5
3156   1395 791F1F1F1FE6    .DB 079h,01Fh,01Fh,01Fh,01Fh,0E6h,00Fh,05Fh,0CDh,015h,0D9h,0CDh,0B8h,0D8h,032h,0ABh  ;03E0h
3156   139B 0F5FCD15D9CDB8D832AB
3157   13A5 DFC179E60F32    .DB 0DFh,0C1h,079h,0E6h,00Fh,032h,0EFh,0DFh,0CDh,0BDh,0D8h,03Ah,007h,0D8h,0B7h,0C2h  ;03F0h
3157   13AB EFDFCDBDD83A07D8B7C2
3158   13B5 98DB31ABDFCD    .DB 098h,0DBh,031h,0ABh,0DFh,0CDh,098h,0D8h,0CDh,0D0h,0D9h,0C6h,061h,0CDh,08Ch,0D8h  ;0400h
3158   13BB 98D8CDD0D9C661CD8CD8
3159   13C5 3E3ECD8CD8CD    .DB 03Eh,03Eh,0CDh,08Ch,0D8h,0CDh,039h,0D9h,011h,080h,000h,0CDh,0D8h,0D9h,0CDh,0D0h  ;0410h
3159   13CB 39D9118000CDD8D9CDD0
3160   13D5 D932EFDFCD5E    .DB 0D9h,032h,0EFh,0DFh,0CDh,05Eh,0DAh,0C4h,009h,0DAh,03Ah,0F0h,0DFh,0B7h,0C2h,0A5h  ;0420h
3160   13DB DAC409DA3AF0DFB7C2A5
3161   13E5 DECD2EDB21C1    .DB 0DEh,0CDh,02Eh,0DBh,021h,0C1h,0DBh,05Fh,016h,000h,019h,019h,07Eh,023h,066h,06Fh  ;0430h
3161   13EB DB5F160019197E23666F
3162   13F5 E977DC1FDD5D    .DB 0E9h,077h,0DCh,01Fh,0DDh,05Dh,0DDh,0ADh,0DDh,010h,0DEh,08Eh,0DEh,0A5h,0DEh,021h  ;0440h
3162   13FB DDADDD10DE8EDEA5DE21
3163   1405 F3762200D821    .DB 0F3h,076h,022h,000h,0D8h,021h,000h,0D8h,0E9h,001h,0DFh,0DBh,0C3h,0A7h,0D8h,052h  ;0450h
3163   140B 00D8E901DFDBC3A7D852
3164   1415 656164206572    .DB 065h,061h,064h,020h,065h,072h,072h,06Fh,072h,000h,001h,0F0h,0DBh,0C3h,0A7h,0D8h  ;0460h
3164   141B 726F720001F0DBC3A7D8
3165   1425 4E6F2066696C    .DB 04Eh,06Fh,020h,066h,069h,06Ch,065h,000h,0CDh,05Eh,0DAh,03Ah,0F0h,0DFh,0B7h,0C2h  ;0470h
3165   142B 6500CD5EDA3AF0DFB7C2
3166   1435 09DA21CEDF01    .DB 009h,0DAh,021h,0CEh,0DFh,001h,00Bh,000h,07Eh,0FEh,020h,0CAh,033h,0DCh,023h,0D6h  ;0480h
3166   143B 0B007EFE20CA33DC23D6
3167   1445 30FE0AD209DA    .DB 030h,0FEh,00Ah,0D2h,009h,0DAh,057h,078h,0E6h,0E0h,0C2h,009h,0DAh,078h,007h,007h  ;0490h
3167   144B 5778E6E0C209DA780707
3168   1455 0780DA09DA80    .DB 007h,080h,0DAh,009h,0DAh,080h,0DAh,009h,0DAh,082h,0DAh,009h,0DAh,047h,00Dh,0C2h  ;04A0h
3168   145B DA09DA82DA09DA470DC2
3169   1465 08DCC97EFE20    .DB 008h,0DCh,0C9h,07Eh,0FEh,020h,0C2h,009h,0DAh,023h,00Dh,0C2h,033h,0DCh,078h,0C9h  ;04B0h
3169   146B C209DA230DC233DC78C9
3170   1475 06037E122313    .DB 006h,003h,07Eh,012h,023h,013h,005h,0C2h,042h,0DCh,0C9h,021h,080h,000h,081h,0CDh  ;04C0h
3170   147B 05C242DCC921800081CD
3171   1485 59DA7EC9AF32    .DB 059h,0DAh,07Eh,0C9h,0AFh,032h,0CDh,0DFh,03Ah,0F0h,0DFh,0B7h,0C8h,03Dh,021h,0EFh  ;04D0h
3171   148B CDDF3AF0DFB7C83D21EF
3172   1495 DFBEC8C3BDD8    .DB 0DFh,0BEh,0C8h,0C3h,0BDh,0D8h,03Ah,0F0h,0DFh,0B7h,0C8h,03Dh,021h,0EFh,0DFh,0BEh  ;04E0h
3172   149B 3AF0DFB7C83D21EFDFBE
3173   14A5 C83AEFDFC3BD    .DB 0C8h,03Ah,0EFh,0DFh,0C3h,0BDh,0D8h,0CDh,05Eh,0DAh,0CDh,054h,0DCh,021h,0CEh,0DFh  ;04F0h
3173   14AB D8CD5EDACD54DC21CEDF
3174   14B5 7EFE20C28FDC    .DB 07Eh,0FEh,020h,0C2h,08Fh,0DCh,006h,00Bh,036h,03Fh,023h,005h,0C2h,088h,0DCh,01Eh  ;0500h
3174   14BB 060B363F2305C288DC1E
3175   14C5 00D5CDE9D8CC    .DB 000h,0D5h,0CDh,0E9h,0D8h,0CCh,0EAh,0DBh,0CAh,01Bh,0DDh,03Ah,0EEh,0DFh,00Fh,00Fh  ;0510h
3175   14CB EADBCA1BDD3AEEDF0F0F
3176   14D5 0FE6604F3E0A    .DB 00Fh,0E6h,060h,04Fh,03Eh,00Ah,0CDh,04Bh,0DCh,017h,0DAh,00Fh,0DDh,0D1h,07Bh,01Ch  ;0520h
3176   14DB CD4BDC17DA0FDDD17B1C
3177   14E5 D5E603F5C2CC    .DB 0D5h,0E6h,003h,0F5h,0C2h,0CCh,0DCh,0CDh,098h,0D8h,0C5h,0CDh,0D0h,0D9h,0C1h,0C6h  ;0530h
3177   14EB DCCD98D8C5CDD0D9C1C6
3178   14F5 41CD92D83E3A    .DB 041h,0CDh,092h,0D8h,03Eh,03Ah,0CDh,092h,0D8h,0C3h,0D4h,0DCh,0CDh,0A2h,0D8h,03Eh  ;0540h
3178   14FB CD92D8C3D4DCCDA2D83E
3179   1505 3ACD92D8CDA2    .DB 03Ah,0CDh,092h,0D8h,0CDh,0A2h,0D8h,006h,001h,078h,0CDh,04Bh,0DCh,0E6h,07Fh,0FEh  ;0550h
3179   150B D8060178CD4BDCE67FFE
3180   1515 20C2F9DCF1F5    .DB 020h,0C2h,0F9h,0DCh,0F1h,0F5h,0FEh,003h,0C2h,0F7h,0DCh,03Eh,009h,0CDh,04Bh,0DCh  ;0560h
3180   151B FE03C2F7DC3E09CD4BDC
3181   1525 E67FFE20CA0E    .DB 0E6h,07Fh,0FEh,020h,0CAh,00Eh,0DDh,03Eh,020h,0CDh,092h,0D8h,004h,078h,0FEh,00Ch  ;0570h
3181   152B DD3E20CD92D80478FE0C
3182   1535 D20EDDFE09C2    .DB 0D2h,00Eh,0DDh,0FEh,009h,0C2h,0D9h,0DCh,0CDh,0A2h,0D8h,0C3h,0D9h,0DCh,0F1h,0CDh  ;0580h
3182   153B D9DCCDA2D8C3D9DCF1CD
3183   1545 C2D9C21BDDCD    .DB 0C2h,0D9h,0C2h,01Bh,0DDh,0CDh,0E4h,0D8h,0C3h,098h,0DCh,0D1h,0C3h,086h,0DFh,0CDh  ;0590h
3183   154B E4D8C398DCD1C386DFCD
3184   1555 5EDAFE0BC242    .DB 05Eh,0DAh,0FEh,00Bh,0C2h,042h,0DDh,001h,052h,0DDh,0CDh,0A7h,0D8h,0CDh,039h,0D9h  ;05A0h
3184   155B DD0152DDCDA7D8CD39D9
3185   1565 2107D835C282    .DB 021h,007h,0D8h,035h,0C2h,082h,0DBh,023h,07Eh,0FEh,059h,0C2h,082h,0DBh,023h,022h  ;05B0h
3185   156B DB237EFE59C282DB2322
3186   1575 88D8CD54DC11    .DB 088h,0D8h,0CDh,054h,0DCh,011h,0CDh,0DFh,0CDh,0EFh,0D8h,03Ch,0CCh,0EAh,0DBh,0C3h  ;05C0h
3186   157B CDDFCDEFD83CCCEADBC3
3187   1585 86DF416C6C20    .DB 086h,0DFh,041h,06Ch,06Ch,020h,028h,079h,02Fh,06Eh,029h,03Fh,000h,0CDh,05Eh,0DAh  ;05D0h
3187   158B 28792F6E293F00CD5EDA
3188   1595 C209DACD54DC    .DB 0C2h,009h,0DAh,0CDh,054h,0DCh,0CDh,0D0h,0D8h,0CAh,0A7h,0DDh,0CDh,098h,0D8h,021h  ;05E0h
3188   159B CDD0D8CAA7DDCD98D821
3189   15A5 F1DF36FF21F1    .DB 0F1h,0DFh,036h,0FFh,021h,0F1h,0DFh,07Eh,0FEh,080h,0DAh,087h,0DDh,0E5h,0CDh,0FEh  ;05F0h
3189   15AB DF7EFE80DA87DDE5CDFE
3190   15B5 D8E1C2A0DDAF    .DB 0D8h,0E1h,0C2h,0A0h,0DDh,0AFh,077h,034h,021h,080h,000h,0CDh,059h,0DAh,07Eh,0FEh  ;0600h
3190   15BB 7734218000CD59DA7EFE
3191   15C5 1ACA86DFCD8C    .DB 01Ah,0CAh,086h,0DFh,0CDh,08Ch,0D8h,0CDh,0C2h,0D9h,0C2h,086h,0DFh,0C3h,074h,0DDh  ;0610h
3191   15CB D8CDC2D9C286DFC374DD
3192   15D5 3DCA86DFCDD9    .DB 03Dh,0CAh,086h,0DFh,0CDh,0D9h,0DBh,0CDh,066h,0DCh,0C3h,009h,0DAh,0CDh,0F8h,0DBh  ;0620h
3192   15DB DBCD66DCC309DACDF8DB
3193   15E5 F5CD5EDAC209    .DB 0F5h,0CDh,05Eh,0DAh,0C2h,009h,0DAh,0CDh,054h,0DCh,011h,0CDh,0DFh,0D5h,0CDh,0EFh  ;0630h
3193   15EB DACD54DC11CDDFD5CDEF
3194   15F5 D8D1CD09D9CA    .DB 0D8h,0D1h,0CDh,009h,0D9h,0CAh,0FBh,0DDh,0AFh,032h,0EDh,0DFh,0F1h,06Fh,026h,000h  ;0640h
3194   15FB FBDDAF32EDDFF16F2600
3195   1605 291100017CB5    .DB 029h,011h,000h,001h,07Ch,0B5h,0CAh,0F1h,0DDh,02Bh,0E5h,021h,080h,000h,019h,0E5h  ;0650h
3195   160B CAF1DD2BE521800019E5
3196   1615 CDD8D911CDDF    .DB 0CDh,0D8h,0D9h,011h,0CDh,0DFh,0CDh,004h,0D9h,0D1h,0E1h,0C2h,0FBh,0DDh,0C3h,0D4h  ;0660h
3196   161B CD04D9D1E1C2FBDDC3D4
3197   1625 DD11CDDFCDDA    .DB 0DDh,011h,0CDh,0DFh,0CDh,0DAh,0D8h,03Ch,0C2h,001h,0DEh,001h,007h,0DEh,0CDh,0A7h  ;0670h
3197   162B D83CC201DE0107DECDA7
3198   1635 D8CDD5D9C386    .DB 0D8h,0CDh,0D5h,0D9h,0C3h,086h,0DFh,04Eh,06Fh,020h,073h,070h,061h,063h,065h,000h  ;0680h
3198   163B DF4E6F20737061636500
3199   1645 CD5EDAC209DA    .DB 0CDh,05Eh,0DAh,0C2h,009h,0DAh,03Ah,0F0h,0DFh,0F5h,0CDh,054h,0DCh,0CDh,0E9h,0D8h  ;0690h
3199   164B 3AF0DFF5CD54DCCDE9D8
3200   1655 C279DE21CDDF    .DB 0C2h,079h,0DEh,021h,0CDh,0DFh,011h,0DDh,0DFh,006h,010h,0CDh,042h,0DCh,02Ah,088h  ;06A0h
3200   165B 11DDDF0610CD42DC2A88
3201   1665 D8EBCD4FDAFE    .DB 0D8h,0EBh,0CDh,04Fh,0DAh,0FEh,03Dh,0CAh,03Fh,0DEh,0FEh,05Fh,0C2h,073h,0DEh,0EBh  ;06B0h
3201   166B 3DCA3FDEFE5FC273DEEB
3202   1675 232288D8CD5E    .DB 023h,022h,088h,0D8h,0CDh,05Eh,0DAh,0C2h,073h,0DEh,0F1h,047h,021h,0F0h,0DFh,07Eh  ;06C0h
3202   167B DAC273DEF14721F0DF7E
3203   1685 B7CA59DEB870    .DB 0B7h,0CAh,059h,0DEh,0B8h,070h,0C2h,073h,0DEh,070h,0AFh,032h,0CDh,0DFh,0CDh,0E9h  ;06D0h
3203   168B C273DE70AF32CDDFCDE9
3204   1695 D8CA6DDE11CD    .DB 0D8h,0CAh,06Dh,0DEh,011h,0CDh,0DFh,0CDh,00Eh,0D9h,0C3h,086h,0DFh,0CDh,0EAh,0DBh  ;06E0h
3204   169B DFCD0ED9C386DFCDEADB
3205   16A5 C386DFCD66DC    .DB 0C3h,086h,0DFh,0CDh,066h,0DCh,0C3h,009h,0DAh,001h,082h,0DEh,0CDh,0A7h,0D8h,0C3h  ;06F0h
3205   16AB C309DA0182DECDA7D8C3
3206   16B5 86DF46696C65    .DB 086h,0DFh,046h,069h,06Ch,065h,020h,065h,078h,069h,073h,074h,073h,000h,0CDh,0F8h  ;0700h
3206   16BB 2065786973747300CDF8
3207   16C5 DBFE10D209DA    .DB 0DBh,0FEh,010h,0D2h,009h,0DAh,05Fh,03Ah,0CEh,0DFh,0FEh,020h,0CAh,009h,0DAh,0CDh  ;0710h
3207   16CB 5F3ACEDFFE20CA09DACD
3208   16D5 15D9C389DFCD    .DB 015h,0D9h,0C3h,089h,0DFh,0CDh,0F5h,0D9h,03Ah,0CEh,0DFh,0FEh,020h,0C2h,0C4h,0DEh  ;0720h
3208   16DB F5D93ACEDFFE20C2C4DE
3209   16E5 3AF0DFB7CA89    .DB 03Ah,0F0h,0DFh,0B7h,0CAh,089h,0DFh,03Dh,032h,0EFh,0DFh,0CDh,029h,0D9h,0CDh,0BDh  ;0730h
3209   16EB DF3D32EFDFCD29D9CDBD
3210   16F5 D8C389DF11D6    .DB 0D8h,0C3h,089h,0DFh,011h,0D6h,0DFh,01Ah,0FEh,020h,0C2h,009h,0DAh,0D5h,0CDh,054h  ;0740h
3210   16FB DF1AFE20C209DAD5CD54
3211   1705 DCD12183DFCD    .DB 0DCh,0D1h,021h,083h,0DFh,0CDh,040h,0DCh,0CDh,0D0h,0D8h,0CAh,06Bh,0DFh,021h,000h  ;0750h
3211   170B 40DCCDD0D8CA6BDF2100
3212   1715 01E5EBCDD8D9    .DB 001h,0E5h,0EBh,0CDh,0D8h,0D9h,011h,0CDh,0DFh,0CDh,0F9h,0D8h,0C2h,001h,0DFh,0E1h  ;0760h
3212   171B 11CDDFCDF9D8C201DFE1
3213   1725 118000191100    .DB 011h,080h,000h,019h,011h,000h,0D8h,07Dh,093h,07Ch,09Ah,0D2h,071h,0DFh,0C3h,0E1h  ;0770h
3213   172B D87D937C9AD271DFC3E1
3214   1735 DEE13DC271DF    .DB 0DEh,0E1h,03Dh,0C2h,071h,0DFh,0CDh,066h,0DCh,0CDh,05Eh,0DAh,021h,0F0h,0DFh,0E5h  ;0780h
3214   173B CD66DCCD5EDA21F0DFE5
3215   1745 7E32CDDF3E10    .DB 07Eh,032h,0CDh,0DFh,03Eh,010h,0CDh,060h,0DAh,0E1h,07Eh,032h,0DDh,0DFh,0AFh,032h  ;0790h
3215   174B CD60DAE17E32DDDFAF32
3216   1755 EDDF115C0021    .DB 0EDh,0DFh,011h,05Ch,000h,021h,0CDh,0DFh,006h,021h,0CDh,042h,0DCh,021h,008h,0D8h  ;07A0h
3216   175B CDDF0621CD42DC2108D8
3217   1765 7EB7CA3EDFFE    .DB 07Eh,0B7h,0CAh,03Eh,0DFh,0FEh,020h,0CAh,03Eh,0DFh,023h,0C3h,030h,0DFh,006h,000h  ;07B0h
3217   176B 20CA3EDF23C330DF0600
3218   1775 1181007E12B7    .DB 011h,081h,000h,07Eh,012h,0B7h,0CAh,04Fh,0DFh,004h,023h,013h,0C3h,043h,0DFh,078h  ;07C0h
3218   177B CA4FDF042313C343DF78
3219   1785 328000CD98D8    .DB 032h,080h,000h,0CDh,098h,0D8h,0CDh,0D5h,0D9h,0CDh,01Ah,0D9h,0CDh,000h,001h,031h  ;07D0h
3219   178B CDD5D9CD1AD9CD000131
3220   1795 ABDFCD29D9CD    .DB 0ABh,0DFh,0CDh,029h,0D9h,0CDh,0BDh,0D8h,0C3h,082h,0DBh,0CDh,066h,0DCh,0C3h,009h  ;07E0h
3220   179B BDD8C382DBCD66DCC309
3221   17A5 DA017ADFCDA7    .DB 0DAh,001h,07Ah,0DFh,0CDh,0A7h,0D8h,0C3h,086h,0DFh,042h,061h,064h,020h,06Ch,06Fh  ;07F0h
3221   17AB D8C386DF426164206C6F
3222   17B5 616400434F4D    .DB 061h,064h,000h,043h,04Fh,04Dh,0CDh,066h,0DCh,0CDh,05Eh,0DAh,03Ah,0CEh,0DFh,0D6h  ;0800h
3222   17BB CD66DCCD5EDA3ACEDFD6
3223   17C5 2021F0DFB6C2    .DB 020h,021h,0F0h,0DFh,0B6h,0C2h,009h,0DAh,0C3h,082h,0DBh,000h,000h,000h,000h,000h  ;0810h
3223   17CB 09DAC382DB0000000000
3224   17D5 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,024h,024h,024h  ;0820h
3224   17DB 00000000000000242424
3225   17E5 202020202053    .DB 020h,020h,020h,020h,020h,053h,055h,042h,000h,000h,000h,000h,000h,000h,000h,000h  ;0830h
3225   17EB 55420000000000000000
3226   17F5 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,020h,020h  ;0840h
3226   17FB 00000000000000002020
3227   1805 202020202020    .DB 020h,020h,020h,020h,020h,020h,020h,020h,020h,000h,000h,000h,000h,000h,020h,020h  ;0850h
3227   180B 20202000000000002020
3228   1815 202020202020    .DB 020h,020h,020h,020h,020h,020h,020h,020h,020h,000h,000h,000h,000h,000h,000h,000h  ;0860h
3228   181B 20202000000000000000
3229   1825 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0870h
3229   182B 00000000000000000000
3230   1835 001600000000    .DB 000h,016h,000h,000h,000h,000h,0C3h,011h,0E0h,099h,0E0h,0A5h,0E0h,0ABh,0E0h,0B1h  ;0880h
3230   183B C311E099E0A5E0ABE0B1
3231   1845 E0EB2243E3EB    .DB 0E0h,0EBh,022h,043h,0E3h,0EBh,07Bh,032h,0D6h,0EDh,021h,000h,000h,022h,045h,0E3h  ;0890h
3231   184B 7B32D6ED2100002245E3
3232   1855 39220FE33141    .DB 039h,022h,00Fh,0E3h,031h,041h,0E3h,0AFh,032h,0E0h,0EDh,032h,0DEh,0EDh,021h,074h  ;08A0h
3232   185B E3AF32E0ED32DEED2174
3233   1865 EDE579FE29D0    .DB 0EDh,0E5h,079h,0FEh,029h,0D0h,04Bh,021h,047h,0E0h,05Fh,016h,000h,019h,019h,05Eh  ;08B0h
3233   186B 4B2147E05F160019195E
3234   1875 23562A43E3EB    .DB 023h,056h,02Ah,043h,0E3h,0EBh,0E9h,003h,0EEh,0C8h,0E2h,090h,0E1h,0CEh,0E2h,012h  ;08C0h
3234   187B E903EEC8E290E1CEE212
3235   1885 EE0FEED4E2ED    .DB 0EEh,00Fh,0EEh,0D4h,0E2h,0EDh,0E2h,0F3h,0E2h,0F8h,0E2h,0E1h,0E1h,0FEh,0E2h,07Eh  ;08D0h
3235   188B E2F3E2F8E2E1E1FEE27E
3236   1895 EC83EC45EC9C    .DB 0ECh,083h,0ECh,045h,0ECh,09Ch,0ECh,0A5h,0ECh,0ABh,0ECh,0C8h,0ECh,0D7h,0ECh,0E0h  ;08E0h
3236   189B ECA5ECABECC8ECD7ECE0
3237   18A5 ECE6ECECECF5    .DB 0ECh,0E6h,0ECh,0ECh,0ECh,0F5h,0ECh,0FEh,0ECh,004h,0EDh,00Ah,0EDh,011h,0EDh,02Ch  ;08F0h
3237   18AB ECFEEC04ED0AED11ED2C
3238   18B5 E517ED1DED26    .DB 0E5h,017h,0EDh,01Dh,0EDh,026h,0EDh,02Dh,0EDh,041h,0EDh,047h,0EDh,04Dh,0EDh,00Eh  ;0900h
3238   18BB ED2DED41ED47ED4DED0E
3239   18C5 EC53ED04E304    .DB 0ECh,053h,0EDh,004h,0E3h,004h,0E3h,09Bh,0EDh,021h,0CAh,0E0h,0CDh,0E5h,0E0h,0FEh  ;0910h
3239   18CB E39BED21CAE0CDE5E0FE
3240   18D5 03CA0000C921    .DB 003h,0CAh,000h,000h,0C9h,021h,0D5h,0E0h,0C3h,0B4h,0E0h,021h,0E1h,0E0h,0C3h,0B4h  ;0920h
3240   18DB D5E0C3B4E021E1E0C3B4
3241   18E5 E021DCE0CDE5    .DB 0E0h,021h,0DCh,0E0h,0CDh,0E5h,0E0h,0C3h,000h,000h,042h,064h,06Fh,073h,020h,045h  ;0930h
3241   18EB E0C3000042646F732045
3242   18F5 7272204F6E20    .DB 072h,072h,020h,04Fh,06Eh,020h,020h,03Ah,020h,024h,042h,061h,064h,020h,053h,065h  ;0940h
3242   18FB 203A2024426164205365
3243   1905 63746F722453    .DB 063h,074h,06Fh,072h,024h,053h,065h,06Ch,065h,063h,074h,024h,046h,069h,06Ch,065h  ;0950h
3243   190B 656C6563742446696C65
3244   1915 20522F4F24E5    .DB 020h,052h,02Fh,04Fh,024h,0E5h,0CDh,0C9h,0E1h,03Ah,042h,0E3h,0C6h,041h,032h,0C6h  ;0960h
3244   191B CDC9E13A42E3C64132C6
3245   1925 E001BAE0CDD3    .DB 0E0h,001h,0BAh,0E0h,0CDh,0D3h,0E1h,0C1h,0CDh,0D3h,0E1h,021h,00Eh,0E3h,07Eh,036h  ;0970h
3245   192B E1C1CDD3E1210EE37E36
3246   1935 00B7C0C309EE    .DB 000h,0B7h,0C0h,0C3h,009h,0EEh,0CDh,0FBh,0E0h,0CDh,014h,0E1h,0D8h,0F5h,04Fh,0CDh  ;0980h
3246   193B CDFBE0CD14E1D8F54FCD
3247   1945 90E1F1C9FE0D    .DB 090h,0E1h,0F1h,0C9h,0FEh,00Dh,0C8h,0FEh,00Ah,0C8h,0FEh,009h,0C8h,0FEh,008h,0C8h  ;0990h
3247   194B C8FE0AC8FE09C8FE08C8
3248   1955 FE20C93A0EE3    .DB 0FEh,020h,0C9h,03Ah,00Eh,0E3h,0B7h,0C2h,045h,0E1h,0CDh,006h,0EEh,0E6h,001h,0C8h  ;09A0h
3248   195B B7C245E1CD06EEE601C8
3249   1965 CD09EEFE13C2    .DB 0CDh,009h,0EEh,0FEh,013h,0C2h,042h,0E1h,0CDh,009h,0EEh,0FEh,003h,0CAh,000h,000h  ;09B0h
3249   196B 42E1CD09EEFE03CA0000
3250   1975 AFC9320EE33E    .DB 0AFh,0C9h,032h,00Eh,0E3h,03Eh,001h,0C9h,03Ah,00Ah,0E3h,0B7h,0C2h,062h,0E1h,0C5h  ;09C0h
3250   197B 01C93A0AE3B7C262E1C5
3251   1985 CD23E1C1C5CD    .DB 0CDh,023h,0E1h,0C1h,0C5h,0CDh,00Ch,0EEh,0C1h,0C5h,03Ah,00Dh,0E3h,0B7h,0C4h,00Fh  ;09D0h
3251   198B 0CEEC1C53A0DE3B7C40F
3252   1995 EEC179210CE3    .DB 0EEh,0C1h,079h,021h,00Ch,0E3h,0FEh,07Fh,0C8h,034h,0FEh,020h,0D0h,035h,07Eh,0B7h  ;09E0h
3252   199B FE7FC834FE20D0357EB7
3253   19A5 C879FE08C279    .DB 0C8h,079h,0FEh,008h,0C2h,079h,0E1h,035h,0C9h,0FEh,00Ah,0C0h,036h,000h,0C9h,079h  ;09F0h
3253   19AB E135C9FE0AC03600C979
3254   19B5 CD14E1D290E1    .DB 0CDh,014h,0E1h,0D2h,090h,0E1h,0F5h,00Eh,05Eh,0CDh,048h,0E1h,0F1h,0F6h,040h,04Fh  ;0A00h
3254   19BB F50E5ECD48E1F1F6404F
3255   19C5 79FE09C248E1    .DB 079h,0FEh,009h,0C2h,048h,0E1h,00Eh,020h,0CDh,048h,0E1h,03Ah,00Ch,0E3h,0E6h,007h  ;0A10h
3255   19CB 0E20CD48E13A0CE3E607
3256   19D5 C296E1C9CDAC    .DB 0C2h,096h,0E1h,0C9h,0CDh,0ACh,0E1h,00Eh,020h,0CDh,00Ch,0EEh,00Eh,008h,0C3h,00Ch  ;0A20h
3256   19DB E10E20CD0CEE0E08C30C
3257   19E5 EE0E23CD48E1    .DB 0EEh,00Eh,023h,0CDh,048h,0E1h,0CDh,0C9h,0E1h,03Ah,00Ch,0E3h,021h,00Bh,0E3h,0BEh  ;0A30h
3257   19EB CDC9E13A0CE3210BE3BE
3258   19F5 D00E20CD48E1    .DB 0D0h,00Eh,020h,0CDh,048h,0E1h,0C3h,0B9h,0E1h,00Eh,00Dh,0CDh,048h,0E1h,00Eh,00Ah  ;0A40h
3258   19FB C3B9E10E0DCD48E10E0A
3259   1A05 C348E10AFE24    .DB 0C3h,048h,0E1h,00Ah,0FEh,024h,0C8h,003h,0C5h,04Fh,0CDh,090h,0E1h,0C1h,0C3h,0D3h  ;0A50h
3259   1A0B C803C54FCD90E1C1C3D3
3260   1A15 E13A0CE3320B    .DB 0E1h,03Ah,00Ch,0E3h,032h,00Bh,0E3h,02Ah,043h,0E3h,04Eh,023h,0E5h,006h,000h,0C5h  ;0A60h
3260   1A1B E32A43E34E23E50600C5
3261   1A25 E5CDFBE0E67F    .DB 0E5h,0CDh,0FBh,0E0h,0E6h,07Fh,0E1h,0C1h,0FEh,00Dh,0CAh,0C1h,0E2h,0FEh,00Ah,0CAh  ;0A70h
3261   1A2B E1C1FE0DCAC1E2FE0ACA
3262   1A35 C1E2FE08C216    .DB 0C1h,0E2h,0FEh,008h,0C2h,016h,0E2h,078h,0B7h,0CAh,0EFh,0E1h,005h,03Ah,00Ch,0E3h  ;0A80h
3262   1A3B E278B7CAEFE1053A0CE3
3263   1A45 320AE3C370E2    .DB 032h,00Ah,0E3h,0C3h,070h,0E2h,0FEh,07Fh,0C2h,026h,0E2h,078h,0B7h,0CAh,0EFh,0E1h  ;0A90h
3263   1A4B FE7FC226E278B7CAEFE1
3264   1A55 7E052BC3A9E2    .DB 07Eh,005h,02Bh,0C3h,0A9h,0E2h,0FEh,005h,0C2h,037h,0E2h,0C5h,0E5h,0CDh,0C9h,0E1h  ;0AA0h
3264   1A5B FE05C237E2C5E5CDC9E1
3265   1A65 AF320BE3C3F1    .DB 0AFh,032h,00Bh,0E3h,0C3h,0F1h,0E1h,0FEh,010h,0C2h,048h,0E2h,0E5h,021h,00Dh,0E3h  ;0AB0h
3265   1A6B E1FE10C248E2E5210DE3
3266   1A75 3E019677E1C3    .DB 03Eh,001h,096h,077h,0E1h,0C3h,0EFh,0E1h,0FEh,018h,0C2h,05Fh,0E2h,0E1h,03Ah,00Bh  ;0AC0h
3266   1A7B EFE1FE18C25FE2E13A0B
3267   1A85 E3210CE3BED2    .DB 0E3h,021h,00Ch,0E3h,0BEh,0D2h,0E1h,0E1h,035h,0CDh,0A4h,0E1h,0C3h,04Eh,0E2h,0FEh  ;0AD0h
3267   1A8B E1E135CDA4E1C34EE2FE
3268   1A95 15C26BE2CDB1    .DB 015h,0C2h,06Bh,0E2h,0CDh,0B1h,0E1h,0E1h,0C3h,0E1h,0E1h,0FEh,012h,0C2h,0A6h,0E2h  ;0AE0h
3268   1A9B E1E1C3E1E1FE12C2A6E2
3269   1AA5 C5CDB1E1C1E1    .DB 0C5h,0CDh,0B1h,0E1h,0C1h,0E1h,0E5h,0C5h,078h,0B7h,0CAh,08Ah,0E2h,023h,04Eh,005h  ;0AF0h
3269   1AAB E5C578B7CA8AE2234E05
3270   1AB5 C5E5CD7FE1E1    .DB 0C5h,0E5h,0CDh,07Fh,0E1h,0E1h,0C1h,0C3h,078h,0E2h,0E5h,03Ah,00Ah,0E3h,0B7h,0CAh  ;0B00h
3270   1ABB C1C378E2E53A0AE3B7CA
3271   1AC5 F1E1210CE396    .DB 0F1h,0E1h,021h,00Ch,0E3h,096h,032h,00Ah,0E3h,0CDh,0A4h,0E1h,021h,00Ah,0E3h,035h  ;0B10h
3271   1ACB 320AE3CDA4E1210AE335
3272   1AD5 C299E2C3F1E1    .DB 0C2h,099h,0E2h,0C3h,0F1h,0E1h,023h,077h,004h,0C5h,0E5h,04Fh,0CDh,07Fh,0E1h,0E1h  ;0B20h
3272   1ADB 237704C5E54FCD7FE1E1
3273   1AE5 C17EFE0378C2    .DB 0C1h,07Eh,0FEh,003h,078h,0C2h,0BDh,0E2h,0FEh,001h,0CAh,000h,000h,0B9h,0DAh,0EFh  ;0B30h
3273   1AEB BDE2FE01CA0000B9DAEF
3274   1AF5 E1E1700E0DC3    .DB 0E1h,0E1h,070h,00Eh,00Dh,0C3h,048h,0E1h,0CDh,006h,0E1h,0C3h,001h,0E3h,0CDh,015h  ;0B40h
3274   1AFB 48E1CD06E1C301E3CD15
3275   1B05 EEC301E3793C    .DB 0EEh,0C3h,001h,0E3h,079h,03Ch,0CAh,0E0h,0E2h,03Ch,0CAh,006h,0EEh,0C3h,00Ch,0EEh  ;0B50h
3275   1B0B CAE0E23CCA06EEC30CEE
3276   1B15 CD06EEB7CA91    .DB 0CDh,006h,0EEh,0B7h,0CAh,091h,0EDh,0CDh,009h,0EEh,0C3h,001h,0E3h,03Ah,003h,000h  ;0B60h
3276   1B1B EDCD09EEC301E33A0300
3277   1B25 C301E3210300    .DB 0C3h,001h,0E3h,021h,003h,000h,071h,0C9h,0EBh,04Dh,044h,0C3h,0D3h,0E1h,0CDh,023h  ;0B70h
3277   1B2B 71C9EB4D44C3D3E1CD23
3278   1B35 E13245E3C93E    .DB 0E1h,032h,045h,0E3h,0C9h,03Eh,001h,0C3h,001h,0E3h,000h,002h,000h,000h,000h,000h  ;0B80h
3278   1B3B 01C301E3000200000000
3279   1B45 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0B90h
3279   1B4B 00000000000000000000
3280   1B55 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0BA0h
3280   1B5B 00000000000000000000
3281   1B65 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0BB0h
3281   1B6B 00000000000000000000
3282   1B75 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,021h,00Bh,0E0h,05Eh,023h,056h,0EBh,0E9h,00Ch  ;0BC0h
3282   1B7B 00210BE05E2356EBE90C
3283   1B85 0DC81A771323    .DB 00Dh,0C8h,01Ah,077h,013h,023h,0C3h,050h,0E3h,03Ah,042h,0E3h,04Fh,0CDh,01Bh,0EEh  ;0BD0h
3283   1B8B C350E33A42E34FCD1BEE
3284   1B95 7CB5C85E2356    .DB 07Ch,0B5h,0C8h,05Eh,023h,056h,023h,022h,0B3h,0EDh,023h,023h,022h,0B5h,0EDh,023h  ;0BE0h
3284   1B9B 2322B3ED232322B5ED23
3285   1BA5 2322B7ED2323    .DB 023h,022h,0B7h,0EDh,023h,023h,0EBh,022h,0D0h,0EDh,021h,0B9h,0EDh,00Eh,008h,0CDh  ;0BF0h
3285   1BAB EB22D0ED21B9ED0E08CD
3286   1BB5 4FE32ABBEDEB    .DB 04Fh,0E3h,02Ah,0BBh,0EDh,0EBh,021h,0C1h,0EDh,00Eh,00Fh,0CDh,04Fh,0E3h,02Ah,0C6h  ;0C00h
3286   1BBB 21C1ED0E0FCD4FE32AC6
3287   1BC5 ED7C21DDED36    .DB 0EDh,07Ch,021h,0DDh,0EDh,036h,0FFh,0B7h,0CAh,09Dh,0E3h,036h,000h,03Eh,0FFh,0B7h  ;0C10h
3287   1BCB FFB7CA9DE336003EFFB7
3288   1BD5 C9CD18EEAF2A    .DB 0C9h,0CDh,018h,0EEh,0AFh,02Ah,0B5h,0EDh,077h,023h,077h,02Ah,0B7h,0EDh,077h,023h  ;0C20h
3288   1BDB B5ED7723772AB7ED7723
3289   1BE5 77C9CD27EEC3    .DB 077h,0C9h,0CDh,027h,0EEh,0C3h,0BBh,0E3h,0CDh,02Ah,0EEh,0B7h,0C8h,021h,009h,0E0h  ;0C30h
3289   1BEB BBE3CD2AEEB7C82109E0
3290   1BF5 C34AE32AEAED    .DB 0C3h,04Ah,0E3h,02Ah,0EAh,0EDh,00Eh,002h,0CDh,0EAh,0E4h,022h,0E5h,0EDh,022h,0ECh  ;0C40h
3290   1BFB 0E02CDEAE422E5ED22EC
3291   1C05 ED21E5ED4E23    .DB 0EDh,021h,0E5h,0EDh,04Eh,023h,046h,02Ah,0B7h,0EDh,05Eh,023h,056h,02Ah,0B5h,0EDh  ;0C50h
3291   1C0B 462AB7ED5E23562AB5ED
3292   1C15 7E23666F7993    .DB 07Eh,023h,066h,06Fh,079h,093h,078h,09Ah,0D2h,0FAh,0E3h,0E5h,02Ah,0C1h,0EDh,07Bh  ;0C60h
3292   1C1B 789AD2FAE3E52AC1ED7B
3293   1C25 955F7A9C57E1    .DB 095h,05Fh,07Ah,09Ch,057h,0E1h,02Bh,0C3h,0E4h,0E3h,0E5h,02Ah,0C1h,0EDh,019h,0DAh  ;0C70h
3293   1C2B 2BC3E4E3E52AC1ED19DA
3294   1C35 0FE47995789C    .DB 00Fh,0E4h,079h,095h,078h,09Ch,0DAh,00Fh,0E4h,0EBh,0E1h,023h,0C3h,0FAh,0E3h,0E1h  ;0C80h
3294   1C3B DA0FE4EBE123C3FAE3E1
3295   1C45 C5D5E5EB2ACE    .DB 0C5h,0D5h,0E5h,0EBh,02Ah,0CEh,0EDh,019h,044h,04Dh,0CDh,01Eh,0EEh,0D1h,02Ah,0B5h  ;0C90h
3295   1C4B ED19444DCD1EEED12AB5
3296   1C55 ED732372D12A    .DB 0EDh,073h,023h,072h,0D1h,02Ah,0B7h,0EDh,073h,023h,072h,0C1h,079h,093h,04Fh,078h  ;0CA0h
3296   1C5B B7ED732372C179934F78
3297   1C65 9A472AD0EDEB    .DB 09Ah,047h,02Ah,0D0h,0EDh,0EBh,0CDh,030h,0EEh,04Dh,044h,0C3h,021h,0EEh,021h,0C3h  ;0CB0h
3297   1C6B CD30EE4D44C321EE21C3
3298   1C75 ED4E3AE3EDB7    .DB 0EDh,04Eh,03Ah,0E3h,0EDh,0B7h,01Fh,00Dh,0C2h,045h,0E4h,047h,03Eh,008h,096h,04Fh  ;0CC0h
3298   1C7B 1F0DC245E4473E08964F
3299   1C85 3AE2ED0DCA5C    .DB 03Ah,0E2h,0EDh,00Dh,0CAh,05Ch,0E4h,0B7h,017h,0C3h,053h,0E4h,080h,0C9h,02Ah,043h  ;0CD0h
3299   1C8B E4B717C353E480C92A43
3300   1C95 E31110001909    .DB 0E3h,011h,010h,000h,019h,009h,03Ah,0DDh,0EDh,0B7h,0CAh,071h,0E4h,06Eh,026h,000h  ;0CE0h
3300   1C9B 3ADDEDB7CA71E46E2600
3301   1CA5 C9095E2356EB    .DB 0C9h,009h,05Eh,023h,056h,0EBh,0C9h,0CDh,03Eh,0E4h,04Fh,006h,000h,0CDh,05Eh,0E4h  ;0CF0h
3301   1CAB C9CD3EE44F0600CD5EE4
3302   1CB5 22E5EDC92AE5    .DB 022h,0E5h,0EDh,0C9h,02Ah,0E5h,0EDh,07Dh,0B4h,0C9h,03Ah,0C3h,0EDh,02Ah,0E5h,0EDh  ;0D00h
3302   1CBB ED7DB4C93AC3ED2AE5ED
3303   1CC5 293DC290E422    .DB 029h,03Dh,0C2h,090h,0E4h,022h,0E7h,0EDh,03Ah,0C4h,0EDh,04Fh,03Ah,0E3h,0EDh,0A1h  ;0D10h
3303   1CCB E7ED3AC4ED4F3AE3EDA1
3304   1CD5 B56F22E5EDC9    .DB 0B5h,06Fh,022h,0E5h,0EDh,0C9h,02Ah,043h,0E3h,011h,00Ch,000h,019h,0C9h,02Ah,043h  ;0D20h
3304   1CDB 2A43E3110C0019C92A43
3305   1CE5 E3110F0019EB    .DB 0E3h,011h,00Fh,000h,019h,0EBh,021h,011h,000h,019h,0C9h,0CDh,0AEh,0E4h,07Eh,032h  ;0D30h
3305   1CEB 21110019C9CDAEE47E32
3306   1CF5 E3EDEB7E32E1    .DB 0E3h,0EDh,0EBh,07Eh,032h,0E1h,0EDh,0CDh,0A6h,0E4h,03Ah,0C5h,0EDh,0A6h,032h,0E2h  ;0D40h
3306   1CFB EDCDA6E43AC5EDA632E2
3307   1D05 EDC9CDAEE43A    .DB 0EDh,0C9h,0CDh,0AEh,0E4h,03Ah,0D5h,0EDh,0FEh,002h,0C2h,0DEh,0E4h,0AFh,04Fh,03Ah  ;0D50h
3307   1D0B D5EDFE02C2DEE4AF4F3A
3308   1D15 E3ED8177EB3A    .DB 0E3h,0EDh,081h,077h,0EBh,03Ah,0E1h,0EDh,077h,0C9h,00Ch,00Dh,0C8h,07Ch,0B7h,01Fh  ;0D60h
3308   1D1B E1ED77C90C0DC87CB71F
3309   1D25 677D1F6FC3EB    .DB 067h,07Dh,01Fh,06Fh,0C3h,0EBh,0E4h,00Eh,080h,02Ah,0B9h,0EDh,0AFh,086h,023h,00Dh  ;0D70h
3309   1D2B E40E802AB9EDAF86230D
3310   1D35 C2FDE4C90C0D    .DB 0C2h,0FDh,0E4h,0C9h,00Ch,00Dh,0C8h,029h,0C3h,005h,0E5h,0C5h,03Ah,042h,0E3h,04Fh  ;0D80h
3310   1D3B C829C305E5C53A42E34F
3311   1D45 210100CD04E5    .DB 021h,001h,000h,0CDh,004h,0E5h,0C1h,079h,0B5h,06Fh,078h,0B4h,067h,0C9h,02Ah,0ADh  ;0D90h
3311   1D4B C179B56F78B467C92AAD
3312   1D55 ED3A42E34FCD    .DB 0EDh,03Ah,042h,0E3h,04Fh,0CDh,0EAh,0E4h,07Dh,0E6h,001h,0C9h,021h,0ADh,0EDh,04Eh  ;0DA0h
3312   1D5B EAE47DE601C921ADED4E
3313   1D65 2346CD0BE522    .DB 023h,046h,0CDh,00Bh,0E5h,022h,0ADh,0EDh,02Ah,0C8h,0EDh,023h,0EBh,02Ah,0B3h,0EDh  ;0DB0h
3313   1D6B ADED2AC8ED23EB2AB3ED
3314   1D75 732372C9CD5E    .DB 073h,023h,072h,0C9h,0CDh,05Eh,0E5h,011h,009h,000h,019h,07Eh,017h,0D0h,021h,00Fh  ;0DC0h
3314   1D7B E5110900197E17D0210F
3315   1D85 E0C34AE3CD1E    .DB 0E0h,0C3h,04Ah,0E3h,0CDh,01Eh,0E5h,0C8h,021h,00Dh,0E0h,0C3h,04Ah,0E3h,02Ah,0B9h  ;0DD0h
3315   1D8B E5C8210DE0C34AE32AB9
3316   1D95 ED3AE9ED856F    .DB 0EDh,03Ah,0E9h,0EDh,085h,06Fh,0D0h,024h,0C9h,02Ah,043h,0E3h,011h,00Eh,000h,019h  ;0DE0h
3316   1D9B D024C92A43E3110E0019
3317   1DA5 7EC9CD69E536    .DB 07Eh,0C9h,0CDh,069h,0E5h,036h,000h,0C9h,0CDh,069h,0E5h,0F6h,080h,077h,0C9h,02Ah  ;0DF0h
3317   1DAB 00C9CD69E5F68077C92A
3318   1DB5 EAEDEB2AB3ED    .DB 0EAh,0EDh,0EBh,02Ah,0B3h,0EDh,07Bh,096h,023h,07Ah,09Eh,0C9h,0CDh,07Fh,0E5h,0D8h  ;0E00h
3318   1DBB 7B96237A9EC9CD7FE5D8
3319   1DC5 13722B73C97B    .DB 013h,072h,02Bh,073h,0C9h,07Bh,095h,06Fh,07Ah,09Ch,067h,0C9h,00Eh,0FFh,02Ah,0ECh  ;0E10h
3319   1DCB 956F7A9C67C90EFF2AEC
3320   1DD5 EDEB2ACCEDCD    .DB 0EDh,0EBh,02Ah,0CCh,0EDh,0CDh,095h,0E5h,0D0h,0C5h,0CDh,0F7h,0E4h,02Ah,0BDh,0EDh  ;0E20h
3320   1DDB 95E5D0C5CDF7E42ABDED
3321   1DE5 EB2AECED19C1    .DB 0EBh,02Ah,0ECh,0EDh,019h,0C1h,00Ch,0CAh,0C4h,0E5h,0BEh,0C8h,0CDh,07Fh,0E5h,0D0h  ;0E30h
3321   1DEB 0CCAC4E5BEC8CD7FE5D0
3322   1DF5 CD2CE5C977C9    .DB 0CDh,02Ch,0E5h,0C9h,077h,0C9h,0CDh,09Ch,0E5h,0CDh,0E0h,0E5h,00Eh,001h,0CDh,0B8h  ;0E40h
3322   1DFB CD9CE5CDE0E50E01CDB8
3323   1E05 E3C3DAE5CDE0    .DB 0E3h,0C3h,0DAh,0E5h,0CDh,0E0h,0E5h,0CDh,0B2h,0E3h,021h,0B1h,0EDh,0C3h,0E3h,0E5h  ;0E50h
3323   1E0B E5CDB2E321B1EDC3E3E5
3324   1E15 21B9ED4E2346    .DB 021h,0B9h,0EDh,04Eh,023h,046h,0C3h,024h,0EEh,02Ah,0B9h,0EDh,0EBh,02Ah,0B1h,0EDh  ;0E60h
3324   1E1B C324EE2AB9EDEB2AB1ED
3325   1E25 0E80C34FE321    .DB 00Eh,080h,0C3h,04Fh,0E3h,021h,0EAh,0EDh,07Eh,023h,0BEh,0C0h,03Ch,0C9h,021h,0FFh  ;0E70h
3325   1E2B EAED7E23BEC03CC921FF
3326   1E35 FF22EAEDC92A    .DB 0FFh,022h,0EAh,0EDh,0C9h,02Ah,0C8h,0EDh,0EBh,02Ah,0EAh,0EDh,023h,022h,0EAh,0EDh  ;0E80h
3326   1E3B C8EDEB2AEAED2322EAED
3327   1E45 CD95E5D219E6    .DB 0CDh,095h,0E5h,0D2h,019h,0E6h,0C3h,0FEh,0E5h,03Ah,0EAh,0EDh,0E6h,003h,006h,005h  ;0E90h
3327   1E4B C3FEE53AEAEDE6030605
3328   1E55 8705C220E632    .DB 087h,005h,0C2h,020h,0E6h,032h,0E9h,0EDh,0B7h,0C0h,0C5h,0CDh,0C3h,0E3h,0CDh,0D4h  ;0EA0h
3328   1E5B E9EDB7C0C5CDC3E3CDD4
3329   1E65 E5C1C39EE579    .DB 0E5h,0C1h,0C3h,09Eh,0E5h,079h,0E6h,007h,03Ch,05Fh,057h,079h,00Fh,00Fh,00Fh,0E6h  ;0EB0h
3329   1E6B E6073C5F57790F0F0FE6
3330   1E75 1F4F78878787    .DB 01Fh,04Fh,078h,087h,087h,087h,087h,087h,0B1h,04Fh,078h,00Fh,00Fh,00Fh,0E6h,01Fh  ;0EC0h
3330   1E7B 8787B14F780F0F0FE61F
3331   1E85 472ABFED097E    .DB 047h,02Ah,0BFh,0EDh,009h,07Eh,007h,01Dh,0C2h,056h,0E6h,0C9h,0D5h,0CDh,035h,0E6h  ;0ED0h
3331   1E8B 071DC256E6C9D5CD35E6
3332   1E95 E6FEC1B10F15    .DB 0E6h,0FEh,0C1h,0B1h,00Fh,015h,0C2h,064h,0E6h,077h,0C9h,0CDh,05Eh,0E5h,011h,010h  ;0EE0h
3332   1E9B C264E677C9CD5EE51110
3333   1EA5 0019C50E11D1    .DB 000h,019h,0C5h,00Eh,011h,0D1h,00Dh,0C8h,0D5h,03Ah,0DDh,0EDh,0B7h,0CAh,088h,0E6h  ;0EF0h
3333   1EAB 0DC8D53ADDEDB7CA88E6
3334   1EB5 C5E54E0600C3    .DB 0C5h,0E5h,04Eh,006h,000h,0C3h,08Eh,0E6h,00Dh,0C5h,04Eh,023h,046h,0E5h,079h,0B0h  ;0F00h
3334   1EBB 8EE60DC54E2346E579B0
3335   1EC5 CA9DE62AC6ED    .DB 0CAh,09Dh,0E6h,02Ah,0C6h,0EDh,07Dh,091h,07Ch,098h,0D4h,05Ch,0E6h,0E1h,023h,0C1h  ;0F10h
3335   1ECB 7D917C98D45CE6E123C1
3336   1ED5 C375E62AC6ED    .DB 0C3h,075h,0E6h,02Ah,0C6h,0EDh,00Eh,003h,0CDh,0EAh,0E4h,023h,044h,04Dh,02Ah,0BFh  ;0F20h
3336   1EDB 0E03CDEAE423444D2ABF
3337   1EE5 ED3600230B78    .DB 0EDh,036h,000h,023h,00Bh,078h,0B1h,0C2h,0B1h,0E6h,02Ah,0CAh,0EDh,0EBh,02Ah,0BFh  ;0F30h
3337   1EEB B1C2B1E62ACAEDEB2ABF
3338   1EF5 ED732372CDA1    .DB 0EDh,073h,023h,072h,0CDh,0A1h,0E3h,02Ah,0B3h,0EDh,036h,003h,023h,036h,000h,0CDh  ;0F40h
3338   1EFB E32AB3ED3603233600CD
3339   1F05 FEE50EFFCD05    .DB 0FEh,0E5h,00Eh,0FFh,0CDh,005h,0E6h,0CDh,0F5h,0E5h,0C8h,0CDh,05Eh,0E5h,03Eh,0E5h  ;0F50h
3339   1F0B E6CDF5E5C8CD5EE53EE5
3340   1F15 BECAD2E63A41    .DB 0BEh,0CAh,0D2h,0E6h,03Ah,041h,0E3h,0BEh,0C2h,0F6h,0E6h,023h,07Eh,0D6h,024h,0C2h  ;0F60h
3340   1F1B E3BEC2F6E6237ED624C2
3341   1F25 F6E63D3245E3    .DB 0F6h,0E6h,03Dh,032h,045h,0E3h,00Eh,001h,0CDh,06Bh,0E6h,0CDh,08Ch,0E5h,0C3h,0D2h  ;0F70h
3341   1F2B 0E01CD6BE6CD8CE5C3D2
3342   1F35 E63AD4EDC301    .DB 0E6h,03Ah,0D4h,0EDh,0C3h,001h,0E3h,0C5h,0F5h,03Ah,0C5h,0EDh,02Fh,047h,079h,0A0h  ;0F80h
3342   1F3B E3C5F53AC5ED2F4779A0
3343   1F45 4FF1A091E61F    .DB 04Fh,0F1h,0A0h,091h,0E6h,01Fh,0C1h,0C9h,03Eh,0FFh,032h,0D4h,0EDh,021h,0D8h,0EDh  ;0F90h
3343   1F4B C1C93EFF32D4ED21D8ED
3344   1F55 712A43E322D9    .DB 071h,02Ah,043h,0E3h,022h,0D9h,0EDh,0CDh,0FEh,0E5h,0CDh,0A1h,0E3h,00Eh,000h,0CDh  ;0FA0h
3344   1F5B EDCDFEE5CDA1E30E00CD
3345   1F65 05E6CDF5E5CA    .DB 005h,0E6h,0CDh,0F5h,0E5h,0CAh,094h,0E7h,02Ah,0D9h,0EDh,0EBh,01Ah,0FEh,0E5h,0CAh  ;0FB0h
3345   1F6B 94E72AD9EDEB1AFEE5CA
3346   1F75 4AE7D5CD7FE5    .DB 04Ah,0E7h,0D5h,0CDh,07Fh,0E5h,0D1h,0D2h,094h,0E7h,0CDh,05Eh,0E5h,03Ah,0D8h,0EDh  ;0FC0h
3346   1F7B D1D294E7CD5EE53AD8ED
3347   1F85 4F060079B7CA    .DB 04Fh,006h,000h,079h,0B7h,0CAh,083h,0E7h,01Ah,0FEh,03Fh,0CAh,07Ch,0E7h,078h,0FEh  ;0FD0h
3347   1F8B 83E71AFE3FCA7CE778FE
3348   1F95 0DCA7CE7FE0C    .DB 00Dh,0CAh,07Ch,0E7h,0FEh,00Ch,01Ah,0CAh,073h,0E7h,096h,0E6h,07Fh,0C2h,02Dh,0E7h  ;0FE0h
3348   1F9B 1ACA73E796E67FC22DE7
3349   1FA5 C37CE7C54ECD    .DB 0C3h,07Ch,0E7h,0C5h,04Eh,0CDh,007h,0E7h,0C1h,0C2h,02Dh,0E7h,013h,023h,004h,00Dh  ;0FF0h
3349   1FAB 07E7C1C22DE71323040D
3350   1FB5 C353E73AEAED    .DB 0C3h,053h,0E7h,03Ah,0EAh,0EDh,0E6h,003h,032h,045h,0E3h,021h,0D4h,0EDh,07Eh,017h  ;1000h
3350   1FBB E6033245E321D4ED7E17
3351   1FC5 D0AF77C9CDFE    .DB 0D0h,0AFh,077h,0C9h,0CDh,0FEh,0E5h,03Eh,0FFh,0C3h,001h,0E3h,0CDh,054h,0E5h,00Eh  ;1010h
3351   1FCB E53EFFC301E3CD54E50E
3352   1FD5 0CCD18E7CDF5    .DB 00Ch,0CDh,018h,0E7h,0CDh,0F5h,0E5h,0C8h,0CDh,044h,0E5h,0CDh,05Eh,0E5h,036h,0E5h  ;1020h
3352   1FDB E5C8CD44E5CD5EE536E5
3353   1FE5 0E00CD6BE6CD    .DB 00Eh,000h,0CDh,06Bh,0E6h,0CDh,0C6h,0E5h,0CDh,02Dh,0E7h,0C3h,0A4h,0E7h,050h,059h  ;1030h
3353   1FEB C6E5CD2DE7C3A4E75059
3354   1FF5 79B0CAD1E70B    .DB 079h,0B0h,0CAh,0D1h,0E7h,00Bh,0D5h,0C5h,0CDh,035h,0E6h,01Fh,0D2h,0ECh,0E7h,0C1h  ;1040h
3354   1FFB D5C5CD35E61FD2ECE7C1
3355   2005 D12AC6ED7B95    .DB 0D1h,02Ah,0C6h,0EDh,07Bh,095h,07Ah,09Ch,0D2h,0F4h,0E7h,013h,0C5h,0D5h,042h,04Bh  ;1050h
3355   200B 7A9CD2F4E713C5D5424B
3356   2015 CD35E61FD2EC    .DB 0CDh,035h,0E6h,01Fh,0D2h,0ECh,0E7h,0D1h,0C1h,0C3h,0C0h,0E7h,017h,03Ch,0CDh,064h  ;1060h
3356   201B E7D1C1C3C0E7173CCD64
3357   2025 E6E1D1C979B0    .DB 0E6h,0E1h,0D1h,0C9h,079h,0B0h,0C2h,0C0h,0E7h,021h,000h,000h,0C9h,00Eh,000h,01Eh  ;1070h
3357   202B C2C0E7210000C90E001E
3358   2035 20D506002A43    .DB 020h,0D5h,006h,000h,02Ah,043h,0E3h,009h,0EBh,0CDh,05Eh,0E5h,0C1h,0CDh,04Fh,0E3h  ;1080h
3358   203B E309EBCD5EE5C1CD4FE3
3359   2045 CDC3E3C3C6E5    .DB 0CDh,0C3h,0E3h,0C3h,0C6h,0E5h,0CDh,054h,0E5h,00Eh,00Ch,0CDh,018h,0E7h,02Ah,043h  ;1090h
3359   204B CD54E50E0CCD18E72A43
3360   2055 E37E11100019    .DB 0E3h,07Eh,011h,010h,000h,019h,077h,0CDh,0F5h,0E5h,0C8h,0CDh,044h,0E5h,00Eh,010h  ;10A0h
3360   205B 77CDF5E5C8CD44E50E10
3361   2065 1E0CCD01E8CD    .DB 01Eh,00Ch,0CDh,001h,0E8h,0CDh,02Dh,0E7h,0C3h,027h,0E8h,00Eh,00Ch,0CDh,018h,0E7h  ;10B0h
3361   206B 2DE7C327E80E0CCD18E7
3362   2075 CDF5E5C80E00    .DB 0CDh,0F5h,0E5h,0C8h,00Eh,000h,01Eh,00Ch,0CDh,001h,0E8h,0CDh,02Dh,0E7h,0C3h,040h  ;10C0h
3362   207B 1E0CCD01E8CD2DE7C340
3363   2085 E80E0FCD18E7    .DB 0E8h,00Eh,00Fh,0CDh,018h,0E7h,0CDh,0F5h,0E5h,0C8h,0CDh,0A6h,0E4h,07Eh,0F5h,0E5h  ;10D0h
3363   208B CDF5E5C8CDA6E47EF5E5
3364   2095 CD5EE5EB2A43    .DB 0CDh,05Eh,0E5h,0EBh,02Ah,043h,0E3h,00Eh,020h,0D5h,0CDh,04Fh,0E3h,0CDh,078h,0E5h  ;10E0h
3364   209B E30E20D5CD4FE3CD78E5
3365   20A5 D1210C00194E    .DB 0D1h,021h,00Ch,000h,019h,04Eh,021h,00Fh,000h,019h,046h,0E1h,0F1h,077h,079h,0BEh  ;10F0h
3365   20AB 210F001946E1F17779BE
3366   20B5 78CA8BE83E00    .DB 078h,0CAh,08Bh,0E8h,03Eh,000h,0DAh,08Bh,0E8h,03Eh,080h,02Ah,043h,0E3h,011h,00Fh  ;1100h
3366   20BB DA8BE83E802A43E3110F
3367   20C5 001977C97E23    .DB 000h,019h,077h,0C9h,07Eh,023h,0B6h,02Bh,0C0h,01Ah,077h,013h,023h,01Ah,077h,01Bh  ;1110h
3367   20CB B62BC01A7713231A771B
3368   20D5 2BC9AF3245E3    .DB 02Bh,0C9h,0AFh,032h,045h,0E3h,032h,0EAh,0EDh,032h,0EBh,0EDh,0CDh,01Eh,0E5h,0C0h  ;1120h
3368   20DB 32EAED32EBEDCD1EE5C0
3369   20E5 CD69E5E680C0    .DB 0CDh,069h,0E5h,0E6h,080h,0C0h,00Eh,00Fh,0CDh,018h,0E7h,0CDh,0F5h,0E5h,0C8h,001h  ;1130h
3369   20EB 0E0FCD18E7CDF5E5C801
3370   20F5 1000CD5EE509    .DB 010h,000h,0CDh,05Eh,0E5h,009h,0EBh,02Ah,043h,0E3h,009h,00Eh,010h,03Ah,0DDh,0EDh  ;1140h
3370   20FB EB2A43E3090E103ADDED
3371   2105 B7CAE8E87EB7    .DB 0B7h,0CAh,0E8h,0E8h,07Eh,0B7h,01Ah,0C2h,0DBh,0E8h,077h,0B7h,0C2h,0E1h,0E8h,07Eh  ;1150h
3371   210B 1AC2DBE877B7C2E1E87E
3372   2115 12BEC21FE9C3    .DB 012h,0BEh,0C2h,01Fh,0E9h,0C3h,0FDh,0E8h,0CDh,094h,0E8h,0EBh,0CDh,094h,0E8h,0EBh  ;1160h
3372   211B FDE8CD94E8EBCD94E8EB
3373   2125 1ABEC21FE913    .DB 01Ah,0BEh,0C2h,01Fh,0E9h,013h,023h,01Ah,0BEh,0C2h,01Fh,0E9h,00Dh,013h,023h,00Dh  ;1170h
3373   212B 231ABEC21FE90D13230D
3374   2135 C2CDE801ECFF    .DB 0C2h,0CDh,0E8h,001h,0ECh,0FFh,009h,0EBh,009h,01Ah,0BEh,0DAh,017h,0E9h,077h,001h  ;1180h
3374   213B 09EB091ABEDA17E97701
3375   2145 030009EB097E    .DB 003h,000h,009h,0EBh,009h,07Eh,012h,03Eh,0FFh,032h,0D2h,0EDh,0C3h,010h,0E8h,021h  ;1190h
3375   214B 123EFF32D2EDC310E821
3376   2155 45E335C9CD54    .DB 045h,0E3h,035h,0C9h,0CDh,054h,0E5h,02Ah,043h,0E3h,0E5h,021h,0ACh,0EDh,022h,043h  ;11A0h
3376   215B E52A43E3E521ACED2243
3377   2165 E30E01CD18E7    .DB 0E3h,00Eh,001h,0CDh,018h,0E7h,0CDh,0F5h,0E5h,0E1h,022h,043h,0E3h,0C8h,0EBh,021h  ;11B0h
3377   216B CDF5E5E12243E3C8EB21
3378   2175 0F00190E11AF    .DB 00Fh,000h,019h,00Eh,011h,0AFh,077h,023h,00Dh,0C2h,046h,0E9h,021h,00Dh,000h,019h  ;11C0h
3378   217B 77230DC246E9210D0019
3379   2185 77CD8CE5CDFD    .DB 077h,0CDh,08Ch,0E5h,0CDh,0FDh,0E7h,0C3h,078h,0E5h,0AFh,032h,0D2h,0EDh,0CDh,0A2h  ;11D0h
3379   218B E7C378E5AF32D2EDCDA2
3380   2195 E8CDF5E5C82A    .DB 0E8h,0CDh,0F5h,0E5h,0C8h,02Ah,043h,0E3h,001h,00Ch,000h,009h,07Eh,03Ch,0E6h,01Fh  ;11E0h
3380   219B 43E3010C00097E3CE61F
3381   21A5 77CA83E9473A    .DB 077h,0CAh,083h,0E9h,047h,03Ah,0C5h,0EDh,0A0h,021h,0D2h,0EDh,0A6h,0CAh,08Eh,0E9h  ;11F0h
3381   21AB C5EDA021D2EDA6CA8EE9
3382   21B5 C3ACE9010200    .DB 0C3h,0ACh,0E9h,001h,002h,000h,009h,034h,07Eh,0E6h,00Fh,0CAh,0B6h,0E9h,00Eh,00Fh  ;1200h
3382   21BB 09347EE60FCAB6E90E0F
3383   21C5 CD18E7CDF5E5    .DB 0CDh,018h,0E7h,0CDh,0F5h,0E5h,0C2h,0ACh,0E9h,03Ah,0D3h,0EDh,03Ch,0CAh,0B6h,0E9h  ;1210h
3383   21CB C2ACE93AD3ED3CCAB6E9
3384   21D5 CD24E9CDF5E5    .DB 0CDh,024h,0E9h,0CDh,0F5h,0E5h,0CAh,0B6h,0E9h,0C3h,0AFh,0E9h,0CDh,05Ah,0E8h,0CDh  ;1220h
3384   21DB CAB6E9C3AFE9CD5AE8CD
3385   21E5 BBE4AFC301E3    .DB 0BBh,0E4h,0AFh,0C3h,001h,0E3h,0CDh,005h,0E3h,0C3h,078h,0E5h,03Eh,001h,032h,0D5h  ;1230h
3385   21EB CD05E3C378E53E0132D5
3386   21F5 ED3EFF32D3ED    .DB 0EDh,03Eh,0FFh,032h,0D3h,0EDh,0CDh,0BBh,0E4h,03Ah,0E3h,0EDh,021h,0E1h,0EDh,0BEh  ;1240h
3386   21FB CDBBE43AE3ED21E1EDBE
3387   2205 DAE6E9FE80C2    .DB 0DAh,0E6h,0E9h,0FEh,080h,0C2h,0FBh,0E9h,0CDh,05Ah,0E9h,0AFh,032h,0E3h,0EDh,03Ah  ;1250h
3387   220B FBE9CD5AE9AF32E3ED3A
3388   2215 45E3B7C2FBE9    .DB 045h,0E3h,0B7h,0C2h,0FBh,0E9h,0CDh,077h,0E4h,0CDh,084h,0E4h,0CAh,0FBh,0E9h,0CDh  ;1260h
3388   221B CD77E4CD84E4CAFBE9CD
3389   2225 8AE4CDD1E3CD    .DB 08Ah,0E4h,0CDh,0D1h,0E3h,0CDh,0B2h,0E3h,0C3h,0D2h,0E4h,0C3h,005h,0E3h,03Eh,001h  ;1270h
3389   222B B2E3C3D2E4C305E33E01
3390   2235 32D5ED3E0032    .DB 032h,0D5h,0EDh,03Eh,000h,032h,0D3h,0EDh,0CDh,054h,0E5h,02Ah,043h,0E3h,0CDh,047h  ;1280h
3390   223B D3EDCD54E52A43E3CD47
3391   2245 E5CDBBE43AE3    .DB 0E5h,0CDh,0BBh,0E4h,03Ah,0E3h,0EDh,0FEh,080h,0D2h,005h,0E3h,0CDh,077h,0E4h,0CDh  ;1290h
3391   224B EDFE80D205E3CD77E4CD
3392   2255 84E40E00C26E    .DB 084h,0E4h,00Eh,000h,0C2h,06Eh,0EAh,0CDh,03Eh,0E4h,032h,0D7h,0EDh,001h,000h,000h  ;12A0h
3392   225B EACD3EE432D7ED010000
3393   2265 B7CA3BEA4F0B    .DB 0B7h,0CAh,03Bh,0EAh,04Fh,00Bh,0CDh,05Eh,0E4h,044h,04Dh,0CDh,0BEh,0E7h,07Dh,0B4h  ;12B0h
3393   226B CD5EE4444DCDBEE77DB4
3394   2275 C248EA3E02C3    .DB 0C2h,048h,0EAh,03Eh,002h,0C3h,001h,0E3h,022h,0E5h,0EDh,0EBh,02Ah,043h,0E3h,001h  ;12C0h
3394   227B 01E322E5EDEB2A43E301
3395   2285 1000093ADDED    .DB 010h,000h,009h,03Ah,0DDh,0EDh,0B7h,03Ah,0D7h,0EDh,0CAh,064h,0EAh,0CDh,064h,0E5h  ;12D0h
3395   228B B73AD7EDCA64EACD64E5
3396   2295 73C36CEA4F06    .DB 073h,0C3h,06Ch,0EAh,04Fh,006h,000h,009h,009h,073h,023h,072h,00Eh,002h,03Ah,045h  ;12E0h
3396   229B 0009097323720E023A45
3397   22A5 E3B7C0C5CD8A    .DB 0E3h,0B7h,0C0h,0C5h,0CDh,08Ah,0E4h,03Ah,0D5h,0EDh,03Dh,03Dh,0C2h,0BBh,0EAh,0C1h  ;12F0h
3397   22AB E43AD5ED3D3DC2BBEAC1
3398   22B5 C5793D3DC2BB    .DB 0C5h,079h,03Dh,03Dh,0C2h,0BBh,0EAh,0E5h,02Ah,0B9h,0EDh,057h,077h,023h,014h,0F2h  ;1300h
3398   22BB EAE52AB9ED57772314F2
3399   22C5 8CEACDE0E52A    .DB 08Ch,0EAh,0CDh,0E0h,0E5h,02Ah,0E7h,0EDh,00Eh,002h,022h,0E5h,0EDh,0C5h,0CDh,0D1h  ;1310h
3399   22CB E7ED0E0222E5EDC5CDD1
3400   22D5 E3C1CDB8E32A    .DB 0E3h,0C1h,0CDh,0B8h,0E3h,02Ah,0E5h,0EDh,00Eh,000h,03Ah,0C4h,0EDh,047h,0A5h,0B8h  ;1320h
3400   22DB E5ED0E003AC4ED47A5B8
3401   22E5 23C29AEAE122    .DB 023h,0C2h,09Ah,0EAh,0E1h,022h,0E5h,0EDh,0CDh,0DAh,0E5h,0CDh,0D1h,0E3h,0C1h,0C5h  ;1330h
3401   22EB E5EDCDDAE5CDD1E3C1C5
3402   22F5 CDB8E3C13AE3    .DB 0CDh,0B8h,0E3h,0C1h,03Ah,0E3h,0EDh,021h,0E1h,0EDh,0BEh,0DAh,0D2h,0EAh,077h,034h  ;1340h
3402   22FB ED21E1EDBEDAD2EA7734
3403   2305 0E0200002100    .DB 00Eh,002h,000h,000h,021h,000h,000h,0F5h,0CDh,069h,0E5h,0E6h,07Fh,077h,0F1h,0FEh  ;1350h
3403   230B 00F5CD69E5E67F77F1FE
3404   2315 7FC200EB3AD5    .DB 07Fh,0C2h,000h,0EBh,03Ah,0D5h,0EDh,0FEh,001h,0C2h,000h,0EBh,0CDh,0D2h,0E4h,0CDh  ;1360h
3404   231B EDFE01C200EBCDD2E4CD
3405   2325 5AE92145E37E    .DB 05Ah,0E9h,021h,045h,0E3h,07Eh,0B7h,0C2h,0FEh,0EAh,03Dh,032h,0E3h,0EDh,036h,000h  ;1370h
3405   232B B7C2FEEA3D32E3ED3600
3406   2335 C3D2E4AF32D5    .DB 0C3h,0D2h,0E4h,0AFh,032h,0D5h,0EDh,0C5h,02Ah,043h,0E3h,0EBh,021h,021h,000h,019h  ;1380h
3406   233B EDC52A43E3EB21210019
3407   2345 7EE67FF57E17    .DB 07Eh,0E6h,07Fh,0F5h,07Eh,017h,023h,07Eh,017h,0E6h,01Fh,04Fh,07Eh,01Fh,01Fh,01Fh  ;1390h
3407   234B 237E17E61F4F7E1F1F1F
3408   2355 1FE60F47F123    .DB 01Fh,0E6h,00Fh,047h,0F1h,023h,06Eh,02Ch,02Dh,02Eh,006h,0C2h,08Bh,0EBh,021h,020h  ;13A0h
3408   235B 6E2C2D2E06C28BEB2120
3409   2365 001977210C00    .DB 000h,019h,077h,021h,00Ch,000h,019h,079h,096h,0C2h,047h,0EBh,021h,00Eh,000h,019h  ;13B0h
3409   236B 197996C247EB210E0019
3410   2375 7896E67FCA7F    .DB 078h,096h,0E6h,07Fh,0CAh,07Fh,0EBh,0C5h,0D5h,0CDh,0A2h,0E8h,0D1h,0C1h,02Eh,003h  ;13C0h
3410   237B EBC5D5CDA2E8D1C12E03
3411   2385 3A45E33CCA84    .DB 03Ah,045h,0E3h,03Ch,0CAh,084h,0EBh,021h,00Ch,000h,019h,071h,021h,00Eh,000h,019h  ;13D0h
3411   238B EB210C001971210E0019
3412   2395 70CD51E83A45    .DB 070h,0CDh,051h,0E8h,03Ah,045h,0E3h,03Ch,0C2h,07Fh,0EBh,0C1h,0C5h,02Eh,004h,00Ch  ;13E0h
3412   239B E33CC27FEBC1C52E040C
3413   23A5 CA84EBCD24E9    .DB 0CAh,084h,0EBh,0CDh,024h,0E9h,02Eh,005h,03Ah,045h,0E3h,03Ch,0CAh,084h,0EBh,0C1h  ;13F0h
3413   23AB 2E053A45E33CCA84EBC1
3414   23B5 AFC301E3E5CD    .DB 0AFh,0C3h,001h,0E3h,0E5h,0CDh,069h,0E5h,036h,0C0h,0E1h,0C1h,07Dh,032h,045h,0E3h  ;1400h
3414   23BB 69E536C0E1C17D3245E3
3415   23C5 C378E50EFFCD    .DB 0C3h,078h,0E5h,00Eh,0FFh,0CDh,003h,0EBh,0CCh,0C1h,0E9h,0C9h,00Eh,000h,0CDh,003h  ;1410h
3415   23CB 03EBCCC1E9C90E00CD03
3416   23D5 EBCC03EAC9EB    .DB 0EBh,0CCh,003h,0EAh,0C9h,0EBh,019h,04Eh,006h,000h,021h,00Ch,000h,019h,07Eh,00Fh  ;1420h
3416   23DB 194E0600210C00197E0F
3417   23E5 E680814F3E00    .DB 0E6h,080h,081h,04Fh,03Eh,000h,088h,047h,07Eh,00Fh,0E6h,00Fh,080h,047h,021h,00Eh  ;1430h
3417   23EB 88477E0FE60F8047210E
3418   23F5 00197E878787    .DB 000h,019h,07Eh,087h,087h,087h,087h,0F5h,080h,047h,0F5h,0E1h,07Dh,0E1h,0B5h,0E6h  ;1440h
3418   23FB 87F58047F5E17DE1B5E6
3419   2405 01C90E0CCD18    .DB 001h,0C9h,00Eh,00Ch,0CDh,018h,0E7h,02Ah,043h,0E3h,011h,021h,000h,019h,0E5h,072h  ;1450h
3419   240B E72A43E311210019E572
3420   2415 23722372CDF5    .DB 023h,072h,023h,072h,0CDh,0F5h,0E5h,0CAh,00Ch,0ECh,0CDh,05Eh,0E5h,011h,00Fh,000h  ;1460h
3420   241B E5CA0CECCD5EE5110F00
3421   2425 CDA5EBE1E55F    .DB 0CDh,0A5h,0EBh,0E1h,0E5h,05Fh,079h,096h,023h,078h,09Eh,023h,07Bh,09Eh,0DAh,006h  ;1470h
3421   242B 799623789E237B9EDA06
3422   2435 EC732B702B71    .DB 0ECh,073h,02Bh,070h,02Bh,071h,0CDh,02Dh,0E7h,0C3h,0E4h,0EBh,0E1h,0C9h,02Ah,043h  ;1480h
3422   243B CD2DE7C3E4EBE1C92A43
3423   2445 E3112000CDA5    .DB 0E3h,011h,020h,000h,0CDh,0A5h,0EBh,021h,021h,000h,019h,071h,023h,070h,023h,077h  ;1490h
3423   244B EB212100197123702377
3424   2455 C92AAFED3A42    .DB 0C9h,02Ah,0AFh,0EDh,03Ah,042h,0E3h,04Fh,0CDh,0EAh,0E4h,0E5h,0EBh,0CDh,059h,0E3h  ;14A0h
3424   245B E34FCDEAE4E5EBCD59E3
3425   2465 E1CC47E37D1F    .DB 0E1h,0CCh,047h,0E3h,07Dh,01Fh,0D8h,02Ah,0AFh,0EDh,04Dh,044h,0CDh,00Bh,0E5h,022h  ;14B0h
3425   246B D82AAFED4D44CD0BE522
3426   2475 AFEDC3A3E63A    .DB 0AFh,0EDh,0C3h,0A3h,0E6h,03Ah,0D6h,0EDh,021h,042h,0E3h,0BEh,0C8h,077h,0C3h,021h  ;14C0h
3426   247B D6ED2142E3BEC877C321
3427   2485 EC3EFF32DEED    .DB 0ECh,03Eh,0FFh,032h,0DEh,0EDh,02Ah,043h,0E3h,07Eh,0E6h,01Fh,03Dh,032h,0D6h,0EDh  ;14D0h
3427   248B 2A43E37EE61F3D32D6ED
3428   2495 FE1ED275EC3A    .DB 0FEh,01Eh,0D2h,075h,0ECh,03Ah,042h,0E3h,032h,0DFh,0EDh,07Eh,032h,0E0h,0EDh,0E6h  ;14E0h
3428   249B 42E332DFED7E32E0EDE6
3429   24A5 E077CD45EC3A    .DB 0E0h,077h,0CDh,045h,0ECh,03Ah,041h,0E3h,02Ah,043h,0E3h,0B6h,077h,0C9h,03Eh,022h  ;14F0h
3429   24AB 41E32A43E3B677C93E22
3430   24B5 C301E3210000    .DB 0C3h,001h,0E3h,021h,000h,000h,022h,0ADh,0EDh,022h,0AFh,0EDh,0AFh,032h,042h,0E3h  ;1500h
3430   24BB 22ADED22AFEDAF3242E3
3431   24C5 21800022B1ED    .DB 021h,080h,000h,022h,0B1h,0EDh,0CDh,0DAh,0E5h,0C3h,021h,0ECh,0CDh,072h,0E5h,0CDh  ;1510h
3431   24CB CDDAE5C321ECCD72E5CD
3432   24D5 51ECC351E8CD    .DB 051h,0ECh,0C3h,051h,0E8h,0CDh,051h,0ECh,0C3h,0A2h,0E8h,00Eh,000h,0EBh,07Eh,0FEh  ;1520h
3432   24DB 51ECC3A2E80E00EB7EFE
3433   24E5 3FCAC2ECCDA6    .DB 03Fh,0CAh,0C2h,0ECh,0CDh,0A6h,0E4h,07Eh,0FEh,03Fh,0C4h,072h,0E5h,0CDh,051h,0ECh  ;1530h
3433   24EB E47EFE3FC472E5CD51EC
3434   24F5 0E0FCD18E7C3    .DB 00Eh,00Fh,0CDh,018h,0E7h,0C3h,0E9h,0E5h,02Ah,0D9h,0EDh,022h,043h,0E3h,0CDh,051h  ;1540h
3434   24FB E9E52AD9ED2243E3CD51
3435   2505 ECCD2DE7C3E9    .DB 0ECh,0CDh,02Dh,0E7h,0C3h,0E9h,0E5h,0CDh,051h,0ECh,0CDh,09Ch,0E7h,0C3h,001h,0E7h  ;1550h
3435   250B E5CD51ECCD9CE7C301E7
3436   2515 CD51ECC3BCE9    .DB 0CDh,051h,0ECh,0C3h,0BCh,0E9h,0CDh,051h,0ECh,0C3h,0FEh,0E9h,0CDh,072h,0E5h,0CDh  ;1560h
3436   251B CD51ECC3FEE9CD72E5CD
3437   2525 51ECC324E9CD    .DB 051h,0ECh,0C3h,024h,0E9h,0CDh,051h,0ECh,0CDh,016h,0E8h,0C3h,001h,0E7h,02Ah,0AFh  ;1570h
3437   252B 51ECCD16E8C301E72AAF
3438   2535 EDC329ED3A42    .DB 0EDh,0C3h,029h,0EDh,03Ah,042h,0E3h,0C3h,001h,0E3h,0EBh,022h,0B1h,0EDh,0C3h,0DAh  ;1580h
3438   253B E3C301E3EB22B1EDC3DA
3439   2545 E52ABFEDC329    .DB 0E5h,02Ah,0BFh,0EDh,0C3h,029h,0EDh,02Ah,0ADh,0EDh,0C3h,029h,0EDh,0CDh,051h,0ECh  ;1590h
3439   254B ED2AADEDC329EDCD51EC
3440   2555 CD3BE8C301E7    .DB 0CDh,03Bh,0E8h,0C3h,001h,0E7h,02Ah,0BBh,0EDh,022h,045h,0E3h,0C9h,03Ah,0D6h,0EDh  ;15A0h
3440   255B 2ABBED2245E3C93AD6ED
3441   2565 FEFFC23BED3A    .DB 0FEh,0FFh,0C2h,03Bh,0EDh,03Ah,041h,0E3h,0C3h,001h,0E3h,0E6h,01Fh,032h,041h,0E3h  ;15B0h
3441   256B 41E3C301E3E61F3241E3
3442   2575 C9CD51ECC393    .DB 0C9h,0CDh,051h,0ECh,0C3h,093h,0EBh,0CDh,051h,0ECh,0C3h,09Ch,0EBh,0CDh,051h,0ECh  ;15C0h
3442   257B EBCD51ECC39CEBCD51EC
3443   2585 C3D2EB2A43E3    .DB 0C3h,0D2h,0EBh,02Ah,043h,0E3h,07Dh,02Fh,05Fh,07Ch,02Fh,02Ah,0AFh,0EDh,0A4h,057h  ;15D0h
3443   258B 7D2F5F7C2F2AAFEDA457
3444   2595 7DA35F2AADED    .DB 07Dh,0A3h,05Fh,02Ah,0ADh,0EDh,0EBh,022h,0AFh,0EDh,07Dh,0A3h,06Fh,07Ch,0A2h,067h  ;15E0h
3444   259B EB22AFED7DA36F7CA267
3445   25A5 22ADEDC93ADE    .DB 022h,0ADh,0EDh,0C9h,03Ah,0DEh,0EDh,0B7h,0CAh,091h,0EDh,02Ah,043h,0E3h,036h,000h  ;15F0h
3445   25AB EDB7CA91ED2A43E33600
3446   25B5 3AE0EDB7CA91    .DB 03Ah,0E0h,0EDh,0B7h,0CAh,091h,0EDh,077h,03Ah,0DFh,0EDh,032h,0D6h,0EDh,0CDh,045h  ;1600h
3446   25BB ED773ADFED32D6EDCD45
3447   25C5 EC2A0FE3F92A    .DB 0ECh,02Ah,00Fh,0E3h,0F9h,02Ah,045h,0E3h,07Dh,044h,0C9h,0CDh,051h,0ECh,03Eh,002h  ;1610h
3447   25CB 45E37D44C9CD51EC3E02
3448   25D5 32D5ED0E00CD    .DB 032h,0D5h,0EDh,00Eh,000h,0CDh,007h,0EBh,0CCh,003h,0EAh,0C9h,0E5h,000h,000h,000h  ;1620h
3448   25DB 07EBCC03EAC9E5000000
3449   25E5 008000000000    .DB 000h,080h ,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1630h
3449   25EB 00000000000000000000
3450   25F5 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1640h
3450   25FB 00000000000000000000
3451   2605 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1650h
3451   260B 00000000000000000000
3452   2615 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1660h
3452   261B 00000000000000000000
3453   2625 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1670h
3453   262B 00000000000000000000
3454   2635             
3455   2635             ;BIOS Jump Table
3456   2635             ;   .DB 0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h  ;1680h
3457   2635             ;   .DB 000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h  ;1690h
3458   2635             ;   .DB 000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h,0C3h,000h,000h  ;16A0h
3459   2635             ;   .DB 0C3h,000h,000h,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh  ;16B0h
3460   2635             
3461   2635             ;***************************************************
3462   2635             ;*** THIS BEGINS THE AREA WHICH REQUIRES CHANGES ***
3463   2635             ;***      FOR DIFFERENT CONSOLE I/O SYSTEMS      ***
3464   2635             ;***************************************************
3465   2635             
3466   2635             
3467   2635             ;		.ORG	BIOS
3468   2635             
3469   2635             ; I/O JUMP VECTOR
3470   2635             ; THIS IS WHERE CP/M CALLS WHENEVER IT NEEDS
3471   2635             ; TO DO ANY INPUT/OUTPUT OPERATION.
3472   2635             ; USER PROGRAMS MAY USE THESE ENTRY POINTS
3473   2635             ; ALSO, BUT NOTE THAT THE LOCATION OF THIS
3474   2635             ; VECTOR CHANGES WITH THE MEMORY SIZE.
3475   2635             ;
3476   2635 CD 3E EE    	CALL	GO_ROM	;FROM COLD START LOADER.
3477   2638             WBOOTV	.EQU	$ + RB
3478   2638 CD 3E EE    	CALL	GO_ROM	;FROM WARM BOOT.
3479   263B CD 3E EE    	CALL	GO_ROM	;CHECK CONSOLE KB STATUS.
3480   263E CD 3E EE    	CALL	GO_ROM	;READ CONSOLE CHARACTER.
3481   2641 CD 3E EE    	CALL	GO_ROM	;WRITE CONSOLE CHARACTER.
3482   2644 CD 3E EE    	CALL	GO_ROM	;WRITE LISTING CHAR.
3483   2647 CD 3E EE    	CALL	GO_ROM	;WRITE PUNCH CHAR.
3484   264A CD 3E EE    	CALL	GO_ROM 	;READ READER CHAR.
3485   264D CD 3E EE    	CALL	GO_ROM	;MOVE DISK TO TRACK ZERO.
3486   2650 CD 3E EE    	CALL	GO_ROM 	;SELECT DISK DRIVE.
3487   2653 CD 3E EE    	CALL	GO_ROM 	;SEEK TO TRACK IN REG A.
3488   2656 CD 3E EE    	CALL	GO_ROM 	;SET SECTOR NUMBER.
3489   2659 CD 3E EE    	CALL	GO_ROM 	;SET DISK STARTING ADR.
3490   265C CD 3E EE    	CALL	GO_ROM	;READ SELECTED SECTOR.
3491   265F CD 33 EE    	CALL	GO_ROM2	;WRITE SELECTED SECTOR.
3492   2662 CD 3E EE    	CALL	GO_ROM 	;List status (output)
3493   2665 CD 3E EE    	CALL	GO_ROM 	;Translate sector number
3494   2668             
3495   2668             GO_ROM2		.EQU	$ + RB	;Special Case for Disk Write.  Must fetch DMA Buffer to Sector Buffer first.
3496   2668 2A B5 FD    		LHLD	DMAADD	;Source CP/M Data Buffer
3497   266B 11 80 FF    		LXI	D,SECTOR_BUFFER
3498   266E 06 80       		MVI	B,128
3499   2670 CD B0 EE    		CALL	COPY_RAM	;Copy the CP/M DMAADD to SECTOR_BUFFER
3500   2673             	
3501   2673             GO_ROM		.EQU	$ + RB
3502   2673             ;-------------------------------------------------------------------------
3503   2673             ;Use Return address on Stack to select the ROM call to be placed
3504   2673             ;Add new Return address on Stack for proper return to RAM space
3505   2673             ;	STACK 				NEW BIOS STACK
3506   2673             ;	Before		After		
3507   2673             ;	CP/M RETURN	CP/M RETURN	RAM_RET
3508   2673             ;	BIOS+3 RETURN			CALL (Routine Returns to this address)
3509   2673             ;			
3510   2673             ;
3511   2673 22 38 FF    		SHLD	HL_TEMP		;Save HL for elbow room
3512   2676 21 61 EE    		LXI	H,RAM_RET
3513   2679 22 7E FF    		SHLD	STACK-2	;Put on New Stack
3514   267C E1          		POP	H	;HL = BIOS+3 RETURN
3515   267D 26 0F       		MVI	H,(ROM_JUMP_TABLE >> 8)
3516   267F 22 7C FF    		SHLD	STACK-4	;Put on New Stack
3517   2682 21 00 00    		LXI	H,0
3518   2685 39          		DAD	SP
3519   2686 22 3A FF    		SHLD	SP_BIOS
3520   2689 2A 38 FF    		LHLD	HL_TEMP		;Restore HL
3521   268C 31 7C FF    		LXI	SP,STACK-4	;Assign NEW STACK in upper RAM!
3522   268F             
3523   268F             JMP_ROM_LOW	.EQU	$ + RB
3524   268F AF          		XRA	A
3525   2690 32 44 FF    		STA	ROM_SELECT
3526   2693 D3 41       		OUT	ROM_LOW		;Map ROM into Lower 32K
3527   2695 C9          		RET		;JUMP to Modified Address (ROM JUMP TABLE)
3528   2696             
3529   2696             
3530   2696             RAM_RET		.EQU	$ + RB
3531   2696 F5          		PUSH	PSW
3532   2697 3E 01       		MVI	A,1
3533   2699 32 44 FF    		STA	ROM_SELECT
3534   269C D3 41       		OUT	ROM_LOW		;Map RAM back into Lower 32K
3535   269E F1          		POP	PSW
3536   269F 22 38 FF    		SHLD	HL_TEMP
3537   26A2 2A 3A FF    		LHLD	SP_BIOS
3538   26A5 F9          		SPHL		;SP = Restored
3539   26A6 2A 38 FF    		LHLD	HL_TEMP
3540   26A9 C9          		RET		
3541   26AA             
3542   26AA             	
3543   26AA             NDSK	.EQU	1
3544   26AA             
3545   26AA             ;	Control Blocks for disk drives DPH
3546   26AA             
3547   26AA             DPBASE	.EQU	$ + RB
3548   26AA 000000000000 	.DW	SKEW,0,0,0,DIRBUF,DPB0,CSV0,ALV0	;Drive A:
3548   26B0 000000FD85EE9FFD80FD
3549   26BA             
3550   26BA             SKEW	.equ	0
3551   26BA             
3552   26BA             ;512K RAM  allows for 64K System + 14 Tracks of 256 Sectors
3553   26BA             ; 14 * 256 = 3584 Sectors
3554   26BA             ; 3584 / 16 = 224 Blocks of 2K (448K Disk)  458,752 Bytes
3555   26BA             ; Plus an additional 10K of ROM
3556   26BA             ;       Disk type definition blocks for each particular mode.
3557   26BA             DPB0	.EQU	$ + RB
3558   26BA 00 01       	.DW	256		;SEC PER TRACK
3559   26BC 04          	.DB	4		;BLOCK SHIFT
3560   26BD 0F          	.DB	15		;BLOCK MASK
3561   26BE 01          	.DB	1		;EXTNT MASK
3562   26BF DF 00       	.DW	223		;DISK SIZE-1    224 = 448K RAM, 229 = 458K RAM/ROM
3563   26C1 7F 00       	.DW	127		;DIRECTORY MAX  128 entries * 32 = 4K
3564   26C3 C0          	.DB	11000000b	;ALLOC0         2 blocks for dir = 4K
3565   26C4 00          	.DB	00000000b	;ALLOC1
3566   26C5 20 00       	.DW	32		;CHECK SIZE
3567   26C7 00 00       	.DW	0		;OFFSET
3568   26C9             
3569   26C9             RAM_WBOOT	.EQU	$ + RB
3570   26C9 3E 01       		MVI	A,1
3571   26CB 32 44 FF    		STA	ROM_SELECT
3572   26CE D3 41       		OUT	ROM_LOW
3573   26D0 3A 04 00    		LDA	CDISK
3574   26D3 4F          		MOV	C,A
3575   26D4 C3 00 D8    		JMP	CCP             ;Go to CPM
3576   26D7             
3577   26D7             READ_MEMORY	.EQU	$ + RB
3578   26D7 3A 43 FF    		LDA	MEM_SOURCE	;1=RAM, 0=ROM
3579   26DA F3          		DI
3580   26DB D3 41       		OUT	ROM_LOW		;Map RAM back into Lower 32K
3581   26DD 7E          		MOV	A,M
3582   26DE F5          		PUSH	PSW
3583   26DF AF          		XRA	A
3584   26E0 D3 41       		OUT	ROM_LOW		;Map ROM into Lower 32K
3585   26E2 FB          		EI
3586   26E3 F1          		POP	PSW
3587   26E4 C9          		RET
3588   26E5             
3589   26E5             ;-----------------------------------------------------------------------------------------------------
3590   26E5             COPY_RAM	.EQU	$ + RB
3591   26E5 7E          		MOV	A,M
3592   26E6 12          		STAX	D
3593   26E7 23          		INX	H
3594   26E8 13          		INX	D
3595   26E9 05          		DCR	B
3596   26EA C2 B0 EE    		JNZ	COPY_RAM
3597   26ED C9          		RET
3598   26EE             
3599   26EE             
3600   26EE             ;-----------------------------------------------------------------------------------------------------
3601   26EE             ;-----------------------------------------------------------------------------------------------------
3602   26EE             ;-----------------------------------------------------------------------------------------------------
3603   26EE             ;-----------------------------------------------------------------------------------------------------
3604   26EE             
3605   26EE             ;                       *********   *******    ********                         
3606   26EE             ;                       *********  *********   *********                        
3607   26EE             ;                          ***     **     **   **     **                        
3608   26EE             ;                          ***     **          **     **                        
3609   26EE             ;---------------------     ***     *******     ********   --------------------- 
3610   26EE             ;---------------------     ***       *******   ********   --------------------- 
3611   26EE             ;                          ***            **   **  **                           
3612   26EE             ;                          ***     **     **   **   **                          
3613   26EE             ;                       *********  *********   **    **                         
3614   26EE             ;                       *********   *******    **     **                        
3615   26EE             ;                                                                               
3616   26EE             
3617   26EE             
3618   26EE             
3619   26EE             
3620   26EE             
3621   26EE             
3622   26EE             
3623   26EE             
3624   26EE             
3625   26EE             ISR_OTHER	.EQU	$ + RB
3626   26EE 17          		RAL
3627   26EF 17          		RAL
3628   26F0 DA ED EE    		JC	ISR_EXIT
3629   26F3             		
3630   26F3             ISR_TIMER	.EQU	$ + RB
3631   26F3 AF          		XRA	A	;TURN OFF TIMER
3632   26F4 D3 46       		OUT	TIMER
3633   26F6 FB          		EI		;4
3634   26F7             
3635   26F7 AF          		XRA	A
3636   26F8 21 3E FF    		LXI	H,ISR_LOCK
3637   26FB B6          		ORA	M
3638   26FC C2 ED EE    		JNZ	ISR_EXIT	;Exit if ISR_TIMER is already running
3639   26FF 34          		INR	M
3640   2700             
3641   2700 21 00 00    		LXI	H,0
3642   2703 39          		DAD	SP
3643   2704 22 3C FF    		SHLD	SP_ISR		
3644   2707 31 00 FE    		LXI	SP,STACK_ISR	;Assign NEW STACK in upper RAM!
3645   270A             
3646   270A AF          		XRA	A
3647   270B D3 41       		OUT	ROM_LOW		;Map ROM into Lower 32K
3648   270D             		
3649   270D CD 74 0C    		CALL	ISR_TIMER_ROM		
3650   2710 3A 44 FF    		LDA	ROM_SELECT
3651   2713 D3 41       		OUT	ROM_LOW		;Restore ROM/RAM Mapped
3652   2715             
3653   2715             
3654   2715 2A 3C FF    		LHLD	SP_ISR
3655   2718 F9          		SPHL		;SP = Restored
3656   2719             
3657   2719 AF          		XRA	A	;Clear Lock on ISR
3658   271A 32 3E FF    		STA	ISR_LOCK
3659   271D             
3660   271D 3A 45 FF    		LDA	TIMER_RUN
3661   2720 D3 46       		OUT	TIMER
3662   2722             		
3663   2722             
3664   2722             ISR_EXIT	.EQU	$ + RB
3665   2722 E1          		POP	H	;10
3666   2723 F1          		POP	PSW	;10
3667   2724 FB          		EI		;4
3668   2725 C9          		RET		;10	tc=83
3669   2726             
3670   2726             
3671   2726             RAM_SIZE	.EQU	$ - RAM_IMG 	;$16F1
3672   2726             
3673   2726             ;-----------------------------------------------------------------------------------------------------
3674   2726             				;9,600, 208t = 104uSec
3675   2726             ISR_RAM		.EQU	$ + RB
3676   2726             
3677   2726             IR1_ROM		.EQU	$
3678   2726             		;RST	038H	;11   5.5uSEC
3679   2726             		;JMP	ISR_RAM	;10	Jump to ISR
3680   2726             
3681   2726 F5          		PUSH	PSW	;11 
3682   2727 E5          		PUSH	H	;11
3683   2728             		
3684   2728 DB 40       		IN	INPUT_PORT ;10  Sample Start Bit
3685   272A 17          		RAL		;4
3686   272B DA B9 EE    		JC	ISR_OTHER ;10
3687   272E             
3688   272E 3A 2E FF    		LDA	RXBHEAD	;Test over flow of buffer during
3689   2731 3C          		INR	A	;Start Bit delay (to minimize exit time)
3690   2732             				;Test if buffer has over ran
3691   2732 21 30 FF    		LXI	H,RXBTAIL
3692   2735 BE          		CMP	M	;If Tail = Head Then Tail = Tail + 1 & Flag overrun
3693   2736 C2 05 EF    		JNZ	IR1_NOT_OVER
3694   2739 34          		INR	M	;Advance Tail (lose char)
3695   273A             		
3696   273A             IR1_NOT_OVER	.EQU	$ + RB
3697   273A             
3698   273A 26 08       		MVI	H,8	;7
3699   273C             
3700   273C             				;     Need 1.5 bit time to sample first data bit
3701   273C             				;     = 104 + 52 = 156uS = 312 Cycles
3702   273C             				;     
3703   273C 3E 0C       		MVI	A,12	;7
3704   273E             IR1_LP1		.EQU	$ + RB
3705   273E 3D          		DCR	A	;5	;58 + D * 15
3706   273F C2 09 EF    		JNZ	IR1_LP1	;10	;58 + 17 * 15 = 313 tc
3707   2742             
3708   2742             		
3709   2742             IR1_LP2		.EQU	$ + RB
3710   2742 DB 40       		IN	INPUT_PORT ;10	;Fetch bit      ;REQUIRE 208 CYCLES BETWEEN BITS
3711   2744 07          		RLC		;4	;Carry = bit
3712   2745 7D          		MOV	A,L	;5
3713   2746 1F          		RAR		;4	
3714   2747 6F          		MOV	L,A	;5	
3715   2748 00          		NOP		;4		
3716   2749 00          		NOP		;4     36
3717   274A 3E 0A       		MVI	A,10	;7
3718   274C             IR1_LP3		.EQU	$ + RB
3719   274C 3D          		DCR	A	;5	;58 + D * 15
3720   274D C2 17 EF    		JNZ	IR1_LP3	;10	;58 + 10 * 15 = 208
3721   2750             		
3722   2750 25          		DCR	H	;5
3723   2751 C2 0D EF    		JNZ	IR1_LP2	;10
3724   2754             
3725   2754 7D          		MOV	A,L
3726   2755 2A 2E FF    		LHLD	RXBHEAD
3727   2758 77          		MOV	M,A	;Save Received byte into RX Buffer
3728   2759 2C          		INR	L	;Advance Head Ptr of RX Buffer, Head = Head + 1
3729   275A 22 2E FF    		SHLD	RXBHEAD
3730   275D E1          		POP	H	;10
3731   275E F1          		POP	PSW	;10
3732   275F FB          		EI		;4
3733   2760 C9          		RET		;10	tc=83
3734   2761             IR1_SIZE	.EQU	$ - IR1_ROM 
3735   2761             
3736   2761             ;-----------------------------------------------------------------------------------------------------
3737   2761             				;19,200, 104t = 52uSec
3738   2761             IR2_ROM		.EQU	$
3739   2761             		;RST	038H	;11   5.5uSEC
3740   2761             		;JMP	ISR_RAM	;10	Jump to ISR
3741   2761             
3742   2761 F5          		PUSH	PSW	;11 
3743   2762 E5          		PUSH	H	;11
3744   2763             		
3745   2763 DB 40       		IN	INPUT_PORT ;10  Sample Start Bit
3746   2765 17          		RAL		;4
3747   2766 DA B9 EE    		JC	ISR_OTHER ;10
3748   2769             
3749   2769 3A 2E FF    		LDA	RXBHEAD	;13 Test over flow of buffer during
3750   276C 3C          		INR	A	;5  Start Bit delay (to minimize exit time)
3751   276D             				;   Test if buffer has over ran
3752   276D 21 30 FF    		LXI	H,RXBTAIL ;10
3753   2770 BE          		CMP	M	;7  If Tail = Head Then Tail = Tail + 1 & Flag overrun
3754   2771 C2 05 EF    		JNZ	IR2_NOT_OVER ;10
3755   2774 34          		INR	M	;Advance Tail (lose char)
3756   2775             IR2_NOT_OVER	.EQU	$ + RB - IR1_SIZE 
3757   2775 2E 7F       		MVI	L,07FH	;7
3758   2777             				; t = 119
3759   2777             
3760   2777             				;     Need 1.5 bit time to sample first data bit
3761   2777             				;     = 52 + 26 = 78uS = 156 Cycles
3762   2777             				;     
3763   2777             		
3764   2777             IR2_LP2		.EQU	$ + RB - IR1_SIZE 
3765   2777 DB 40       		IN	INPUT_PORT ;10	;Fetch bit      ;REQUIRE 104 CYCLES BETWEEN BITS
3766   2779 07          		RLC		;4	;Carry = bit
3767   277A 7D          		MOV	A,L	;5
3768   277B 1F          		RAR		;4	
3769   277C 6F          		MOV	L,A	;5
3770   277D 3E 04       		MVI	A,4	;7
3771   277F             IR2_LP3		.EQU	$ + RB - IR1_SIZE 
3772   277F 3D          		DCR	A	;5
3773   2780 C2 0F EF    		JNZ	IR2_LP3	;10
3774   2783 DA 07 EF    		JC	IR2_LP2	;10	tc=104
3775   2786             
3776   2786 7D          		MOV	A,L	;5
3777   2787 2A 2E FF    		LHLD	RXBHEAD	;16
3778   278A 77          		MOV	M,A	;7 Save Received byte into RX Buffer
3779   278B 2C          		INR	L	;5 Advance Head Ptr of RX Buffer, Head = Head + 1
3780   278C 22 2E FF    		SHLD	RXBHEAD	;16
3781   278F E1          		POP	H	;10
3782   2790 F1          		POP	PSW	;10
3783   2791 FB          		EI		;4
3784   2792 C9          		RET		;10	tc=83
3785   2793             IR2_SIZE	.EQU	$ - IR2_ROM 
3786   2793             
3787   2793             ;-----------------------------------------------------------------------------------------------------
3788   2793             				;38,400, 52t = 26uSec
3789   2793             IR3_ROM		.EQU	$
3790   2793             		;RST	038H	;11   5.5uSEC
3791   2793             		;JMP	ISR_RAM	;10	Jump to ISR
3792   2793             
3793   2793 F5          		PUSH	PSW	;11
3794   2794 E5          		PUSH	H	;11
3795   2795             
3796   2795             				;T=53
3797   2795             
3798   2795             IR3_LP1		.EQU	$ + RB - (IR1_SIZE + IR2_SIZE)
3799   2795             
3800   2795 26 7F       		MVI	H,07FH	;7   
3801   2797 C3 01 EF    		JMP	IR3_LP3
3802   279A             
3803   279A             IR3_RP1		.EQU	$ + RB - (IR1_SIZE + IR2_SIZE)
3804   279A 00          		NOP		;4
3805   279B 7E          		MOV	A,M	;7
3806   279C 7E          		MOV	A,M	;7
3807   279D C3 F3 EE    		JMP	IR3_LP1	;10
3808   27A0             		
3809   27A0             IR3_LP2		.EQU	$ + RB - (IR1_SIZE + IR2_SIZE)
3810   27A0             
3811   27A0 67          		MOV	H,A	;5	
3812   27A1 6E          		MOV	L,M	;7
3813   27A2 6E          		MOV	L,M	;7
3814   27A3             IR3_LP3		.EQU	$ + RB - (IR1_SIZE + IR2_SIZE)
3815   27A3 DB 40       		IN	INPUT_PORT ;10	;Fetch bit      ;REQUIRE 52 CYCLES BETWEEN BITS
3816   27A5 07          		RLC		;4	;Carry = bit
3817   27A6 7C          		MOV	A,H	;5
3818   27A7 1F          		RAR		;4	
3819   27A8 DA FE EE    		JC	IR3_LP2	;10	TC=52
3820   27AB             		
3821   27AB 2A 2E FF    		LHLD	RXBHEAD	;16
3822   27AE 77          		MOV	M,A	;7 Save Received byte into RX Buffer
3823   27AF 2C          		INR	L	;5 Advance Head Ptr of RX Buffer, Head = Head + 1
3824   27B0 22 2E FF    		SHLD	RXBHEAD	;16
3825   27B3             
3826   27B3             				;Look for consecutive bytes
3827   27B3 DB 40       		IN	INPUT_PORT ;10	;Fetch bit
3828   27B5 17          		RAL		;4
3829   27B6 D2 F8 EE    		JNC	IR3_RP1 ;10
3830   27B9             
3831   27B9 DB 40       		IN	INPUT_PORT ;10	;Fetch bit
3832   27BB 17          		RAL		;4
3833   27BC D2 F8 EE    		JNC	IR3_RP1 ;10
3834   27BF             
3835   27BF DB 40       		IN	INPUT_PORT ;10	;Fetch bit
3836   27C1 17          		RAL		;4
3837   27C2 D2 F8 EE    		JNC	IR3_RP1 ;10
3838   27C5             		
3839   27C5 E1          		POP	H	;10
3840   27C6 F1          		POP	PSW	;10
3841   27C7 FB          		EI		;4
3842   27C8 C9          		RET		;10
3843   27C9             
3844   27C9             IR3_SIZE	.EQU	$ - IR3_ROM 
3845   27C9             
3846   27C9             
3847   27C9             ;-----------------------------------------------------------------------------------------------------
3848   27C9             				;38,400, 52t = 26uSec
3849   27C9             IR4_ROM		.EQU	$
3850   27C9             		;RST	038H	;11   5.5uSEC
3851   27C9             		;JMP	ISR_RAM	;10	Jump to ISR
3852   27C9             
3853   27C9             
3854   27C9 F5          		PUSH	PSW	;11 
3855   27CA E5          		PUSH	H	;11
3856   27CB             
3857   27CB 00          		NOP		;4
3858   27CC 00          		NOP		;4
3859   27CD 00          		NOP		;4
3860   27CE             					;REQUIRE 52 CYCLES BETWEEN BITS
3861   27CE DB 40       		IN	INPUT_PORT ;10	;Fetch bit D0
3862   27D0             
3863   27D0 2A 2E FF    		LHLD	RXBHEAD	;16
3864   27D3             
3865   27D3 67          		MOV	H,A	;5	
3866   27D4 67          		MOV	H,A	;5	
3867   27D5 2C          		INR	L	;5 Advance Head Ptr of RX Buffer, Head = Head + 1
3868   27D6 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D1     
3869   27D8 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D1     
3870   27DA             
3871   27DA 07          		RLC		;4	;Carry = bit
3872   27DB 7C          		MOV	A,H	;5
3873   27DC 1F          		RAR		;4	
3874   27DD 67          		MOV	H,A	;5
3875   27DE 00          		NOP		;4
3876   27DF DB 40       		IN	INPUT_PORT ;10	;Fetch bit D2     
3877   27E1 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D2     
3878   27E3 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D2
3879   27E5             
3880   27E5 07          		RLC		;4	;Carry = bit
3881   27E6 7C          		MOV	A,H	;5
3882   27E7 1F          		RAR		;4	
3883   27E8 67          		MOV	H,A	;5
3884   27E9 67          		MOV	H,A	;5
3885   27EA 7D          		MOV	A,L	;5
3886   27EB 32 2E FF    		STA	RXBHEAD	;13
3887   27EE DB 40       		IN	INPUT_PORT ;10	;Fetch bit D3
3888   27F0             
3889   27F0 07          		RLC		;4	;Carry = bit
3890   27F1 7C          		MOV	A,H	;5
3891   27F2 1F          		RAR		;4	
3892   27F3 67          		MOV	H,A	;5	
3893   27F4 7E          		MOV	A,M	;7
3894   27F5 7E          		MOV	A,M	;7
3895   27F6 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D4
3896   27F8 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D4
3897   27FA             
3898   27FA             
3899   27FA 07          		RLC		;4	;Carry = bit
3900   27FB 7C          		MOV	A,H	;5
3901   27FC 1F          		RAR		;4	
3902   27FD 67          		MOV	H,A	;5	
3903   27FE 7E          		MOV	A,M	;7
3904   27FF 7E          		MOV	A,M	;7
3905   2800 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D5     
3906   2802 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D5
3907   2804             
3908   2804 07          		RLC		;4	;Carry = bit
3909   2805 7C          		MOV	A,H	;5
3910   2806 1F          		RAR		;4	
3911   2807 67          		MOV	H,A	;5	
3912   2808 7E          		MOV	A,M	;7
3913   2809 7E          		MOV	A,M	;7
3914   280A DB 40       		IN	INPUT_PORT ;10	;Fetch bit D6     
3915   280C DB 40       		IN	INPUT_PORT ;10	;Fetch bit D6
3916   280E             
3917   280E 07          		RLC		;4	;Carry = bit
3918   280F 7C          		MOV	A,H	;5
3919   2810 1F          		RAR		;4	
3920   2811 67          		MOV	H,A	;5	
3921   2812 7E          		MOV	A,M	;7
3922   2813 2D          		DCR	L	;5 
3923   2814 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D7     
3924   2816 DB 40       		IN	INPUT_PORT ;10	;Fetch bit D7     
3925   2818             
3926   2818 07          		RLC		;4	;Carry = bit
3927   2819 7C          		MOV	A,H	;5
3928   281A 1F          		RAR		;4	
3929   281B             		
3930   281B 26 FE       		MVI	H,RXBUFFER >> 8 ;7
3931   281D 77          		MOV	M,A	;7 Save Received byte into RX Buffer
3932   281E             		
3933   281E E1          		POP	H	;10
3934   281F F1          		POP	PSW	;10
3935   2820 FB          		EI		;4
3936   2821 C9          		RET		;10
3937   2822             
3938   2822             IR4_SIZE	.EQU	$ - IR4_ROM
3939   2822             		
3940   2822             
3941   2822             
3942   2822             ;----------------------------------------------------------------------------------------------------; RAM SPACE
3943   2822             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
3944   2822             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
3945   2822             ;----------------------------------------------------------------------------------------------------; RAM SPACE
3946   2822             
3947   2822             ;                       ********      ***     **     **                         
3948   2822             ;                       *********    *****    ***   ***                         
3949   2822             ;                       **     **   *** ***   **** ****                         
3950   2822             ;                       **     **  ***   ***  *********                         
3951   2822             ;---------------------  ********   *********  ** *** **  ---------------------  
3952   2822             ;---------------------  ********   *********  ** *** **  ---------------------  
3953   2822             ;                       **  **     **     **  **     **                         
3954   2822             ;                       **   **    **     **  **     **                         
3955   2822             ;                       **    **   **     **  **     **                         
3956   2822             ;                       **     **  **     **  **     **                         
3957   2822             
3958   2822             
3959   2822             
3960   2822             
3961   2822             
3962   2822             
3963   FD00             		.ORG	0FD00H
3964   FD00             		.DSEG
3965   FD00             		;DEFINE RAM AREAS FOR BDOS OPERATION
3966   FD00             DIRBUF		.BLOCK	128
3967   FD80             ALV0		.BLOCK	31
3968   FD9F             CSV0		.BLOCK	16
3969   FDAF             
3970   FDAF             ; SPECIAL FLAGS.
3971   FDAF             CONOTF		.BLOCK  1	;NO-PRINT FLAG (WHEN FF).
3972   FDB0             
3973   FDB0             CLEAR_RAM	.EQU	$	;Clear all RAM after this point on INIT
3974   FDB0             
3975   FDB0             LOGICAL_SEC	.BLOCK	2	;Logical Sector for next Read/Write Operation
3976   FDB2             
3977   FDB2             ; BIOS SCRATCH AREA.
3978   FDB2             ;
3979   FDB2             					;SECT and Trk concatenate to form Logical Sector
3980   FDB2             SECT:		.BLOCK   1		;CURRENT SECTOR NUMBER (1 Byte!!)
3981   FDB3             TRK:		.BLOCK   2		;CURRENT TRACK NUMBER.
3982   FDB5             DMAADD:		.BLOCK   2		;DISK TRANSFER ADDRESS.
3983   FDB7             DISKNO:		.BLOCK   1		;DISK NUMBER (TO CP/M).
3984   FDB8             
3985   FDB8             
3986   FE00             		.ORG	0FE00H
3987   FE00             STACK_ISR
3988   FE00             RXBUFFER	.BLOCK	256
3989   FF00             
3990   FF00             
3991   FF00             		.ORG	0FF00H
3992   FF00             BITMAP		.BLOCK  8	;Bits 0 to 7
3993   FF08             FP_LED_MAT	.BLOCK	7	;FRONT PANEL MATRIX LED OUTPUT (align with low address nibble=0)
3994   FF0F             				;xxxx LLLL = A11 to A8
3995   FF0F             				;xxxx LLLL = A15 to A12
3996   FF0F             				;xxxx LLLL = A3  to A0
3997   FF0F             				;xxxx LLLL = A7  to A4
3998   FF0F             				;xxxx LLLL = D3  to D0
3999   FF0F             				;xxxx LLLL = D7  to D4
4000   FF0F             				;xxxx LLLL = ALO, AHI, DATA, RUN
4001   FF0F             				
4002   FF0F             FP_SW_MAT	.BLOCK	7	;Switch input matrix
4003   FF16             				;.... .... = Don't care,not connected
4004   FF16             				;.... .... = Don't care,not connected
4005   FF16             				;.... .... = Don't care,not connected
4006   FF16             				;.... .... = Don't care,not connected
4007   FF16             				;.... SSSS = D3 to D0
4008   FF16             				;.... SSSS = D7 to D4
4009   FF16             				;.... .SSS = NEXT, MODE, RUN
4010   FF16             				
4011   FF16             FP_MAT_PTR	.BLOCK	2	;Pointer to next LED output
4012   FF18             FP_SW_PTR	.BLOCK	1	;Pointer to next Switch to Debounce
4013   FF19             FP_SW_DBC	.BLOCK	12	;Switch Debounce Counters (must be in low half of page, Sign bit=0)
4014   FF25             FP_SW_FLAG	.BLOCK	1	;Key pressed (0-11 or 80H=No key)
4015   FF26             FPM_ADDR	.BLOCK	2	;Pointer to current memory to display
4016   FF28             FPM_REPEAT	.BLOCK	1	;Counter to slow repeat function
4017   FF29             FPM_MOD_FIELD	.BLOCK	1	;Pointer to Modifiying field (eg 0=None, 1=A-Hi, 2= A-Low, 3= Data)
4018   FF2A             FPM_FLASH_COD	.BLOCK	1	;Flash code for modify field (eg 0= OFF, 1=2= NULL, 3=ON)
4019   FF2B             OUTPUT_LAST	.BLOCK	1	;Last byte to output for LED's
4020   FF2C             GC_OPTIONS	.BLOCK	1	;Options for Get Char
4021   FF2D             				;Bit 0 - Enable Front Panel Ops during Get_Char
4022   FF2D             				;Bit 7 - Enable Echo
4023   FF2D             INT_ENABLED	.BLOCK	1	;Software flag for Interrupt Enable (Allow PUT_CHAR before INT)
4024   FF2E             
4025   FF2E             RXBHEAD		.BLOCK	2	;Pointer to Head of Buffer (incomming chars)
4026   FF30             RXBTAIL		.BLOCK	2	;Poniter to Tail of Buffer.  If Tail=Head then Buffer is empty.
4027   FF32             
4028   FF32             XMSEQ		.BLOCK	1	;XMODEM SEQUENCE NUMBER
4029   FF33             XMTYPE		.BLOCK	1	;XMODEM BLOCK TYPE (CRC/CS)
4030   FF34             XSECTOR		.BLOCK	2	;Sector of xmodem transfer
4031   FF36             
4032   FF36             SP_TEMP		.BLOCK	2	;Stack Pointer Saved when doing READ/WRITE SECTORS
4033   FF38             HL_TEMP		.BLOCK	2	;Also saves HL when setting up new & old Stack in BIOS
4034   FF3A             SP_BIOS		.BLOCK	2	;Stack Pointer Saved when doing CPM BIOS
4035   FF3C             SP_ISR		.BLOCK	2	;Stack Pointer Saved when doing TIMER ISR
4036   FF3E             ISR_LOCK	.BLOCK	1	;Flag to prevent re-entry to ISR
4037   FF3F             PC_PTR		.BLOCK	2	;Location of Put_Char
4038   FF41             BAUD_SET_PTR	.BLOCK	2	;Location of Baud Set Routine
4039   FF43             MEM_SOURCE	.BLOCK	1	;ROM/RAM Source for memory dump/edit.  1=RAM, 0=ROM.
4040   FF44             ROM_SELECT	.BLOCK	1	;ROM/RAM Selected for code.  1=RAM, 0=ROM.
4041   FF45             TIMER_RUN	.BLOCK	1	;TIC Interrupt ON/OFF  (1/0)
4042   FF46             TIC_COUNTER	.BLOCK	2	;Timer TIC Counter
4043   FF48             FP_PRECOUNT	.BLOCK	1	;PRECOUNTER FOR FP_OPERATE
4044   FF49             RAM_SIGNATURE	.BLOCK	2	;Set to a unique value to indicate RAM has been initialized (cold/warm boot)
4045   FF4B             RAMDISK_CS	.BLOCK	2	;Saved Value of RAM Checksum
4046   FF4D             
4047   FF4D             
4048   FF4D~            	#if ($ >= STACK - 40)	;Reserve 40 bytes for Stack
4049   FF4D~                         !!!OUT-OF-STACK-SPACE!!!
4050   FF4D             	#endif
4051   FF4D             
4052   FF80             		.ORG	0FF80H
4053   FF80             STACK		.BLOCK	0
4054   FF80             SECTOR_BUFFER	.BLOCK	128
4055   0000                                                                               
4056   0000             ;  ********   **     **  *********  *********  *********  ******** 
4057   0000             ;  *********  **     **  *********  *********  *********  *********
4058   0000             ;  **     **  **     **  **         **         **         **     **
4059   0000             ;  **     **  **     **  **         **         **         **     **
4060   0000             ;  ********   **     **  *******    *******    *******    ******** 
4061   0000             ;  ********   **     **  *******    *******    *******    ******** 
4062   0000             ;  **     **  **     **  **         **         **         **  **   
4063   0000             ;  **     **  **     **  **         **         **         **   **  
4064   0000             ;  *********  *********  **         **         *********  **    ** 
4065   0000             ;  ********    *******   **         **         *********  **     **
4066   0000             ;                                                                  
4067   0000             
4068   0000             
4069   0000             
4070   0000             ;ROM DISK AREA
4071   0000             ;Last Firmware ROM @ 2826h   
4072   0000             
4073   2B00             ROM_DISK	.ORG	2B00H	;Start 1 page less than a 1K boundary, allows for MONITOR command
4074   2B00             
4075   2B00             ;ROM	SECTOR	BLOCK
4076   2B00             ;2B00	0E00	E0
4077   2B00             ;2B80	0E01	E0
4078   2B00             ;2C00	0E02	E0
4079   2B00             ;2C80	0E03	E0
4080   2B00             ;2D00	0E04	E0
4081   2B00             ;2D80	0E05	E0
4082   2B00             ;2E00	0E06	E0
4083   2B00             ;2E80	0E07	E0
4084   2B00             ;2F00	0E08	E0
4085   2B00             ;2F80	0E09	E0
4086   2B00             ;3000	0E0A	E0
4087   2B00             ;3080	0E0B	E0
4088   2B00             ;3100	0E0C	E0
4089   2B00             ;3180	0E0D	E0
4090   2B00             ;3200	0E0E	E0
4091   2B00             ;3280	0E0F	E0
4092   2B00             ;3300	0E10	E1
4093   2B00             ;
4094   2B00             ;3B00	0E20	E2
4095   2B00             ;
4096   2B00             ;4300	0E30	E3
4097   2B00             ;
4098   2B00             ;4B00	0E40	E4
4099   2B00             ;
4100   2B00             ;5300	0E50	E5
4101   2B00             ;
4102   2B00             ;5B00	0E60	E6
4103   2B00             ;
4104   2B00             ;6300	0E70	E7
4105   2B00             ;
4106   2B00             ;6B00	0E80	E8
4107   2B00             ;
4108   2B00             ;7300	0E90	E9
4109   2B00             ;
4110   2B00             ;7B00	0EA0	EA
4111   2B00             ;
4112   2B00             
4113   2B00             											;PIP.COM
4114   2B00             											;BLOCK E0
4115   2B00 C3CE04C90000    .DB 0C3h,0CEh,004h,0C9h,000h,000h,0C9h,000h,000h,01Ah,000h,000h,000h,000h,000h,000h  ;0000h
4115   2B06 C900001A000000000000
4116   2B10 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0010h
4116   2B16 4F55543A535041434529
4117   2B20 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0020h
4117   2B26 4F55543A535041434529
4118   2B30 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0030h
4118   2B36 4F55543A535041434529
4119   2B40 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0040h
4119   2B46 4F55543A535041434529
4120   2B50 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0050h
4120   2B56 4F55543A535041434529
4121   2B60 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0060h
4121   2B66 4F55543A535041434529
4122   2B70 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0070h
4122   2B76 4F55543A535041434529
4123   2B80 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0080h
4123   2B86 4F55543A535041434529
4124   2B90 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;0090h
4124   2B96 4F55543A535041434529
4125   2BA0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00A0h
4125   2BA6 4F55543A535041434529
4126   2BB0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00B0h
4126   2BB6 4F55543A535041434529
4127   2BC0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00C0h
4127   2BC6 4F55543A535041434529
4128   2BD0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00D0h
4128   2BD6 4F55543A535041434529
4129   2BE0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00E0h
4129   2BE6 4F55543A535041434529
4130   2BF0 28494E503A2F    .DB 028h,049h,04Eh,050h,03Ah,02Fh,04Fh,055h,054h,03Ah,053h,050h,041h,043h,045h,029h  ;00F0h
4130   2BF6 4F55543A535041434529
4131   2C00 202020434F50    .DB 020h,020h,020h,043h,04Fh,050h,059h,052h,049h,047h,048h,054h,020h,028h,043h,029h  ;0100h
4131   2C06 59524947485420284329
4132   2C10 20313937392C    .DB 020h,031h,039h,037h,039h,02Ch,020h,044h,049h,047h,049h,054h,041h,04Ch,020h,052h  ;0110h
4132   2C16 204449474954414C2052
4133   2C20 455345415243    .DB 045h,053h,045h,041h,052h,043h,048h,02Ch,020h,020h,050h,049h,050h,020h,056h,045h  ;0120h
4133   2C26 482C2020504950205645
4134   2C30 525320312E35    .DB 052h,053h,020h,031h,02Eh,035h,003h,001h,006h,001h,000h,024h,024h,024h,020h,020h  ;0130h
4134   2C36 03010601002424242020
4135   2C40 202020535542    .DB 020h,020h,020h,053h,055h,042h,000h,000h,000h,020h,03Dh,02Eh,03Ah,02Ch,03Ch,03Eh  ;0140h
4135   2C46 000000203D2E3A2C3C3E
4136   2C50 0D5F5B5D494E    .DB 00Dh,05Fh,05Bh,05Dh,049h,04Eh,050h,049h,052h,044h,050h,054h,052h,055h,052h,031h  ;0150h
4136   2C56 50495244505452555231
4137   2C60 555232524452    .DB 055h,052h,032h,052h,044h,052h,04Fh,055h,054h,04Ch,050h,054h,055h,04Ch,031h,050h  ;0160h
4137   2C66 4F55544C5054554C3150
4138   2C70 524E4C535450    .DB 052h,04Eh,04Ch,053h,054h,050h,054h,050h,055h,050h,031h,055h,050h,032h,050h,055h  ;0170h
4138   2C76 54505550315550325055
4139   2C80 4E5454594352    .DB 04Eh,054h,054h,059h,043h,052h,054h,055h,043h,031h,043h,04Fh,04Eh,04Eh,055h,04Ch  ;0180h
4139   2C86 54554331434F4E4E554C
4140   2C90 454F46004449    .DB 045h,04Fh,046h,000h,044h,049h,053h,04Bh,020h,052h,045h,041h,044h,020h,045h,052h  ;0190h
4140   2C96 534B2052454144204552
4141   2CA0 524F52244449    .DB 052h,04Fh,052h,024h,044h,049h,053h,04Bh,020h,057h,052h,049h,054h,045h,020h,045h  ;01A0h
4141   2CA6 534B2057524954452045
4142   2CB0 52524F522456    .DB 052h,052h,04Fh,052h,024h,056h,045h,052h,049h,046h,059h,020h,045h,052h,052h,04Fh  ;01B0h
4142   2CB6 4552494659204552524F
4143   2CC0 52244E4F5420    .DB 052h,024h,04Eh,04Fh,054h,020h,041h,020h,043h,048h,041h,052h,041h,043h,054h,045h  ;01C0h
4143   2CC6 41204348415241435445
4144   2CD0 522053494E4B    .DB 052h,020h,053h,049h,04Eh,04Bh,024h,052h,045h,041h,044h,045h,052h,020h,053h,054h  ;01D0h
4144   2CD6 24524541444552205354
4145   2CE0 4F5050494E47    .DB 04Fh,050h,050h,049h,04Eh,047h,00Dh,00Ah,024h,04Eh,04Fh,054h,020h,041h,020h,043h  ;01E0h
4145   2CE6 0D0A244E4F5420412043
4146   2CF0 484152414354    .DB 048h,041h,052h,041h,043h,054h,045h,052h,020h,053h,04Fh,055h,052h,043h,045h,024h  ;01F0h
4146   2CF6 455220534F5552434524
4147   2D00 41424F525445    .DB 041h,042h,04Fh,052h,054h,045h,044h,024h,042h,041h,044h,020h,050h,041h,052h,041h  ;0200h
4147   2D06 44244241442050415241
4148   2D10 4D4554455224    .DB 04Dh,045h,054h,045h,052h,024h,049h,04Eh,056h,041h,04Ch,049h,044h,020h,055h,053h  ;0210h
4148   2D16 494E56414C4944205553
4149   2D20 4552204E554D    .DB 045h,052h,020h,04Eh,055h,04Dh,042h,045h,052h,024h,052h,045h,043h,04Fh,052h,044h  ;0220h
4149   2D26 424552245245434F5244
4150   2D30 20544F4F204C    .DB 020h,054h,04Fh,04Fh,020h,04Ch,04Fh,04Eh,047h,024h,049h,04Eh,056h,041h,04Ch,049h  ;0230h
4150   2D36 4F4E4724494E56414C49
4151   2D40 442044494749    .DB 044h,020h,044h,049h,047h,049h,054h,024h,045h,04Eh,044h,020h,04Fh,046h,020h,046h  ;0240h
4151   2D46 5424454E44204F462046
4152   2D50 494C452C2043    .DB 049h,04Ch,045h,02Ch,020h,043h,054h,04Ch,02Dh,05Ah,03Fh,024h,043h,048h,045h,043h  ;0250h
4152   2D56 544C2D5A3F2443484543
4153   2D60 4B53554D2045    .DB 04Bh,053h,055h,04Dh,020h,045h,052h,052h,04Fh,052h,024h,043h,04Fh,052h,052h,045h  ;0260h
4153   2D66 52524F5224434F525245
4154   2D70 435420455252    .DB 043h,054h,020h,045h,052h,052h,04Fh,052h,02Ch,020h,054h,059h,050h,045h,020h,052h  ;0270h
4154   2D76 4F522C20545950452052
4155   2D80 455455524E20    .DB 045h,054h,055h,052h,04Eh,020h,04Fh,052h,020h,043h,054h,04Ch,02Dh,05Ah,024h,049h  ;0280h
4155   2D86 4F522043544C2D5A2449
4156   2D90 4E56414C4944    .DB 04Eh,056h,041h,04Ch,049h,044h,020h,046h,04Fh,052h,04Dh,041h,054h,024h,048h,045h  ;0290h
4156   2D96 20464F524D4154244845
4157   2DA0 58242424244E    .DB 058h,024h,024h,024h,024h,04Eh,04Fh,020h,044h,049h,052h,045h,043h,054h,04Fh,052h  ;02A0h
4157   2DA6 4F204449524543544F52
4158   2DB0 592053504143    .DB 059h,020h,053h,050h,041h,043h,045h,024h,04Eh,04Fh,020h,046h,049h,04Ch,045h,024h  ;02B0h
4158   2DB6 45244E4F2046494C4524
4159   2DC0 434F4D245354    .DB 043h,04Fh,04Dh,024h,053h,054h,041h,052h,054h,020h,04Eh,04Fh,054h,020h,046h,04Fh  ;02C0h
4159   2DC6 415254204E4F5420464F
4160   2DD0 554E44245155    .DB 055h,04Eh,044h,024h,051h,055h,049h,054h,020h,04Eh,04Fh,054h,020h,046h,04Fh,055h  ;02D0h
4160   2DD6 4954204E4F5420464F55
4161   2DE0 4E442443414E    .DB 04Eh,044h,024h,043h,041h,04Eh,04Eh,04Fh,054h,020h,043h,04Ch,04Fh,053h,045h,020h  ;02E0h
4161   2DE6 4E4F5420434C4F534520
4162   2DF0 44455354494E    .DB 044h,045h,053h,054h,049h,04Eh,041h,054h,049h,04Fh,04Eh,020h,046h,049h,04Ch,045h  ;02F0h
4162   2DF6 4154494F4E2046494C45
4163   2E00 244445535449    .DB 024h,044h,045h,053h,054h,049h,04Eh,041h,054h,049h,04Fh,04Eh,020h,049h,053h,020h  ;0300h
4163   2E06 4E4154494F4E20495320
4164   2E10 522F4F2C2044    .DB 052h,02Fh,04Fh,02Ch,020h,044h,045h,04Ch,045h,054h,045h,020h,028h,059h,02Fh,04Eh  ;0310h
4164   2E16 454C4554452028592F4E
4165   2E20 293F242A2A4E    .DB 029h,03Fh,024h,02Ah,02Ah,04Eh,04Fh,054h,020h,044h,045h,04Ch,045h,054h,045h,044h  ;0320h
4165   2E26 4F542044454C45544544
4166   2E30 2A2A24242424    .DB 02Ah,02Ah,024h,024h,024h,024h,024h,024h,024h,04Eh,04Fh,054h,020h,046h,04Fh,055h  ;0330h
4166   2E36 2424244E4F5420464F55
4167   2E40 4E4424434F50    .DB 04Eh,044h,024h,043h,04Fh,050h,059h,049h,04Eh,047h,020h,02Dh,024h,052h,045h,051h  ;0340h
4167   2E46 59494E47202D24524551
4168   2E50 554952455320    .DB 055h,049h,052h,045h,053h,020h,043h,050h,02Fh,04Dh,020h,032h,02Eh,030h,020h,04Fh  ;0350h
4168   2E56 43502F4D20322E30204F
4169   2E60 52204E455745    .DB 052h,020h,04Eh,045h,057h,045h,052h,020h,046h,04Fh,052h,020h,04Fh,050h,045h,052h  ;0360h
4169   2E66 5220464F52204F504552
4170   2E70 4154494F4E2E    .DB 041h,054h,049h,04Fh,04Eh,02Eh,024h,055h,04Eh,052h,045h,043h,04Fh,047h,04Eh,049h  ;0370h
4170   2E76 24554E5245434F474E49
4171   2E80 5A4544204445    .DB 05Ah,045h,044h,020h,044h,045h,053h,054h,049h,04Eh,041h,054h,049h,04Fh,04Eh,024h  ;0380h
4171   2E86 5354494E4154494F4E24
4172   2E90 43414E4E4F54    .DB 043h,041h,04Eh,04Eh,04Fh,054h,020h,057h,052h,049h,054h,045h,024h,049h,04Eh,056h  ;0390h
4172   2E96 20575249544524494E56
4173   2EA0 414C49442050    .DB 041h,04Ch,049h,044h,020h,050h,049h,050h,020h,046h,04Fh,052h,04Dh,041h,054h,024h  ;03A0h
4173   2EA6 495020464F524D415424
4174   2EB0 43414E4E4F54    .DB 043h,041h,04Eh,04Eh,04Fh,054h,020h,052h,045h,041h,044h,024h,049h,04Eh,056h,041h  ;03B0h
4174   2EB6 205245414424494E5641
4175   2EC0 4C4944205345    .DB 04Ch,049h,044h,020h,053h,045h,050h,041h,052h,041h,054h,04Fh,052h,024h,031h,0F2h  ;03C0h
4175   2EC6 50415241544F522431F2
4176   2ED0 1D018000C51E    .DB 01Dh,001h,080h,000h,0C5h,01Eh,080h,001h,0CCh,01Eh,0CDh,018h,00Ah,03Ah,0CCh,01Eh  ;03D0h
4176   2ED6 8001CC1ECD180A3ACC1E
4177   2EE0 D600D6019F32    .DB 0D6h,000h,0D6h,001h,09Fh,032h,0A5h,01Eh,0CDh,04Ch,008h,0EBh,03Eh,020h,0CDh,084h  ;03E0h
4177   2EE6 A51ECD4C08EB3E20CD84
4178   2EF0 1DD2FD04014D    .DB 01Dh,0D2h,0FDh,004h,001h,04Dh,004h,0CDh,039h,008h,0CDh,000h,000h,0CDh,016h,009h  ;03F0h
4178   2EF6 04CD3908CD0000CD1609
4179   2F00 32C01E110000    .DB 032h,0C0h,01Eh,011h,000h,000h,00Eh,019h,0CDh,005h,000h,032h,0FCh,01Dh,031h,0F2h  ;0400h
4179   2F06 0E19CD050032FC1D31F2
4180   2F10 1DCD401A3AC0    .DB 01Dh,0CDh,040h,01Ah,03Ah,0C0h,01Eh,032h,0C1h,01Eh,021h,06Fh,01Fh,036h,000h,02Bh  ;0410h
4180   2F16 1E32C11E216F1F36002B
4181   2F20 36002B360021    .DB 036h,000h,02Bh,036h,000h,021h,0A6h,01Eh,036h,001h,023h,036h,000h,021h,0F3h,01Dh  ;0420h
4181   2F26 A61E360123360021F31D
4182   2F30 36002336FE3A    .DB 036h,000h,023h,036h,0FEh,03Ah,0A5h,01Eh,01Fh,0D2h,047h,005h,00Eh,02Ah,0CDh,01Ch  ;0430h
4182   2F36 A51E1FD247050E2ACD1C
4183   2F40 08CD6F09CD2E    .DB 008h,0CDh,06Fh,009h,0CDh,02Eh,008h,021h,04Eh,01Fh,036h,0FFh,03Ah,0CCh,01Eh,0FEh  ;0440h
4183   2F46 08214E1F36FF3ACC1EFE
4184   2F50 00C25E052AFC    .DB 000h,0C2h,05Eh,005h,02Ah,0FCh,01Dh,04Dh,0CDh,05Eh,008h,0CDh,000h,000h,021h,04Bh  ;0450h
4184   2F56 1D4DCD5E08CD0000214B
4185   2F60 1E360021031E    .DB 01Eh,036h,000h,021h,003h,01Eh,036h,000h,021h,0A4h,01Eh,036h,000h,02Bh,036h,000h  ;0460h
4185   2F66 360021A41E36002B3600
4186   2F70 01271ECD2012    .DB 001h,027h,01Eh,0CDh,020h,012h,03Ah,0A9h,01Eh,0FEh,003h,0C2h,081h,005h,0C3h,024h  ;0470h
4186   2F76 3AA91EFE03C28105C324
4187   2F80 063AA91EFE04    .DB 006h,03Ah,0A9h,01Eh,0FEh,004h,0C2h,0C3h,005h,03Ah,094h,01Fh,03Dh,032h,04Bh,01Eh  ;0480h
4187   2F86 C2C3053A941F3D324B1E
4188   2F90 CD0C1D01061E    .DB 0CDh,00Ch,01Dh,001h,006h,01Eh,0CDh,020h,012h,03Ah,0A9h,01Eh,0FEh,002h,0CAh,0A4h  ;0490h
4188   2F96 CD20123AA91EFE02CAA4
4189   2FA0 05CD5C183AF5    .DB 005h,0CDh,05Ch,018h,03Ah,0F5h,01Dh,01Fh,0D2h,0B7h,005h,001h,05Ch,000h,0CDh,0EEh  ;04A0h
4189   2FA6 1D1FD2B705015C00CDEE
4190   2FB0 1CCD781BC3C0    .DB 01Ch,0CDh,078h,01Bh,0C3h,0C0h,005h,001h,027h,01Eh,0CDh,0EEh,01Ch,0CDh,0B2h,01Ah  ;04B0h
4190   2FB6 0501271ECDEE1CCDB21A
4191   2FC0 C3DB073AA91E    .DB 0C3h,0DBh,007h,03Ah,0A9h,01Eh,0D6h,002h,0C6h,0FFh,09Fh,021h,0F5h,01Dh,0B6h,01Fh  ;04C0h
4191   2FC6 D602C6FF9F21F51DB61F
4192   2FD0 D2D605CD5C18    .DB 0D2h,0D6h,005h,0CDh,05Ch,018h,0CDh,0A2h,01Ch,0CDh,00Ch,01Dh,001h,006h,01Eh,0CDh  ;04D0h
4192   2FD6 CDA21CCD0C1D01061ECD
4193   2FE0 20123AA91EFE    .DB 020h,012h,03Ah,0A9h,01Eh,0FEh,004h,0C2h,005h,006h,0CDh,088h,01Ch,0CDh,0C6h,01Ch  ;04E0h
4193   2FE6 04C20506CD881CCDC61C
4194   2FF0 01271EC51E21    .DB 001h,027h,01Eh,0C5h,01Eh,021h,001h,006h,01Eh,0CDh,018h,00Ah,0CDh,0DFh,01Ch,0CDh  ;04F0h
4194   2FF6 01061ECD180ACDDF1CCD
4195   3000 B21AC3DB073A    .DB 0B2h,01Ah,0C3h,0DBh,007h,03Ah,0A9h,01Eh,0FEh,002h,0C2h,024h,006h,0CDh,011h,012h  ;0500h
4195   3006 A91EFE02C22406CD1112
4196   3010 3AA81EFE0DCA    .DB 03Ah,0A8h,01Eh,0FEh,00Dh,0CAh,01Bh,006h,0C3h,024h,006h,0CDh,088h,01Ch,0CDh,0B2h  ;0510h
4196   3016 1B06C32406CD881CCDB2
4197   3020 1AC3DB07214E    .DB 01Ah,0C3h,0DBh,007h,021h,04Eh,01Fh,036h,0FFh,001h,027h,01Eh,0CDh,020h,012h,03Ah  ;0520h
4197   3026 1F36FF01271ECD20123A
4198   3030 A91ED6029F21    .DB 0A9h,01Eh,0D6h,002h,09Fh,021h,0F5h,01Dh,0B6h,01Fh,0D2h,043h,006h,001h,077h,004h  ;0530h
4198   3036 F51DB61FD24306017704
4199   3040 CDAF0921051E    .DB 0CDh,0AFh,009h,021h,005h,01Eh,036h,000h,03Ah,0A9h,01Eh,0FEh,002h,0C2h,05Eh,006h  ;0540h
4199   3046 36003AA91EFE02C25E06
4200   3050 CDA21CCD6318    .DB 0CDh,0A2h,01Ch,0CDh,063h,018h,021h,0A8h,01Eh,036h,0FFh,0C3h,07Bh,006h,03Ah,0A8h  ;0550h
4200   3056 21A81E36FFC37B063AA8
4201   3060 1ED6139F2FF5    .DB 01Eh,0D6h,013h,09Fh,02Fh,0F5h,03Eh,005h,021h,0A8h,01Eh,096h,09Fh,02Fh,0C1h,048h  ;0560h
4201   3066 3E0521A81E969F2FC148
4202   3070 B11FD27B0601    .DB 0B1h,01Fh,0D2h,07Bh,006h,001h,090h,004h,0CDh,0AFh,009h,03Ah,0A8h,01Eh,03Ch,032h  ;0570h
4202   3076 9004CDAF093AA81E3C32
4203   3080 A31EFE0FC28A    .DB 0A3h,01Eh,0FEh,00Fh,0C2h,08Ah,006h,0CDh,0CFh,015h,001h,006h,01Eh,0CDh,020h,012h  ;0580h
4203   3086 06CDCF1501061ECD2012
4204   3090 3AA91ED601C6    .DB 03Ah,0A9h,01Eh,0D6h,001h,0C6h,0FFh,09Fh,0F5h,03Ah,0A8h,01Eh,0D6h,03Dh,0C6h,0FFh  ;0590h
4204   3096 FF9FF53AA81ED63DC6FF
4205   30A0 9FC148B11FD2    .DB 09Fh,0C1h,048h,0B1h,01Fh,0D2h,0AEh,006h,001h,09Dh,004h,0CDh,0AFh,009h,021h,0A7h  ;05A0h
4205   30A6 AE06019D04CDAF0921A7
4206   30B0 1F36013AA71F    .DB 01Fh,036h,001h,03Ah,0A7h,01Fh,01Fh,0D2h,0BEh,007h,03Ah,0C0h,01Eh,032h,0C1h,01Eh  ;05B0h
4206   30B6 1FD2BE073AC01E32C11E
4207   30C0 01061ECD2012    .DB 001h,006h,01Eh,0CDh,020h,012h,021h,004h,01Eh,036h,000h,03Ah,0A9h,01Eh,0D6h,002h  ;05C0h
4207   30C6 21041E36003AA91ED602
4208   30D0 D6019FF53AF5    .DB 0D6h,001h,09Fh,0F5h,03Ah,0F5h,01Dh,02Fh,0C1h,048h,0A1h,01Fh,0D2h,0EDh,006h,0CDh  ;05D0h
4208   30D6 1D2FC148A11FD2ED06CD
4209   30E0 881CCDBE1821    .DB 088h,01Ch,0CDh,0BEh,018h,021h,0A8h,01Eh,036h,0FFh,0C3h,013h,007h,03Ah,0A9h,01Eh  ;05E0h
4209   30E6 A81E36FFC313073AA91E
4210   30F0 D603C6FF9FF5    .DB 0D6h,003h,0C6h,0FFh,09Fh,0F5h,03Eh,00Ah,021h,0A8h,01Eh,096h,09Fh,02Fh,0F5h,03Eh  ;05F0h
4210   30F6 3E0A21A81E969F2FF53E
4211   3100 05969FC148A1    .DB 005h,096h,09Fh,0C1h,048h,0A1h,0C1h,048h,0B1h,01Fh,0D2h,013h,007h,001h,0B0h,004h  ;0600h
4211   3106 C148B11FD2130701B004
4212   3110 CDAF093A5E1F    .DB 0CDh,0AFh,009h,03Ah,05Eh,01Fh,021h,004h,01Eh,0B6h,077h,03Ah,0A8h,01Eh,03Ch,032h  ;0610h
4212   3116 21041EB6773AA81E3C32
4213   3120 A41E3AA81EFE    .DB 0A4h,01Eh,03Ah,0A8h,01Eh,0FEh,013h,0C2h,030h,007h,0CDh,0CFh,015h,0C3h,07Dh,007h  ;0620h
4213   3126 13C23007CDCF15C37D07
4214   3130 3AA81EFE14C2    .DB 03Ah,0A8h,01Eh,0FEh,014h,0C2h,040h,007h,00Eh,01Ah,0CDh,045h,00Eh,0C3h,07Dh,007h  ;0630h
4214   3136 40070E1ACD450EC37D07
4215   3140 3AA81ED6059F    .DB 03Ah,0A8h,01Eh,0D6h,005h,09Fh,021h,005h,01Eh,0A6h,01Fh,0D2h,053h,007h,021h,057h  ;0640h
4215   3146 21051EA61FD253072157
4216   3150 1F36013AA31E    .DB 01Fh,036h,001h,03Ah,0A3h,01Eh,0FEh,00Ah,0C2h,07Ah,007h,021h,05Dh,01Fh,036h,001h  ;0650h
4216   3156 FE0AC27A07215D1F3601
4217   3160 3A631FFE00C2    .DB 03Ah,063h,01Fh,0FEh,000h,0C2h,06Dh,007h,021h,063h,01Fh,036h,008h,03Ah,05Fh,01Fh  ;0660h
4217   3166 6D0721631F36083A5F1F
4218   3170 FE00C27A0721    .DB 0FEh,000h,0C2h,07Ah,007h,021h,05Fh,01Fh,036h,001h,0CDh,06Ch,01Ah,0CDh,012h,019h  ;0670h
4218   3176 5F1F3601CD6C1ACD1219
4219   3180 01061ECD2012    .DB 001h,006h,01Eh,0CDh,020h,012h,03Ah,0A9h,01Eh,0D6h,001h,0C6h,0FFh,09Fh,0F5h,03Ah  ;0680h
4219   3186 3AA91ED601C6FF9FF53A
4220   3190 A81ED62CC6FF    .DB 0A8h,01Eh,0D6h,02Ch,0C6h,0FFh,09Fh,0F5h,03Ah,0A8h,01Eh,0D6h,00Dh,0C6h,0FFh,09Fh  ;0690h
4220   3196 9FF53AA81ED60DC6FF9F
4221   31A0 C148A1C148B1    .DB 0C1h,048h,0A1h,0C1h,048h,0B1h,01Fh,0D2h,0B0h,007h,001h,0BCh,004h,0CDh,0AFh,009h  ;06A0h
4221   31A6 1FD2B00701BC04CDAF09
4222   31B0 3AA81ED60DC6    .DB 03Ah,0A8h,01Eh,0D6h,00Dh,0C6h,0FFh,09Fh,032h,0A7h,01Fh,0C3h,0B3h,006h,03Ah,0A3h  ;06B0h
4222   31B6 FF9F32A71FC3B3063AA3
4223   31C0 1EFE0FC2CE07    .DB 01Eh,0FEh,00Fh,0C2h,0CEh,007h,00Eh,01Ah,0CDh,045h,00Eh,0CDh,0CFh,015h,03Ah,0A3h  ;06C0h
4223   31C6 0E1ACD450ECDCF153AA3
4224   31D0 1EFE00C2DB07    .DB 01Eh,0FEh,000h,0C2h,0DBh,007h,00Eh,000h,0CDh,031h,019h,03Ah,0A5h,01Eh,032h,0CCh  ;06D0h
4224   31D6 0E00CD31193AA51E32CC
4225   31E0 1EC31405FB76    .DB 01Eh,0C3h,014h,005h,0FBh,076h,021h,0F2h,01Dh,071h,021h,0F2h,007h,0E5h,02Ah,038h  ;06E0h
4225   31E6 21F21D7121F207E52A38
4226   31F0 02E9C921FB07    .DB 002h,0E9h,0C9h,021h,0FBh,007h,0E5h,02Ah,036h,002h,0E9h,03Ah,009h,001h,0C9h,03Eh  ;06F0h
4226   31F6 E52A3602E93A0901C93E
4227   3200 FACDA61D3EFA    .DB 0FAh,0CDh,0A6h,01Dh,03Eh,0FAh,0CDh,0A6h,01Dh,0C9h,011h,000h,000h,00Eh,003h,0CDh  ;0700h
4227   3206 CDA61DC91100000E03CD
4228   3210 0500C9110000    .DB 005h,000h,0C9h,011h,000h,000h,00Eh,001h,0CDh,005h,000h,0C9h,021h,0ABh,01Eh,071h  ;0710h
4228   3216 0E01CD0500C921AB1E71
4229   3220 3AAB1EE67F5F    .DB 03Ah,0ABh,01Eh,0E6h,07Fh,05Fh,016h,000h,00Eh,002h,0CDh,005h,000h,0C9h,00Eh,00Dh  ;0720h
4229   3226 16000E02CD0500C90E0D
4230   3230 CD1C080E0ACD    .DB 0CDh,01Ch,008h,00Eh,00Ah,0CDh,01Ch,008h,0C9h,021h,0ADh,01Eh,070h,02Bh,071h,0CDh  ;0730h
4230   3236 1C08C921AD1E702B71CD
4231   3240 2E082AAC1EEB    .DB 02Eh,008h,02Ah,0ACh,01Eh,0EBh,00Eh,009h,0CDh,005h,000h,0C9h,011h,000h,000h,00Eh  ;0740h
4231   3246 0E09CD0500C91100000E
4232   3250 0CCD0500C911    .DB 00Ch,0CDh,005h,000h,0C9h,011h,000h,000h,00Eh,00Dh,0CDh,005h,000h,0C9h,021h,0AFh  ;0750h
4232   3256 00000E0DCD0500C921AF
4233   3260 1E712AAF1E26    .DB 01Eh,071h,02Ah,0AFh,01Eh,026h,000h,0EBh,00Eh,00Eh,0CDh,005h,000h,0C9h,021h,0B1h  ;0760h
4233   3266 00EB0E0ECD0500C921B1
4234   3270 1E702B712AB0    .DB 01Eh,070h,02Bh,071h,02Ah,0B0h,01Eh,0EBh,00Eh,00Fh,0CDh,005h,000h,032h,0AEh,01Eh  ;0770h
4234   3276 1EEB0E0FCD050032AE1E
4235   3280 C921B31E702B    .DB 0C9h,021h,0B3h,01Eh,070h,02Bh,071h,02Ah,0B2h,01Eh,0EBh,00Eh,010h,0CDh,005h,000h  ;0780h
4235   3286 712AB21EEB0E10CD0500
4236   3290 32AE1EC921B5    .DB 032h,0AEh,01Eh,0C9h,021h,0B5h,01Eh,070h,02Bh,071h,02Ah,0B4h,01Eh,0EBh,00Eh,011h  ;0790h
4236   3296 1E702B712AB41EEB0E11
4237   32A0 CD050032AE1E    .DB 0CDh,005h,000h,032h,0AEh,01Eh,0C9h,011h,000h,000h,00Eh,012h,0CDh,005h,000h,032h  ;07A0h
4237   32A6 C91100000E12CD050032
4238   32B0 AE1EC921B71E    .DB 0AEh,01Eh,0C9h,021h,0B7h,01Eh,070h,02Bh,071h,02Ah,0B6h,01Eh,0EBh,00Eh,013h,0CDh  ;07B0h
4238   32B6 702B712AB61EEB0E13CD
4239   32C0 0500C921B91E    .DB 005h,000h,0C9h,021h,0B9h,01Eh,070h,02Bh,071h,02Ah,0B8h,01Eh,0EBh,00Eh,014h,0CDh  ;07C0h
4239   32C6 702B712AB81EEB0E14CD
4240   32D0 0500C921BB1E    .DB 005h,000h,0C9h,021h,0BBh,01Eh,070h,02Bh,071h,02Ah,0BAh,01Eh,0EBh,00Eh,015h,0CDh  ;07D0h
4240   32D6 702B712ABA1EEB0E15CD
4241   32E0 0500C921BD1E    .DB 005h,000h,0C9h,021h,0BDh,01Eh,070h,02Bh,071h,02Ah,0BCh,01Eh,0EBh,00Eh,016h,0CDh  ;07E0h
4241   32E6 702B712ABC1EEB0E16CD
4242   32F0 050032AE1EC9    .DB 005h,000h,032h,0AEh,01Eh,0C9h,021h,0BFh,01Eh,070h,02Bh,071h,02Ah,0BEh,01Eh,0EBh  ;07F0h
4242   32F6 21BF1E702B712ABE1EEB
4243   3300             											;BLOCK E1
4244   3300 0E17CD0500C9    .DB 00Eh,017h,0CDh,005h,000h,0C9h,021h,0C3h,01Eh,070h,02Bh,071h,02Ah,0C2h,01Eh,0EBh  ;0800h
4244   3306 21C31E702B712AC21EEB
4245   3310 0E1ECD0500C9    .DB 00Eh,01Eh,0CDh,005h,000h,0C9h,011h,0FFh,000h,00Eh,020h,0CDh,005h,000h,0C9h,021h  ;0810h
4245   3316 11FF000E20CD0500C921
4246   3320 C41E712AC41E    .DB 0C4h,01Eh,071h,02Ah,0C4h,01Eh,026h,000h,0EBh,00Eh,020h,0CDh,005h,000h,0C9h,02Ah  ;0820h
4246   3326 2600EB0E20CD0500C92A
4247   3330 C01E4DCD1F09    .DB 0C0h,01Eh,04Dh,0CDh,01Fh,009h,0C9h,02Ah,0C1h,01Eh,04Dh,0CDh,01Fh,009h,0C9h,021h  ;0830h
4247   3336 C92AC11E4DCD1F09C921
4248   3340 C61E702B712A    .DB 0C6h,01Eh,070h,02Bh,071h,02Ah,0C5h,01Eh,0EBh,00Eh,021h,0CDh,005h,000h,0C9h,021h  ;0840h
4248   3346 C51EEB0E21CD0500C921
4249   3350 C81E702B712A    .DB 0C8h,01Eh,070h,02Bh,071h,02Ah,0C7h,01Eh,0EBh,00Eh,022h,0CDh,005h,000h,0C9h,021h  ;0850h
4249   3356 C71EEB0E22CD0500C921
4250   3360 CA1E702B712A    .DB 0CAh,01Eh,070h,02Bh,071h,02Ah,0C9h,01Eh,0EBh,00Eh,024h,0CDh,005h,000h,0C9h,021h  ;0860h
4250   3366 C91EEB0E24CD0500C921
4251   3370 CB1E368011CB    .DB 0CBh,01Eh,036h,080h,011h,0CBh,01Eh,00Eh,00Ah,0CDh,005h,000h,0C9h,011h,000h,000h  ;0870h
4251   3376 1E0E0ACD0500C9110000
4252   3380 0E0BCD0500C9    .DB 00Eh,00Bh,0CDh,005h,000h,0C9h,021h,06Bh,01Fh,070h,02Bh,071h,02Ah,06Ah,01Fh,0EBh  ;0880h
4252   3386 216B1F702B712A6A1FEB
4253   3390 0E1ACD0500C9    .DB 00Eh,01Ah,0CDh,005h,000h,0C9h,03Eh,00Ch,0D3h,001h,03Eh,008h,0D3h,001h,0DBh,001h  ;0890h
4253   3396 3E0CD3013E08D301DB01
4254   33A0 0707071FDAAA    .DB 007h,007h,007h,01Fh,0DAh,0AAh,009h,0C3h,09Eh,009h,0DBh,003h,0E6h,07Fh,0C9h,021h  ;08A0h
4254   33A6 09C39E09DB03E67FC921
4255   33B0 711F702B71CD    .DB 071h,01Fh,070h,02Bh,071h,0CDh,02Fh,009h,02Ah,070h,01Fh,044h,04Dh,0CDh,039h,008h  ;08B0h
4255   33B6 2F092A701F444DCD3908
4256   33C0 0E3ACD1C080E    .DB 00Eh,03Ah,0CDh,01Ch,008h,00Eh,020h,0CDh,01Ch,008h,03Ah,04Dh,01Fh,032h,072h,01Fh  ;08C0h
4256   33C6 20CD1C083A4D1F32721F
4257   33D0 3A4E1F21721F    .DB 03Ah,04Eh,01Fh,021h,072h,01Fh,0BEh,0DAh,0F8h,009h,021h,0CCh,01Eh,03Ah,072h,01Fh  ;08D0h
4257   33D6 BEDAF80921CC1E3A721F
4258   33E0 BED2F1092A72    .DB 0BEh,0D2h,0F1h,009h,02Ah,072h,01Fh,026h,000h,001h,0CDh,01Eh,009h,04Eh,0CDh,01Ch  ;08E0h
4258   33E6 1F260001CD1E094ECD1C
4259   33F0 0821721F34C2    .DB 008h,021h,072h,01Fh,034h,0C2h,0D0h,009h,021h,0CCh,01Eh,036h,000h,001h,03Ah,002h  ;08F0h
4259   33F6 D00921CC1E3600013A02
4260   3400 CD94083AAE1E    .DB 0CDh,094h,008h,03Ah,0AEh,01Eh,0FEh,0FFh,0CAh,011h,00Ah,001h,03Ah,002h,0CDh,0B3h  ;0900h
4260   3406 FEFFCA110A013A02CDB3
4261   3410 08CD2E08C30E    .DB 008h,0CDh,02Eh,008h,0C3h,00Eh,005h,0C9h,021h,077h,01Fh,073h,02Bh,070h,02Bh,071h  ;0910h
4261   3416 05C921771F732B702B71
4262   3420 2BD1C1702B71    .DB 02Bh,0D1h,0C1h,070h,02Bh,071h,0D5h,03Ah,077h,01Fh,03Dh,032h,077h,01Fh,0FEh,0FFh  ;0920h
4262   3426 D53A771F3D32771FFEFF
4263   3430 CA4E0A2A731F    .DB 0CAh,04Eh,00Ah,02Ah,073h,01Fh,0E5h,02Ah,075h,01Fh,0C1h,00Ah,077h,02Ah,073h,01Fh  ;0930h
4263   3436 E52A751FC10A772A731F
4264   3440 2322731F2A75    .DB 023h,022h,073h,01Fh,02Ah,075h,01Fh,023h,022h,075h,01Fh,0C3h,027h,00Ah,0C9h,021h  ;0940h
4264   3446 1F2322751FC3270AC921
4265   3450 0000229D1E2A    .DB 000h,000h,022h,09Dh,01Eh,02Ah,003h,01Eh,04Dh,0CDh,05Eh,008h,0CDh,037h,009h,021h  ;0950h
4265   3456 031E4DCD5E08CD370921
4266   3460 781F36003AFB    .DB 078h,01Fh,036h,000h,03Ah,0FBh,01Dh,021h,078h,01Fh,0BEh,0DAh,0BEh,00Ah,02Ah,09Dh  ;0960h
4266   3466 1D21781FBEDABE0A2A9D
4267   3470 1EEB2A011E19    .DB 01Eh,0EBh,02Ah,001h,01Eh,019h,044h,04Dh,0CDh,086h,009h,001h,006h,01Eh,0CDh,0C3h  ;0970h
4267   3476 444DCD860901061ECDC3
4268   3480 0832791FFE00    .DB 008h,032h,079h,01Fh,0FEh,000h,0CAh,0ADh,00Ah,03Ah,079h,01Fh,0FEh,001h,0CAh,097h  ;0980h
4268   3486 CAAD0A3A791FFE01CA97
4269   3490 0A019402CDAF    .DB 00Ah,001h,094h,002h,0CDh,0AFh,009h,02Ah,09Dh,01Eh,022h,09Fh,01Eh,0EBh,02Ah,001h  ;0990h
4269   3496 092A9D1E229F1EEB2A01
4270   34A0 1E19361A3AFB    .DB 01Eh,019h,036h,01Ah,03Ah,0FBh,01Dh,032h,078h,01Fh,0C3h,0B7h,00Ah,011h,080h,000h  ;09A0h
4270   34A6 1D32781FC3B70A118000
4271   34B0 2A9D1E19229D    .DB 02Ah,09Dh,01Eh,019h,022h,09Dh,01Eh,021h,078h,01Fh,034h,0C2h,064h,00Ah,021h,000h  ;09B0h
4271   34B6 1E21781F34C2640A2100
4272   34C0 00229D1ECD2F    .DB 000h,022h,09Dh,01Eh,0CDh,02Fh,009h,0C9h,00Eh,007h,021h,0A1h,01Eh,0CDh,06Ah,01Dh  ;09C0h
4272   34C6 09C90E0721A11ECD6A1D
4273   34D0 7D3D327C1FFE    .DB 07Dh,03Dh,032h,07Ch,01Fh,0FEh,0FFh,0C2h,0DBh,00Ah,0C9h,021h,000h,000h,022h,0A1h  ;09D0h
4273   34D6 FFC2DB0AC921000022A1
4274   34E0 1E2A4B1E4DCD    .DB 01Eh,02Ah,04Bh,01Eh,04Dh,0CDh,05Eh,008h,001h,027h,01Eh,0CDh,05Fh,009h,021h,07Ah  ;09E0h
4274   34E6 5E0801271ECD5F09217A
4275   34F0 1F36003A7C1F    .DB 01Fh,036h,000h,03Ah,07Ch,01Fh,021h,07Ah,01Fh,0BEh,0DAh,031h,00Bh,02Ah,0A1h,01Eh  ;09F0h
4275   34F6 217A1FBEDA310B2AA11E
4276   3500 01CA1F09227D    .DB 001h,0CAh,01Fh,009h,022h,07Dh,01Fh,02Ah,07Dh,01Fh,044h,04Dh,0CDh,086h,009h,001h  ;0A00h
4276   3506 1F2A7D1F444DCD860901
4277   3510 271ECDD308FE    .DB 027h,01Eh,0CDh,0D3h,008h,0FEh,000h,0CAh,020h,00Bh,001h,0A4h,002h,0CDh,0AFh,009h  ;0A10h
4277   3516 00CA200B01A402CDAF09
4278   3520 1180002AA11E    .DB 011h,080h,000h,02Ah,0A1h,01Eh,019h,022h,0A1h,01Eh,021h,07Ah,01Fh,034h,0C2h,0F3h  ;0A20h
4278   3526 1922A11E217A1F34C2F3
4279   3530 0A3A651F1FD2    .DB 00Ah,03Ah,065h,01Fh,01Fh,0D2h,0C9h,00Bh,021h,000h,000h,022h,0A1h,01Eh,001h,080h  ;0A30h
4279   3536 C90B21000022A11E0180
4280   3540 00CD8609217A    .DB 000h,0CDh,086h,009h,021h,07Ah,01Fh,036h,000h,03Ah,07Ch,01Fh,021h,07Ah,01Fh,0BEh  ;0A40h
4280   3546 1F36003A7C1F217A1FBE
4281   3550 DAC00B01271E    .DB 0DAh,0C0h,00Bh,001h,027h,01Eh,0CDh,03Fh,009h,0D6h,000h,0D6h,001h,09Fh,032h,07Fh  ;0A50h
4281   3556 CD3F09D600D6019F327F
4282   3560 1F2A481E2322    .DB 01Fh,02Ah,048h,01Eh,023h,022h,048h,01Eh,021h,07Bh,01Fh,036h,000h,03Ah,07Bh,01Fh  ;0A60h
4282   3566 481E217B1F36003A7B1F
4283   3570 D6809F217F1F    .DB 0D6h,080h,09Fh,021h,07Fh,01Fh,0A6h,01Fh,0D2h,0A2h,00Bh,02Ah,07Bh,01Fh,026h,000h  ;0A70h
4283   3576 A61FD2A20B2A7B1F2600
4284   3580 018000093A7B    .DB 001h,080h,000h,009h,03Ah,07Bh,01Fh,011h,0A1h,01Eh,0E5h,0CDh,034h,01Dh,001h,0CAh  ;0A80h
4284   3586 1F11A11EE5CD341D01CA
4285   3590 1F09C10A96D6    .DB 01Fh,009h,0C1h,00Ah,096h,0D6h,001h,09Fh,032h,07Fh,01Fh,021h,07Bh,01Fh,034h,0C3h  ;0A90h
4285   3596 019F327F1F217B1F34C3
4286   35A0 6D0B1180002A    .DB 06Dh,00Bh,011h,080h,000h,02Ah,0A1h,01Eh,019h,022h,0A1h,01Eh,03Ah,07Fh,01Fh,01Fh  ;0AA0h
4286   35A6 A11E1922A11E3A7F1F1F
4287   35B0 DAB90B01B502    .DB 0DAh,0B9h,00Bh,001h,0B5h,002h,0CDh,0AFh,009h,021h,07Ah,01Fh,034h,0C2h,049h,00Bh  ;0AB0h
4287   35B6 CDAF09217A1F34C2490B
4288   35C0 01271ECDD308    .DB 001h,027h,01Eh,0CDh,0D3h,008h,032h,07Fh,01Fh,021h,000h,000h,022h,0A1h,01Eh,0C9h  ;0AC0h
4288   35C6 327F1F21000022A11EC9
4289   35D0 21801F713A80    .DB 021h,080h,01Fh,071h,03Ah,080h,01Fh,0FEh,020h,0DAh,0F4h,00Bh,021h,0F3h,01Dh,034h  ;0AD0h
4289   35D6 1FFE20DAF40B21F31D34
4290   35E0 3E0021531FBE    .DB 03Eh,000h,021h,053h,01Fh,0BEh,0D2h,0F4h,00Bh,03Ah,053h,01Fh,021h,0F3h,01Dh,0BEh  ;0AE0h
4290   35E6 D2F40B3A531F21F31DBE
4291   35F0 D2F40BC93A03    .DB 0D2h,0F4h,00Bh,0C9h,03Ah,003h,000h,032h,081h,01Fh,02Ah,0A3h,01Eh,04Dh,006h,000h  ;0AF0h
4291   35F6 0032811F2AA31E4D0600
4292   3600 21DD0C09095E    .DB 021h,0DDh,00Ch,009h,009h,05Eh,023h,056h,0EBh,0E9h,001h,0FFh,01Dh,011h,0A1h,01Eh  ;0B00h
4292   3606 2356EBE901FF1D11A11E
4293   3610 CD8E1DDA190C    .DB 0CDh,08Eh,01Dh,0DAh,019h,00Ch,0CDh,0C8h,00Ah,02Ah,0A1h,01Eh,001h,0CAh,01Fh,009h  ;0B10h
4293   3616 CDC80A2AA11E01CA1F09
4294   3620 3A801F772AA1    .DB 03Ah,080h,01Fh,077h,02Ah,0A1h,01Eh,023h,022h,0A1h,01Eh,0C3h,005h,00Dh,0C3h,03Dh  ;0B20h
4294   3626 1E2322A11EC3050DC33D
4295   3630 0CC33D0CC33D    .DB 00Ch,0C3h,03Dh,00Ch,0C3h,03Dh,00Ch,0C3h,03Dh,00Ch,0C3h,03Dh,00Ch,001h,0C2h,002h  ;0B30h
4295   3636 0CC33D0CC33D0C01C202
4296   3640 CDAF09C3050D    .DB 0CDh,0AFh,009h,0C3h,005h,00Dh,02Ah,080h,01Fh,04Dh,0CDh,0E6h,007h,0C3h,005h,00Dh  ;0B40h
4296   3646 2A801F4DCDE607C3050D
4297   3650 2103003680C3    .DB 021h,003h,000h,036h,080h,0C3h,071h,00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,0C0h  ;0B50h
4297   3656 710CC3050D21030036C0
4298   3660 C3710CC3050D    .DB 0C3h,071h,00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,080h,0C3h,071h,00Ch,0C3h,005h  ;0B60h
4298   3666 2103003680C3710CC305
4299   3670 0D2A801F2600    .DB 00Dh,02Ah,080h,01Fh,026h,000h,0EBh,00Eh,005h,0CDh,005h,000h,0C3h,005h,00Dh,021h  ;0B70h
4299   3676 EB0E05CD0500C3050D21
4300   3680 03003610C3A0    .DB 003h,000h,036h,010h,0C3h,0A0h,00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,020h,0C3h  ;0B80h
4300   3686 0CC3050D2103003620C3
4301   3690 A00CC3050D21    .DB 0A0h,00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,030h,0C3h,0A0h,00Ch,0C3h,005h,00Dh  ;0B90h
4301   3696 03003630C3A00CC3050D
4302   36A0 2A801F2600EB    .DB 02Ah,080h,01Fh,026h,000h,0EBh,00Eh,004h,0CDh,005h,000h,0C3h,005h,00Dh,021h,003h  ;0BA0h
4302   36A6 0E04CD0500C3050D2103
4303   36B0 003600C3CF0C    .DB 000h,036h,000h,0C3h,0CFh,00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,001h,0C3h,0CFh  ;0BB0h
4303   36B6 C3050D2103003601C3CF
4304   36C0 0CC3050D2103    .DB 00Ch,0C3h,005h,00Dh,021h,003h,000h,036h,003h,0C3h,0CFh,00Ch,0C3h,005h,00Dh,02Ah  ;0BC0h
4304   36C6 003603C3CF0CC3050D2A
4305   36D0 801F2600EB0E    .DB 080h,01Fh,026h,000h,0EBh,00Eh,002h,0CDh,005h,000h,0C3h,005h,00Dh,00Ah,00Ch,02Eh  ;0BD0h
4305   36D6 02CD0500C3050D0A0C2E
4306   36E0 0C310C340C37    .DB 00Ch,031h,00Ch,034h,00Ch,037h,00Ch,03Ah,00Ch,03Dh,00Ch,046h,00Ch,050h,00Ch,05Bh  ;0BE0h
4306   36E6 0C3A0C3D0C460C500C5B
4307   36F0 0C660C710C7F    .DB 00Ch,066h,00Ch,071h,00Ch,07Fh,00Ch,08Ah,00Ch,095h,00Ch,0A0h,00Ch,0AEh,00Ch,0B9h  ;0BF0h
4307   36F6 0C8A0C950CA00CAE0CB9
4308   3700 0CC40CCF0C3A    .DB 00Ch,0C4h,00Ch,0CFh,00Ch,03Ah,081h,01Fh,032h,003h,000h,0C9h,021h,082h,01Fh,071h  ;0C00h
4308   3706 811F320300C921821F71
4309   3710 3A821FFE09CA    .DB 03Ah,082h,01Fh,0FEh,009h,0CAh,022h,00Dh,02Ah,082h,01Fh,04Dh,0CDh,0D0h,00Bh,0C3h  ;0C10h
4309   3716 220D2A821F4DCDD00BC3
4310   3720 6E0D3A631FFE    .DB 06Eh,00Dh,03Ah,063h,01Fh,0FEh,000h,0C2h,034h,00Dh,02Ah,082h,01Fh,04Dh,0CDh,0D0h  ;0C20h
4310   3726 00C2340D2A821F4DCDD0
4311   3730 0BC36E0D3AF3    .DB 00Bh,0C3h,06Eh,00Dh,03Ah,0F3h,01Dh,032h,083h,01Fh,021h,063h,01Fh,03Ah,083h,01Fh  ;0C30h
4311   3736 1D32831F21631F3A831F
4312   3740 BEDA510D2163    .DB 0BEh,0DAh,051h,00Dh,021h,063h,01Fh,03Ah,083h,01Fh,096h,032h,083h,01Fh,0C3h,03Ah  ;0C40h
4312   3746 1F3A831F9632831FC33A
4313   3750 0D21831F3A63    .DB 00Dh,021h,083h,01Fh,03Ah,063h,01Fh,096h,077h,03Eh,000h,021h,083h,01Fh,0BEh,0D2h  ;0C50h
4313   3756 1F96773E0021831FBED2
4314   3760 6E0D21831F35    .DB 06Eh,00Dh,021h,083h,01Fh,035h,00Eh,020h,0CDh,0D0h,00Bh,0C3h,059h,00Dh,03Ah,082h  ;0C60h
4314   3766 0E20CDD00BC3590D3A82
4315   3770 1FFE0DC27B0D    .DB 01Fh,0FEh,00Dh,0C2h,07Bh,00Dh,021h,0F3h,01Dh,036h,000h,0C9h,021h,084h,01Fh,071h  ;0C70h
4315   3776 21F31D3600C921841F71
4316   3780 3A841FD600D6    .DB 03Ah,084h,01Fh,0D6h,000h,0D6h,001h,09Fh,021h,06Ch,01Fh,0A6h,077h,01Fh,0D2h,099h  ;0C80h
4316   3786 019F216C1FA6771FD299
4317   3790 0D0E20CD0C0D    .DB 00Dh,00Eh,020h,0CDh,00Ch,00Dh,0C3h,0A2h,00Dh,03Ah,084h,01Fh,0C6h,030h,04Fh,0CDh  ;0C90h
4317   3796 C3A20D3A841FC6304FCD
4318   37A0 0C0DC921851F    .DB 00Ch,00Dh,0C9h,021h,085h,01Fh,071h,03Ah,085h,01Fh,0E6h,0F8h,01Fh,01Fh,01Fh,01Fh  ;0CA0h
4318   37A6 713A851FE6F81F1F1F1F
4319   37B0 4FCD7C0D3A85    .DB 04Fh,0CDh,07Ch,00Dh,03Ah,085h,01Fh,0E6h,00Fh,04Fh,0CDh,07Ch,00Dh,0C9h,021h,086h  ;0CB0h
4319   37B6 1FE60F4FCD7C0DC92186
4320   37C0 1F36013A5D1F    .DB 01Fh,036h,001h,03Ah,05Dh,01Fh,0D6h,001h,0D6h,001h,09Fh,032h,06Ch,01Fh,03Ah,06Fh  ;0CC0h
4320   37C6 D601D6019F326C1F3A6F
4321   37D0 1F8627326F1F    .DB 01Fh,086h,027h,032h,06Fh,01Fh,03Ah,06Eh,01Fh,0CEh,000h,027h,032h,06Eh,01Fh,03Ah  ;0CD0h
4321   37D6 3A6E1FCE0027326E1F3A
4322   37E0 6D1FCE002732    .DB 06Dh,01Fh,0CEh,000h,027h,032h,06Dh,01Fh,02Ah,06Dh,01Fh,04Dh,0CDh,0A3h,00Dh,02Ah  ;0CE0h
4322   37E6 6D1F2A6D1F4DCDA30D2A
4323   37F0 6E1F4DCDA30D    .DB 06Eh,01Fh,04Dh,0CDh,0A3h,00Dh,02Ah,06Fh,01Fh,04Dh,0CDh,0A3h,00Dh,03Ah,05Dh,01Fh  ;0CF0h
4323   37F6 2A6F1F4DCDA30D3A5D1F
4324   3800 FE01C2120E0E    .DB 0FEh,001h,0C2h,012h,00Eh,00Eh,03Ah,0CDh,00Ch,00Dh,00Eh,020h,0CDh,00Ch,00Dh,0C3h  ;0D00h
4324   3806 3ACD0C0D0E20CD0C0DC3
4325   3810 170E0E09CD0C    .DB 017h,00Eh,00Eh,009h,0CDh,00Ch,00Dh,0C9h,02Ah,0A1h,01Eh,07Dh,0E6h,07Fh,032h,089h  ;0D10h
4325   3816 0DC92AA11E7DE67F3289
4326   3820 1F1180FFCD44    .DB 01Fh,011h,080h,0FFh,0CDh,044h,01Dh,022h,087h,01Fh,0CDh,0C8h,00Ah,02Ah,087h,01Fh  ;0D20h
4326   3826 1D22871FCDC80A2A871F
4327   3830 01CA1F09E52A    .DB 001h,0CAh,01Fh,009h,0E5h,02Ah,089h,01Fh,0EBh,0CDh,018h,00Ah,02Ah,089h,01Fh,026h  ;0D30h
4327   3836 891FEBCD180A2A891F26
4328   3840 0022A11EC921    .DB 000h,022h,0A1h,01Eh,0C9h,021h,08Ah,01Fh,071h,03Ah,055h,01Fh,01Fh,0D2h,059h,00Eh  ;0D40h
4328   3846 8A1F713A551F1FD2590E
4329   3850 3A8A1FFE0CC2    .DB 03Ah,08Ah,01Fh,0FEh,00Ch,0C2h,059h,00Eh,0C9h,03Ah,0A6h,01Eh,01Fh,0D2h,0A9h,00Eh  ;0D50h
4329   3856 590EC93AA61E1FD2A90E
4330   3860 3A8A1FFE0CCA    .DB 03Ah,08Ah,01Fh,0FEh,00Ch,0CAh,0A9h,00Eh,03Ah,05Fh,01Fh,032h,08Bh,01Fh,0FEh,000h  ;0D60h
4330   3866 A90E3A5F1F328B1FFE00
4331   3870 CA980E3A8B1F    .DB 0CAh,098h,00Eh,03Ah,08Bh,01Fh,0FEh,001h,0C2h,080h,00Eh,021h,08Bh,01Fh,036h,03Ch  ;0D70h
4331   3876 FE01C2800E218B1F363C
4332   3880 3AF41D3C32F4    .DB 03Ah,0F4h,01Dh,03Ch,032h,0F4h,01Dh,021h,08Bh,01Fh,0BEh,0DAh,098h,00Eh,021h,0F4h  ;0D80h
4332   3886 1D218B1FBEDA980E21F4
4333   3890 1D36000E0CCD    .DB 01Dh,036h,000h,00Eh,00Ch,0CDh,00Ch,00Dh,03Eh,000h,021h,05Dh,01Fh,0BEh,0D2h,0A4h  ;0D90h
4333   3896 0C0D3E00215D1FBED2A4
4334   38A0 0ECDBE0D21A6    .DB 00Eh,0CDh,0BEh,00Dh,021h,0A6h,01Eh,036h,000h,03Ah,051h,01Fh,01Fh,0D2h,0CCh,00Eh  ;0DA0h
4334   38A6 1E36003A511F1FD2CC0E
4335   38B0 3A8A1FD613D6    .DB 03Ah,08Ah,01Fh,0D6h,013h,0D6h,001h,09Fh,0F5h,03Ah,0A3h,01Eh,0D6h,000h,0D6h,001h  ;0DB0h
4335   38B6 019FF53AA31ED600D601
4336   38C0 9FC148A11FD2    .DB 09Fh,0C1h,048h,0A1h,01Fh,0D2h,0CCh,00Eh,0CDh,018h,00Eh,0C9h,03Ah,08Ah,01Fh,0FEh  ;0DC0h
4336   38C6 CC0ECD180EC93A8A1FFE
4337   38D0 0CC2D90E21F4    .DB 00Ch,0C2h,0D9h,00Eh,021h,0F4h,01Dh,036h,000h,02Ah,08Ah,01Fh,04Dh,0CDh,00Ch,00Dh  ;0DD0h
4337   38D6 1D36002A8A1F4DCD0C0D
4338   38E0 3A8A1FFE0AC2    .DB 03Ah,08Ah,01Fh,0FEh,00Ah,0C2h,0EDh,00Eh,021h,0A6h,01Eh,036h,001h,0C9h,021h,08Ch  ;0DE0h
4338   38E6 ED0E21A61E3601C9218C
4339   38F0 1F713A8C1FD6    .DB 01Fh,071h,03Ah,08Ch,01Fh,0D6h,061h,09Fh,02Fh,0F5h,03Eh,07Ah,021h,08Ch,01Fh,096h  ;0DF0h
4339   38F6 619F2FF53E7A218C1F96
4340   3900 9F2FC148A11F    .DB 09Fh,02Fh,0C1h,048h,0A1h,01Fh,0D2h,011h,00Fh,03Ah,08Ch,01Fh,0E6h,05Fh,032h,08Ch  ;0E00h
4340   3906 D2110F3A8C1FE65F328C
4341   3910 1F3A8C1FC921    .DB 01Fh,03Ah,08Ch,01Fh,0C9h,021h,08Dh,01Fh,071h,03Ah,08Dh,01Fh,0D6h,041h,09Fh,02Fh  ;0E10h
4341   3916 8D1F713A8D1FD6419F2F
4342   3920 F53E5A218D1F    .DB 0F5h,03Eh,05Ah,021h,08Dh,01Fh,096h,09Fh,02Fh,0C1h,048h,0A1h,01Fh,0D2h,038h,00Fh  ;0E20h
4342   3926 969F2FC148A11FD2380F
4343   3930 3A8D1FF62032    .DB 03Ah,08Dh,01Fh,0F6h,020h,032h,08Dh,01Fh,03Ah,08Dh,01Fh,0C9h,03Ah,0A4h,01Eh,03Dh  ;0E30h
4343   3936 8D1F3A8D1FC93AA41E3D
4344   3940 4F3E05B9DA6D    .DB 04Fh,03Eh,005h,0B9h,0DAh,06Dh,00Fh,03Ah,057h,01Fh,021h,051h,01Fh,0B6h,0F5h,0CDh  ;0E40h
4344   3946 0F3A571F21511FB6F5CD
4345   3950 7D09C148A11F    .DB 07Dh,009h,0C1h,048h,0A1h,01Fh,0D2h,06Dh,00Fh,0CDh,013h,008h,0FEh,01Ah,0C2h,064h  ;0E50h
4345   3956 D26D0FCD1308FE1AC264
4346   3960 0F3E1AC901D7    .DB 00Fh,03Eh,01Ah,0C9h,001h,0D7h,002h,0CDh,039h,008h,03Eh,013h,0C9h,021h,090h,01Fh  ;0E60h
4346   3966 02CD39083E13C921901F
4347   3970 36013A030032    .DB 036h,001h,03Ah,003h,000h,032h,08Eh,01Fh,02Ah,0A4h,01Eh,04Dh,006h,000h,021h,045h  ;0E70h
4347   3976 8E1F2AA41E4D06002145
4348   3980 1009095E2356    .DB 010h,009h,009h,05Eh,023h,056h,0EBh,0E9h,001h,0FDh,01Dh,011h,09Dh,01Eh,0CDh,08Eh  ;0E80h
4348   3986 EBE901FD1D119D1ECD8E
4349   3990 1DDA970FCD4F    .DB 01Dh,0DAh,097h,00Fh,0CDh,04Fh,00Ah,02Ah,09Dh,01Eh,0EBh,02Ah,001h,01Eh,019h,07Eh  ;0E90h
4349   3996 0A2A9D1EEB2A011E197E
4350   39A0 328F1F2A9D1E    .DB 032h,08Fh,01Fh,02Ah,09Dh,01Eh,023h,022h,09Dh,01Eh,0C3h,06Dh,010h,0CDh,0F3h,007h  ;0EA0h
4350   39A6 23229D1EC36D10CDF307
4351   39B0 328F1FC36D10    .DB 032h,08Fh,01Fh,0C3h,06Dh,010h,0CDh,096h,009h,032h,08Fh,01Fh,0C3h,06Dh,010h,021h  ;0EB0h
4351   39B6 CD9609328F1FC36D1021
4352   39C0 03003604C3E0    .DB 003h,000h,036h,004h,0C3h,0E0h,00Fh,0C3h,06Dh,010h,021h,003h,000h,036h,008h,0C3h  ;0EC0h
4352   39C6 0FC36D102103003608C3
4353   39D0 E00FC36D1021    .DB 0E0h,00Fh,0C3h,06Dh,010h,021h,003h,000h,036h,00Ch,0C3h,0E0h,00Fh,0C3h,06Dh,010h  ;0ED0h
4353   39D6 0300360CC3E00FC36D10
4354   39E0 1100000E03CD    .DB 011h,000h,000h,00Eh,003h,0CDh,005h,000h,0E6h,07Fh,032h,08Fh,01Fh,0C3h,06Dh,010h  ;0EE0h
4354   39E6 0500E67F328F1FC36D10
4355   39F0 C30810C30810    .DB 0C3h,008h,010h,0C3h,008h,010h,0C3h,008h,010h,0C3h,008h,010h,0C3h,008h,010h,0C3h  ;0EF0h
4355   39F6 C30810C30810C30810C3
4356   3A00 0810C30810C3    .DB 008h,010h,0C3h,008h,010h,0C3h,008h,010h,001h,0E9h,002h,0CDh,0AFh,009h,0C3h,06Dh  ;0F00h
4356   3A06 081001E902CDAF09C36D
4357   3A10 102103003600    .DB 010h,021h,003h,000h,036h,000h,0C3h,032h,010h,0C3h,06Dh,010h,021h,003h,000h,036h  ;0F10h
4357   3A16 C33210C36D1021030036
4358   3A20 01C33210C36D    .DB 001h,0C3h,032h,010h,0C3h,06Dh,010h,021h,003h,000h,036h,003h,0C3h,032h,010h,0C3h  ;0F20h
4358   3A26 102103003603C33210C3
4359   3A30 6D1021901F36    .DB 06Dh,010h,021h,090h,01Fh,036h,000h,011h,000h,000h,00Eh,001h,0CDh,005h,000h,032h  ;0F30h
4359   3A36 001100000E01CD050032
4360   3A40 8F1FC36D1088    .DB 08Fh,01Fh,0C3h,06Dh,010h,088h,00Fh,0ADh,00Fh,0B6h,00Fh,0BFh,00Fh,0CAh,00Fh,0D5h  ;0F40h
4360   3A46 0FAD0FB60FBF0FCA0FD5
4361   3A50 0FE00FF00FF3    .DB 00Fh,0E0h,00Fh,0F0h,00Fh,0F3h,00Fh,0F6h,00Fh,0F9h,00Fh,0FCh,00Fh,0FFh,00Fh,002h  ;0F50h
4361   3A56 0FF60FF90FFC0FFF0F02
4362   3A60 100510081011    .DB 010h,005h,010h,008h,010h,011h,010h,01Ch,010h,027h,010h,032h,010h,03Ah,08Eh,01Fh  ;0F60h
4362   3A66 101C10271032103A8E1F
4363   3A70 3203003A541F    .DB 032h,003h,000h,03Ah,054h,01Fh,01Fh,0D2h,092h,010h,03Ah,0A3h,01Eh,032h,08Eh,01Fh  ;0F70h
4363   3A76 1FD292103AA31E328E1F
4364   3A80 21A31E36132A    .DB 021h,0A3h,01Eh,036h,013h,02Ah,08Fh,01Fh,04Dh,0CDh,045h,00Eh,03Ah,08Eh,01Fh,032h  ;0F80h
4364   3A86 8F1F4DCD450E3A8E1F32
4365   3A90 A31E3A901F1F    .DB 0A3h,01Eh,03Ah,090h,01Fh,01Fh,0D2h,0DCh,010h,03Ah,004h,01Eh,01Fh,0D2h,0B2h,010h  ;0F90h
4365   3A96 D2DC103A041E1FD2B210
4366   3AA0 3AA71E3C32A7    .DB 03Ah,0A7h,01Eh,03Ch,032h,0A7h,01Eh,0D6h,000h,0D6h,001h,09Fh,032h,090h,01Fh,0C3h  ;0FA0h
4366   3AA6 1ED600D6019F32901FC3
4367   3AB0 BD103A8F1FD6    .DB 0BDh,010h,03Ah,08Fh,01Fh,0D6h,00Ah,0D6h,001h,09Fh,032h,090h,01Fh,03Ah,090h,01Fh  ;0FB0h
4367   3AB6 0AD6019F32901F3A901F
4368   3AC0 1FD2DC10CD7D    .DB 01Fh,0D2h,0DCh,010h,0CDh,07Dh,009h,01Fh,0D2h,0DCh,010h,0CDh,013h,008h,0FEh,01Ah  ;0FC0h
4368   3AC6 091FD2DC10CD1308FE1A
4369   3AD0 C2D6103E1AC9    .DB 0C2h,0D6h,010h,03Eh,01Ah,0C9h,001h,000h,003h,0CDh,0AFh,009h,03Ah,069h,01Fh,01Fh  ;0FD0h
4369   3AD6 010003CDAF093A691F1F
4370   3AE0 D2EB103A8F1F    .DB 0D2h,0EBh,010h,03Ah,08Fh,01Fh,0E6h,07Fh,032h,08Fh,01Fh,03Ah,064h,01Fh,01Fh,0D2h  ;0FE0h
4370   3AE6 E67F328F1F3A641F1FD2
4371   3AF0 FA102A8F1F4D    .DB 0FAh,010h,02Ah,08Fh,01Fh,04Dh,0CDh,0EEh,00Eh,0C9h,03Ah,05Bh,01Fh,01Fh,0D2h,009h  ;0FF0h
4371   3AF6 CDEE0EC93A5B1F1FD209
4372   3B00             											;BLOCK E2
4373   3B00 112A8F1F4DCD    .DB 011h,02Ah,08Fh,01Fh,04Dh,0CDh,015h,00Fh,0C9h,03Ah,08Fh,01Fh,0C9h,03Eh,000h,021h  ;1000h
4373   3B06 150FC93A8F1FC93E0021
4374   3B10 FA1DBED22811    .DB 0FAh,01Dh,0BEh,0D2h,028h,011h,03Ah,0FAh,01Dh,03Dh,032h,0FAh,01Dh,0FEh,001h,0C2h  ;1010h
4374   3B16 3AFA1D3D32FA1DFE01C2
4375   3B20 25113E0AC93E    .DB 025h,011h,03Eh,00Ah,0C9h,03Eh,01Ah,0C9h,03Eh,000h,021h,0F8h,01Dh,0BEh,0D2h,046h  ;1020h
4375   3B26 1AC93E0021F81DBED246
4376   3B30 1121F81D352B    .DB 011h,021h,0F8h,01Dh,035h,02Bh,04Eh,006h,000h,021h,0CDh,01Eh,009h,07Eh,032h,091h  ;1030h
4376   3B36 4E060021CD1E097E3291
4377   3B40 1F21F71D34C9    .DB 01Fh,021h,0F7h,01Dh,034h,0C9h,0CDh,03Ch,00Fh,032h,091h,01Fh,0FEh,01Ah,0C2h,054h  ;1040h
4377   3B46 CD3C0F32911FFE1AC254
4378   3B50 113E1AC93E00    .DB 011h,03Eh,01Ah,0C9h,03Eh,000h,021h,062h,01Fh,0BEh,0D2h,07Dh,011h,02Ah,062h,01Fh  ;1050h
4378   3B56 21621FBED27D112A621F
4379   3B60 4DCDAD111FD2    .DB 04Dh,0CDh,0ADh,011h,01Fh,0D2h,07Ah,011h,03Ah,062h,01Fh,032h,0F7h,01Dh,021h,062h  ;1060h
4379   3B66 7A113A621F32F71D2162
4380   3B70 1F36003AF91D    .DB 01Fh,036h,000h,03Ah,0F9h,01Dh,03Ch,032h,0F8h,01Dh,0C3h,0A9h,011h,03Eh,000h,021h  ;1070h
4380   3B76 3C32F81DC3A9113E0021
4381   3B80 601FBED2A511    .DB 060h,01Fh,0BEh,0D2h,0A5h,011h,02Ah,060h,01Fh,04Dh,0CDh,0ADh,011h,01Fh,0D2h,09Eh  ;1080h
4381   3B86 2A601F4DCDAD111FD29E
4382   3B90 1121601F3600    .DB 011h,021h,060h,01Fh,036h,000h,021h,0FAh,01Dh,036h,002h,03Eh,00Dh,0C9h,03Ah,091h  ;1090h
4382   3B96 21FA1D36023E0DC93A91
4383   3BA0 1FC9C3A9113A    .DB 01Fh,0C9h,0C3h,0A9h,011h,03Ah,091h,01Fh,0C9h,0C3h,028h,011h,0C9h,021h,092h,01Fh  ;10A0h
4383   3BA6 911FC9C32811C921921F
4384   3BB0 713AF91D2192    .DB 071h,03Ah,0F9h,01Dh,021h,092h,01Fh,086h,077h,04Fh,006h,000h,021h,0CDh,01Eh,009h  ;10B0h
4384   3BB6 1F86774F060021CD1E09
4385   3BC0 7E32931FFE1A    .DB 07Eh,032h,093h,01Fh,0FEh,01Ah,0C2h,0D9h,011h,02Ah,092h,01Fh,026h,000h,001h,0CDh  ;10C0h
4385   3BC6 C2D9112A921F260001CD
4386   3BD0 1E093A911F77    .DB 01Eh,009h,03Ah,091h,01Fh,077h,03Eh,001h,0C9h,021h,091h,01Fh,03Ah,093h,01Fh,0BEh  ;10D0h
4386   3BD6 3E01C921911F3A931FBE
4387   3BE0 C2EA1121F91D    .DB 0C2h,0EAh,011h,021h,0F9h,01Dh,034h,0C3h,0EFh,011h,021h,0F9h,01Dh,036h,000h,03Eh  ;10E0h
4387   3BE6 34C3EF1121F91D36003E
4388   3BF0 00C93A4E1F3C    .DB 000h,0C9h,03Ah,04Eh,01Fh,03Ch,032h,04Eh,01Fh,021h,0CCh,01Eh,0BEh,0DAh,003h,012h  ;10F0h
4388   3BF6 324E1F21CC1EBEDA0312
4389   3C00 3E0DC92A4E1F    .DB 03Eh,00Dh,0C9h,02Ah,04Eh,01Fh,026h,000h,001h,0CDh,01Eh,009h,04Eh,0CDh,0EEh,00Eh  ;1100h
4389   3C06 260001CD1E094ECDEE0E
4390   3C10 C9CDF21132A8    .DB 0C9h,0CDh,0F2h,011h,032h,0A8h,01Eh,0FEh,020h,0C2h,01Fh,012h,0C3h,011h,012h,0C9h  ;1110h
4390   3C16 1EFE20C21F12C31112C9
4391   3C20 21961F702B71    .DB 021h,096h,01Fh,070h,02Bh,071h,021h,0F5h,01Dh,036h,000h,021h,0A9h,01Eh,036h,000h  ;1120h
4391   3C26 21F51D360021A91E3600
4392   3C30 2B362021AA1E    .DB 02Bh,036h,020h,021h,0AAh,01Eh,036h,000h,03Ah,0AAh,01Eh,0FEh,020h,0D2h,053h,012h  ;1130h
4392   3C36 36003AAA1EFE20D25312
4393   3C40 3AAA1EFE0BC2    .DB 03Ah,0AAh,01Eh,0FEh,00Bh,0C2h,04Dh,012h,021h,0A8h,01Eh,036h,000h,0CDh,067h,014h  ;1140h
4393   3C46 4D1221A81E3600CD6714
4394   3C50 C33812CD1112    .DB 0C3h,038h,012h,0CDh,011h,012h,03Ah,04Eh,01Fh,032h,04Dh,01Fh,02Ah,0A8h,01Eh,04Dh  ;1150h
4394   3C56 3A4E1F324D1F2AA81E4D
4395   3C60 CD38141FD270    .DB 0CDh,038h,014h,01Fh,0D2h,070h,012h,0CDh,0C1h,015h,021h,0A9h,01Eh,036h,001h,0C9h  ;1160h
4395   3C66 12CDC11521A91E3601C9
4396   3C70 21941F360021    .DB 021h,094h,01Fh,036h,000h,021h,097h,01Fh,036h,000h,03Eh,019h,021h,097h,01Fh,0BEh  ;1170h
4396   3C76 971F36003E1921971FBE
4397   3C80 DA95122A971F    .DB 0DAh,095h,012h,02Ah,097h,01Fh,026h,000h,001h,050h,01Fh,009h,036h,000h,021h,097h  ;1180h
4397   3C86 260001501F0936002197
4398   3C90 1F34C27A1221    .DB 01Fh,034h,0C2h,07Ah,012h,021h,0F6h,01Dh,036h,000h,021h,0F8h,01Dh,036h,000h,023h  ;1190h
4398   3C96 F61D360021F81D360023
4399   3CA0 360023360021    .DB 036h,000h,023h,036h,000h,021h,0AAh,01Eh,036h,000h,02Ah,0A8h,01Eh,04Dh,0CDh,038h  ;11A0h
4399   3CA6 AA1E36002AA81E4DCD38
4400   3CB0 141FDADA123A    .DB 014h,01Fh,0DAh,0DAh,012h,03Ah,0AAh,01Eh,0FEh,008h,0DAh,0BEh,012h,0C9h,03Ah,0A8h  ;11B0h
4400   3CB6 AA1EFE08DABE12C93AA8
4401   3CC0 1EFE2AC2CE12    .DB 01Eh,0FEh,02Ah,0C2h,0CEh,012h,00Eh,008h,0CDh,087h,014h,0C3h,0D1h,012h,0CDh,067h  ;11C0h
4401   3CC6 0E08CD8714C3D112CD67
4402   3CD0 14CDF21132A8    .DB 014h,0CDh,0F2h,011h,032h,0A8h,01Eh,0C3h,0AAh,012h,03Ah,0A8h,01Eh,0FEh,03Ah,0C2h  ;11D0h
4402   3CD6 1EC3AA123AA81EFE3AC2
4403   3CE0 BF133A941FFE    .DB 0BFh,013h,03Ah,094h,01Fh,0FEh,000h,0CAh,0EBh,012h,0C9h,03Ah,0AAh,01Eh,0FEh,001h  ;11E0h
4403   3CE6 00CAEB12C93AAA1EFE01
4404   3CF0 C22C130E01CD    .DB 0C2h,02Ch,013h,00Eh,001h,0CDh,0A1h,014h,0D6h,041h,03Ch,032h,094h,01Fh,04Fh,03Eh  ;11F0h
4404   3CF6 A114D6413C32941F4F3E
4405   3D00 1AB9D20613C9    .DB 01Ah,0B9h,0D2h,006h,013h,0C9h,0CDh,011h,012h,02Ah,0A8h,01Eh,04Dh,0CDh,038h,014h  ;1200h
4405   3D06 CD11122AA81E4DCD3814
4406   3D10 1FD229133AA8    .DB 01Fh,0D2h,029h,013h,03Ah,0A8h,01Eh,0FEh,05Bh,0C2h,01Fh,013h,0CDh,0B1h,014h,021h  ;1210h
4406   3D16 1EFE5BC21F13CDB11421
4407   3D20 4E1F3521A91E    .DB 04Eh,01Fh,035h,021h,0A9h,01Eh,036h,004h,0C9h,0C3h,0B1h,013h,03Ah,0AAh,01Eh,0FEh  ;1220h
4407   3D26 3604C9C3B1133AAA1EFE
4408   3D30 03CA3513C921    .DB 003h,0CAh,035h,013h,0C9h,021h,0A1h,01Fh,036h,0FFh,023h,036h,000h,03Eh,014h,021h  ;1230h
4408   3D36 A11F36FF2336003E1421
4409   3D40 A21FBEDAB013    .DB 0A2h,01Fh,0BEh,0DAh,0B0h,013h,021h,0A0h,01Fh,036h,000h,03Ah,0A0h,01Fh,03Ch,032h  ;1240h
4409   3D46 21A01F36003AA01F3C32
4410   3D50 A01F4F3E0391    .DB 0A0h,01Fh,04Fh,03Eh,003h,091h,09Fh,02Fh,0F5h,03Ah,0A0h,01Fh,021h,0A1h,01Fh,086h  ;1250h
4410   3D56 9F2FF53AA01F21A11F86
4411   3D60 4F0600215402    .DB 04Fh,006h,000h,021h,054h,002h,009h,0E5h,02Ah,0A0h,01Fh,04Dh,0CDh,0A1h,014h,0E1h  ;1260h
4411   3D66 09E52AA01F4DCDA114E1
4412   3D70 96D6019FC148    .DB 096h,0D6h,001h,09Fh,0C1h,048h,0A1h,01Fh,0D2h,07Eh,013h,0C3h,04Bh,013h,03Ah,0A0h  ;1270h
4412   3D76 A11FD27E13C34B133AA0
4413   3D80 1FFE04C2A113    .DB 01Fh,0FEh,004h,0C2h,0A1h,013h,021h,0A9h,01Eh,036h,003h,0CDh,0F2h,011h,0FEh,05Bh  ;1280h
4413   3D86 21A91E3603CDF211FE5B
4414   3D90 C29613CDB114    .DB 0C2h,096h,013h,0CDh,0B1h,014h,021h,04Eh,01Fh,035h,03Ah,0A2h,01Fh,032h,0A8h,01Eh  ;1290h
4414   3D96 214E1F353AA21F32A81E
4415   3DA0 C93AA11FC603    .DB 0C9h,03Ah,0A1h,01Fh,0C6h,003h,032h,0A1h,01Fh,021h,0A2h,01Fh,034h,0C2h,03Dh,013h  ;12A0h
4415   3DA6 32A11F21A21F34C23D13
4416   3DB0 C93AA81EFE5B    .DB 0C9h,03Ah,0A8h,01Eh,0FEh,05Bh,0C2h,0BCh,013h,0CDh,0B1h,014h,0C3h,034h,014h,03Ah  ;12B0h
4416   3DB6 C2BC13CDB114C334143A
4417   3DC0 AA1EFE00C2C8    .DB 0AAh,01Eh,0FEh,000h,0C2h,0C8h,013h,0C9h,021h,0AAh,01Eh,036h,008h,03Ah,0A8h,01Eh  ;12C0h
4417   3DC6 13C921AA1E36083AA81E
4418   3DD0 FE2EC20214CD    .DB 0FEh,02Eh,0C2h,002h,014h,0CDh,0F2h,011h,032h,0A8h,01Eh,04Fh,0CDh,038h,014h,01Fh  ;12D0h
4418   3DD6 F21132A81E4FCD38141F
4419   3DE0 DA02143AAA1E    .DB 0DAh,002h,014h,03Ah,0AAh,01Eh,0FEh,00Bh,0DAh,0ECh,013h,0C9h,03Ah,0A8h,01Eh,0FEh  ;12E0h
4419   3DE6 FE0BDAEC13C93AA81EFE
4420   3DF0 2AC2FC130E0B    .DB 02Ah,0C2h,0FCh,013h,00Eh,00Bh,0CDh,087h,014h,0C3h,0FFh,013h,0CDh,067h,014h,0C3h  ;12F0h
4420   3DF6 CD8714C3FF13CD6714C3
4421   3E00 D5133AA81EFE    .DB 0D5h,013h,03Ah,0A8h,01Eh,0FEh,05Bh,0C2h,00Dh,014h,0CDh,0B1h,014h,021h,04Eh,01Fh  ;1300h
4421   3E06 5BC20D14CDB114214E1F
4422   3E10 3521A91E3602    .DB 035h,021h,0A9h,01Eh,036h,002h,03Ah,094h,01Fh,0FEh,000h,0C2h,025h,014h,03Ah,0FCh  ;1310h
4422   3E16 3A941FFE00C225143AFC
4423   3E20 1D3C32941F2A    .DB 01Dh,03Ch,032h,094h,01Fh,02Ah,095h,01Fh,036h,000h,001h,020h,000h,02Ah,095h,01Fh  ;1320h
4423   3E26 951F36000120002A951F
4424   3E30 093600C9C3A5    .DB 009h,036h,000h,0C9h,0C3h,0A5h,012h,0C9h,021h,09Ah,01Fh,071h,021h,09Bh,01Fh,036h  ;1330h
4424   3E36 12C9219A1F71219B1F36
4425   3E40 003E0A219B1F    .DB 000h,03Eh,00Ah,021h,09Bh,01Fh,0BEh,0DAh,064h,014h,02Ah,09Bh,01Fh,026h,000h,001h  ;1340h
4425   3E46 BEDA64142A9B1F260001
4426   3E50 4902093A9A1F    .DB 049h,002h,009h,03Ah,09Ah,01Fh,0BEh,0C2h,05Dh,014h,03Eh,001h,0C9h,021h,09Bh,01Fh  ;1350h
4426   3E56 BEC25D143E01C9219B1F
4427   3E60 34C241143E00    .DB 034h,0C2h,041h,014h,03Eh,000h,0C9h,03Ah,0AAh,01Eh,03Ch,032h,0AAh,01Eh,04Fh,006h  ;1360h
4427   3E66 C93AAA1E3C32AA1E4F06
4428   3E70 002A951F093A    .DB 000h,02Ah,095h,01Fh,009h,03Ah,0A8h,01Eh,077h,03Ah,0A8h,01Eh,0FEh,03Fh,0C2h,086h  ;1370h
4428   3E76 A81E773AA81EFE3FC286
4429   3E80 1421F51D3601    .DB 014h,021h,0F5h,01Dh,036h,001h,0C9h,021h,09Ch,01Fh,071h,021h,0A8h,01Eh,036h,03Fh  ;1380h
4429   3E86 C9219C1F7121A81E363F
4430   3E90 219C1F3AAA1E    .DB 021h,09Ch,01Fh,03Ah,0AAh,01Eh,0BEh,0D2h,0A0h,014h,0CDh,067h,014h,0C3h,090h,014h  ;1390h
4430   3E96 BED2A014CD6714C39014
4431   3EA0 C9219D1F712A    .DB 0C9h,021h,09Dh,01Fh,071h,02Ah,09Dh,01Fh,026h,000h,0EBh,02Ah,095h,01Fh,019h,07Eh  ;13A0h
4431   3EA6 9D1F2600EB2A951F197E
4432   3EB0 C921F61D3601    .DB 0C9h,021h,0F6h,01Dh,036h,001h,03Ah,0C0h,01Eh,032h,0C1h,01Eh,0CDh,0F2h,011h,032h  ;13B0h
4432   3EB6 3AC01E32C11ECDF21132
4433   3EC0 A81E3AA81ED6    .DB 0A8h,01Eh,03Ah,0A8h,01Eh,0D6h,00Dh,0D6h,001h,09Fh,0F5h,03Ah,0A8h,01Eh,0D6h,05Dh  ;13C0h
4433   3EC6 0DD6019FF53AA81ED65D
4434   3ED0 D6019FC148B1    .DB 0D6h,001h,09Fh,0C1h,048h,0B1h,01Fh,0DAh,0BAh,015h,03Ah,0A8h,01Eh,0D6h,041h,032h  ;13D0h
4434   3ED6 1FDABA153AA81ED64132
4435   3EE0 9E1F4F3E19B9    .DB 09Eh,01Fh,04Fh,03Eh,019h,0B9h,0D2h,003h,015h,03Ah,0A8h,01Eh,0FEh,020h,0C2h,0FAh  ;13E0h
4435   3EE6 D203153AA81EFE20C2FA
4436   3EF0 14CDF21132A8    .DB 014h,0CDh,0F2h,011h,032h,0A8h,01Eh,0C3h,000h,015h,001h,008h,003h,0CDh,0AFh,009h  ;13F0h
4436   3EF6 1EC30015010803CDAF09
4437   3F00 C3B7153AA81E    .DB 0C3h,0B7h,015h,03Ah,0A8h,01Eh,0D6h,053h,0D6h,001h,09Fh,0F5h,03Ah,0A8h,01Eh,0D6h  ;1400h
4437   3F06 D653D6019FF53AA81ED6
4438   3F10 51D6019FC148    .DB 051h,0D6h,001h,09Fh,0C1h,048h,0B1h,01Fh,0D2h,049h,015h,03Ah,04Eh,01Fh,03Ch,032h  ;1410h
4438   3F16 B11FD249153A4E1F3C32
4439   3F20 9F1FCDF21132    .DB 09Fh,01Fh,0CDh,0F2h,011h,032h,0A8h,01Eh,0D6h,01Ah,0D6h,001h,09Fh,0F5h,03Ah,0A8h  ;1420h
4439   3F26 A81ED61AD6019FF53AA8
4440   3F30 1ED60DD6019F    .DB 01Eh,0D6h,00Dh,0D6h,001h,09Fh,0C1h,048h,0B1h,01Fh,0DAh,040h,015h,0C3h,022h,015h  ;1430h
4440   3F36 C148B11FDA4015C32215
4441   3F40 CDF21132A81E    .DB 0CDh,0F2h,011h,032h,0A8h,01Eh,0C3h,08Dh,015h,0CDh,0F2h,011h,032h,0A8h,01Eh,0D6h  ;1440h
4441   3F46 C38D15CDF21132A81ED6
4442   3F50 30329F1F4F3E    .DB 030h,032h,09Fh,01Fh,04Fh,03Eh,009h,0B9h,0D2h,063h,015h,021h,09Fh,01Fh,036h,001h  ;1450h
4442   3F56 09B9D26315219F1F3601
4443   3F60 C38D15CDF211    .DB 0C3h,08Dh,015h,0CDh,0F2h,011h,032h,0A8h,01Eh,0D6h,030h,032h,099h,01Fh,04Fh,03Eh  ;1460h
4443   3F66 32A81ED63032991F4F3E
4444   3F70 09B9DA8D152A    .DB 009h,0B9h,0DAh,08Dh,015h,02Ah,09Fh,01Fh,026h,000h,0CDh,04Fh,01Dh,0E5h,02Ah,099h  ;1470h
4444   3F76 9F1F2600CD4F1DE52A99
4445   3F80 1F2600C109EB    .DB 01Fh,026h,000h,0C1h,009h,0EBh,021h,09Fh,01Fh,073h,0C3h,063h,015h,02Ah,09Eh,01Fh  ;1480h
4445   3F86 219F1F73C363152A9E1F
4446   3F90 260001501F09    .DB 026h,000h,001h,050h,01Fh,009h,03Ah,09Fh,01Fh,077h,03Ah,09Eh,01Fh,0FEh,006h,0C2h  ;1490h
4446   3F96 3A9F1F773A9E1FFE06C2
4447   3FA0 B7153E1F219F    .DB 0B7h,015h,03Eh,01Fh,021h,09Fh,01Fh,0BEh,0D2h,0B1h,015h,001h,016h,003h,0CDh,0AFh  ;14A0h
4447   3FA6 1FBED2B115011603CDAF
4448   3FB0 093A9F1F32C1    .DB 009h,03Ah,09Fh,01Fh,032h,0C1h,01Eh,0C3h,0C2h,014h,0CDh,0F2h,011h,032h,0A8h,01Eh  ;14B0h
4448   3FB6 1EC3C214CDF21132A81E
4449   3FC0 C93AA81EFE5F    .DB 0C9h,03Ah,0A8h,01Eh,0FEh,05Fh,0C2h,0CEh,015h,021h,0A8h,01Eh,036h,03Dh,0C9h,021h  ;14C0h
4449   3FC6 C2CE1521A81E363DC921
4450   3FD0 A31F36003E27    .DB 0A3h,01Fh,036h,000h,03Eh,027h,021h,0A3h,01Fh,0BEh,0DAh,0E9h,015h,00Eh,000h,0CDh  ;14D0h
4450   3FD6 21A31FBEDAE9150E00CD
4451   3FE0 450E21A31F34    .DB 045h,00Eh,021h,0A3h,01Fh,034h,0C2h,0D4h,015h,0C9h,021h,0A9h,01Fh,070h,02Bh,071h  ;14E0h
4451   3FE6 C2D415C921A91F702B71
4452   3FF0 2AA81FE51E03    .DB 02Ah,0A8h,01Fh,0E5h,01Eh,003h,001h,030h,01Eh,0CDh,018h,00Ah,0C9h,021h,0ADh,01Fh  ;14F0h
4452   3FF6 01301ECD180AC921AD1F
4453   4000 722B732B702B    .DB 072h,02Bh,073h,02Bh,070h,02Bh,071h,02Ah,0ACh,01Fh,07Eh,0FEh,024h,0CAh,037h,016h  ;1500h
4453   4006 712AAC1F7EFE24CA3716
4454   4010 2AAC1F3E7FA6    .DB 02Ah,0ACh,01Fh,03Eh,07Fh,0A6h,02Ah,0AAh,01Fh,0F5h,03Eh,07Fh,0A6h,0C1h,048h,0B9h  ;1510h
4454   4016 2AAA1FF53E7FA6C148B9
4455   4020 CA26163E00C9    .DB 0CAh,026h,016h,03Eh,000h,0C9h,02Ah,0AAh,01Fh,023h,022h,0AAh,01Fh,02Ah,0ACh,01Fh  ;1520h
4455   4026 2AAA1F2322AA1F2AAC1F
4456   4030 2322AC1FC307    .DB 023h,022h,0ACh,01Fh,0C3h,007h,016h,03Eh,001h,0C9h,0CDh,00Dh,011h,032h,0A8h,01Eh  ;1530h
4456   4036 163E01C9CD0D1132A81E
4457   4040 3A041E1FD252    .DB 03Ah,004h,01Eh,01Fh,0D2h,052h,016h,001h,09Dh,01Eh,011h,09Fh,01Eh,0CDh,08Eh,01Dh  ;1540h
4457   4046 16019D1E119F1ECD8E1D
4458   4050 9FC93AA81ED6    .DB 09Fh,0C9h,03Ah,0A8h,01Eh,0D6h,01Ah,0D6h,001h,09Fh,0C9h,021h,0AFh,01Fh,036h,001h  ;1550h
4458   4056 1AD6019FC921AF1F3601
4459   4060 219C1E3600CD    .DB 021h,09Ch,01Eh,036h,000h,0CDh,03Dh,017h,032h,0B5h,01Fh,0FEh,03Ah,0CAh,099h,016h  ;1560h
4459   4066 3D1732B51FFE3ACA9916
4460   4070 219C1E36003A    .DB 021h,09Ch,01Eh,036h,000h,03Ah,0B5h,01Fh,0FEh,01Ah,0C2h,093h,016h,001h,048h,003h  ;1570h
4460   4076 B51FFE1AC29316014803
4461   4080 CD3908CD1308    .DB 0CDh,039h,008h,0CDh,013h,008h,0FEh,01Ah,0C2h,08Eh,016h,03Eh,001h,0C9h,021h,09Ch  ;1580h
4461   4086 FE1AC28E163E01C9219C
4462   4090 1E3600CD2D17    .DB 01Eh,036h,000h,0CDh,02Dh,017h,0C3h,065h,016h,021h,0B5h,01Fh,036h,000h,0CDh,0BBh  ;1590h
4462   4096 C3651621B51F3600CDBB
4463   40A0 1732B41FFE00    .DB 017h,032h,0B4h,01Fh,0FEh,000h,0C2h,0C7h,016h,0CDh,03Dh,017h,032h,0B4h,01Fh,0FEh  ;15A0h
4463   40A6 C2C716CD3D1732B41FFE
4464   40B0 1ACABA16CD2D    .DB 01Ah,0CAh,0BAh,016h,0CDh,02Dh,017h,0C3h,0A9h,016h,03Ah,0AFh,01Fh,01Fh,0D2h,0C4h  ;15B0h
4464   40B6 17C3A9163AAF1F1FD2C4
4465   40C0 163E01C93E02    .DB 016h,03Eh,001h,0C9h,03Eh,002h,0C9h,0CDh,0C4h,017h,022h,0B7h,01Fh,0CDh,0BBh,017h  ;15C0h
4465   40C6 C9CDC41722B71FCDBB17
4466   40D0 32B61F3AB41F    .DB 032h,0B6h,01Fh,03Ah,0B4h,01Fh,0D6h,000h,0C6h,0FFh,09Fh,021h,0AFh,01Fh,0A6h,01Fh  ;15D0h
4466   40D6 D600C6FF9F21AF1FA61F
4467   40E0 D2F01621B41F    .DB 0D2h,0F0h,016h,021h,0B4h,01Fh,035h,0CDh,0BBh,017h,032h,0B3h,01Fh,0C3h,0D3h,016h  ;15E0h
4467   40E6 35CDBB1732B31FC3D316
4468   40F0 CDAC1721B51F    .DB 0CDh,0ACh,017h,021h,0B5h,01Fh,086h,0FEh,000h,0CAh,002h,017h,001h,05Ch,003h,0CDh  ;15F0h
4468   40F6 86FE00CA0217015C03CD
4469   4100 1217CD2D173A    .DB 012h,017h,0CDh,02Dh,017h,03Ah,0AFh,01Fh,01Fh,0D2h,00Fh,017h,03Eh,000h,0C9h,03Eh  ;1600h
4469   4106 AF1F1FD20F173E00C93E
4470   4110 02C921B11F70    .DB 002h,0C9h,021h,0B1h,01Fh,070h,02Bh,071h,03Ah,0AFh,01Fh,01Fh,0D2h,02Ch,017h,021h  ;1610h
4470   4116 2B713AAF1F1FD22C1721
4471   4120 AF1F36002AB0    .DB 0AFh,01Fh,036h,000h,02Ah,0B0h,01Fh,044h,04Dh,0CDh,039h,008h,0C9h,03Ah,0AEh,01Fh  ;1620h
4471   4126 1F444DCD3908C93AAE1F
4472   4130 1FD23C1721AE    .DB 01Fh,0D2h,03Ch,017h,021h,0AEh,01Fh,036h,000h,0CDh,018h,00Eh,0C9h,03Ah,0AFh,01Fh  ;1630h
4472   4136 1F3600CD180EC93AAF1F
4473   4140 1FD27A17CD0D    .DB 01Fh,0D2h,07Ah,017h,0CDh,00Dh,011h,032h,0B2h,01Fh,0FEh,013h,0C2h,057h,017h,021h  ;1640h
4473   4146 1132B21FFE13C2571721
4474   4150 AE1F3601C344    .DB 0AEh,01Fh,036h,001h,0C3h,044h,017h,02Ah,09Ch,01Eh,026h,000h,001h,04Ch,01Eh,009h  ;1650h
4474   4156 172A9C1E2600014C1E09
4475   4160 3AB21F773A9C    .DB 03Ah,0B2h,01Fh,077h,03Ah,09Ch,01Eh,03Ch,032h,09Ch,01Eh,0FEh,04Fh,0DAh,076h,017h  ;1660h
4475   4166 1E3C329C1EFE4FDA7617
4476   4170 012A03CD1217    .DB 001h,02Ah,003h,0CDh,012h,017h,03Ah,0B2h,01Fh,0C9h,03Eh,01Ah,0C9h,0CDh,03Dh,017h  ;1670h
4476   4176 3AB21FC93E1AC9CD3D17
4477   4180 32B91FD6304F    .DB 032h,0B9h,01Fh,0D6h,030h,04Fh,03Eh,009h,0B9h,0DAh,092h,017h,03Ah,0B9h,01Fh,0D6h  ;1680h
4477   4186 3E09B9DA92173AB91FD6
4478   4190 30C93AB91FD6    .DB 030h,0C9h,03Ah,0B9h,01Fh,0D6h,041h,04Fh,03Eh,005h,0B9h,0D2h,0A4h,017h,001h,03Ah  ;1690h
4478   4196 414F3E05B9D2A417013A
4479   41A0 03CD12173AB9    .DB 003h,0CDh,012h,017h,03Ah,0B9h,01Fh,0D6h,041h,0C6h,00Ah,0C9h,0CDh,07Dh,017h,087h  ;16A0h
4479   41A6 1FD641C60AC9CD7D1787
4480   41B0 878787F5CD7D    .DB 087h,087h,087h,0F5h,0CDh,07Dh,017h,0C1h,048h,0B1h,0C9h,0CDh,0ACh,017h,021h,0B5h  ;16B0h
4480   41B6 17C148B1C9CDAC1721B5
4481   41C0 1F8677C9CDBB    .DB 01Fh,086h,077h,0C9h,0CDh,0BBh,017h,04Fh,006h,000h,060h,069h,00Eh,008h,0CDh,064h  ;16C0h
4481   41C6 174F060060690E08CD64
4482   41D0 1DE5CDBB17E1    .DB 01Dh,0E5h,0CDh,0BBh,017h,0E1h,0CDh,056h,01Dh,0C9h,0CDh,05Bh,016h,032h,0BAh,01Fh  ;16D0h
4482   41D6 CD561DC9CD5B1632BA1F
4483   41E0 4F3E01B9DA32    .DB 04Fh,03Eh,001h,0B9h,0DAh,032h,018h,03Ah,0BAh,01Fh,0D6h,001h,0D6h,001h,09Fh,021h  ;16E0h
4483   41E6 183ABA1FD601D6019F21
4484   41F0 581FA61FDA1C    .DB 058h,01Fh,0A6h,01Fh,0DAh,01Ch,018h,021h,0BBh,01Fh,036h,001h,03Ah,09Ch,01Eh,021h  ;16F0h
4484   41F6 1821BB1F36013A9C1E21
4485   4200 BB1FBEDA1C18    .DB 0BBh,01Fh,0BEh,0DAh,01Ch,018h,03Ah,0BBh,01Fh,03Dh,04Fh,006h,000h,021h,04Ch,01Eh  ;1700h
4485   4206 3ABB1F3D4F0600214C1E
4486   4210 094ECD450E21    .DB 009h,04Eh,0CDh,045h,00Eh,021h,0BBh,01Fh,034h,0C2h,0FCh,017h,00Eh,00Dh,0CDh,045h  ;1710h
4486   4216 BB1F34C2FC170E0DCD45
4487   4220 0E0E0ACD450E    .DB 00Eh,00Eh,00Ah,0CDh,045h,00Eh,03Ah,0BAh,01Fh,0FEh,001h,0C2h,02Fh,018h,0C9h,0C3h  ;1720h
4487   4226 3ABA1FFE01C22F18C9C3
4488   4230 DA17CD2E082A    .DB 0DAh,017h,0CDh,02Eh,008h,02Ah,09Ch,01Eh,026h,000h,001h,04Ch,01Eh,009h,036h,024h  ;1730h
4488   4236 9C1E2600014C1E093624
4489   4240 014C1ECD3908    .DB 001h,04Ch,01Eh,0CDh,039h,008h,001h,06Bh,003h,0CDh,039h,008h,0CDh,02Eh,008h,0CDh  ;1740h
4489   4246 016B03CD3908CD2E08CD
4490   4250 1308FE1AC258    .DB 013h,008h,0FEh,01Ah,0C2h,058h,018h,0C9h,0C3h,0DAh,017h,0C9h,001h,08Fh,003h,0CDh  ;1750h
4490   4256 18C9C3DA17C9018F03CD
4491   4260 AF09C92A4B1E    .DB 0AFh,009h,0C9h,02Ah,04Bh,01Eh,04Dh,0CDh,05Eh,008h,011h,09Eh,003h,001h,030h,01Eh  ;1760h
4491   4266 4DCD5E08119E0301301E
4492   4270 CDFD1532051E    .DB 0CDh,0FDh,015h,032h,005h,01Eh,001h,030h,01Eh,0C5h,01Eh,003h,001h,0A4h,01Fh,0CDh  ;1770h
4492   4276 01301EC51E0301A41FCD
4493   4280 180A3A301EE6    .DB 018h,00Ah,03Ah,030h,01Eh,0E6h,07Fh,032h,030h,01Eh,03Ah,031h,01Eh,0E6h,07Fh,032h  ;1780h
4493   4286 7F32301E3A311EE67F32
4494   4290 311E01A203CD    .DB 031h,01Eh,001h,0A2h,003h,0CDh,0EAh,015h,001h,027h,01Eh,0CDh,0B3h,008h,001h,027h  ;1790h
4494   4296 EA1501271ECDB3080127
4495   42A0 1ECDE3083AAE    .DB 01Eh,0CDh,0E3h,008h,03Ah,0AEh,01Eh,0FEh,0FFh,0C2h,0B2h,018h,001h,0A5h,003h,0CDh  ;17A0h
4495   42A6 1EFEFFC2B21801A503CD
4496   42B0 AF0921471E36    .DB 0AFh,009h,021h,047h,01Eh,036h,000h,021h,000h,000h,022h,0A1h,01Eh,0C9h,021h,0FFh  ;17B0h
4496   42B6 0021000022A11EC921FF
4497   42C0 FF229F1ECD37    .DB 0FFh,022h,09Fh,01Eh,0CDh,037h,009h,02Ah,003h,01Eh,04Dh,0CDh,05Eh,008h,001h,006h  ;17C0h
4497   42C6 092A031E4DCD5E080106
4498   42D0 1ECD6E08CD2F    .DB 01Eh,0CDh,06Eh,008h,0CDh,02Fh,009h,03Ah,061h,01Fh,02Fh,0F5h,03Ah,010h,01Eh,007h  ;17D0h
4498   42D6 093A611F2FF53A101E07
4499   42E0 C148A11FD2EC    .DB 0C1h,048h,0A1h,01Fh,0D2h,0ECh,018h,021h,0AEh,01Eh,036h,0FFh,03Ah,0AEh,01Eh,0FEh  ;17E0h
4499   42E6 1821AE1E36FF3AAE1EFE
4500   42F0 FFC2FA1801B8    .DB 0FFh,0C2h,0FAh,018h,001h,0B8h,003h,0CDh,0AFh,009h,021h,026h,01Eh,036h,000h,011h  ;17F0h
4500   42F6 03CDAF0921261E360011
4501   4300             											;BLOCK E3
4502   4300 C003010F1ECD    .DB 0C0h,003h,001h,00Fh,01Eh,0CDh,0FDh,015h,032h,004h,01Eh,02Ah,0FDh,01Dh,022h,09Dh  ;1800h
4502   4306 FD1532041E2AFD1D229D
4503   4310 1EC93E002162    .DB 01Eh,0C9h,03Eh,000h,021h,062h,01Fh,0BEh,0D2h,021h,019h,001h,0C4h,003h,0CDh,0AFh  ;1810h
4503   4316 1FBED2211901C403CDAF
4504   4320 093E0021601F    .DB 009h,03Eh,000h,021h,060h,01Fh,0BEh,0D2h,030h,019h,001h,0D4h,003h,0CDh,0AFh,009h  ;1820h
4504   4326 BED2301901D403CDAF09
4505   4330 C921BC1F713A    .DB 0C9h,021h,0BCh,01Fh,071h,03Ah,0BCh,01Fh,01Fh,0D2h,045h,019h,03Ah,013h,01Eh,032h  ;1830h
4505   4336 BC1F1FD245193A131E32
4506   4340 341EC34A1921    .DB 034h,01Eh,0C3h,04Ah,019h,021h,034h,01Eh,036h,000h,02Ah,0A1h,01Eh,07Dh,0E6h,07Fh  ;1840h
4506   4346 341E36002AA11E7DE67F
4507   4350 FE00CA611921    .DB 0FEh,000h,0CAh,061h,019h,021h,034h,01Eh,034h,00Eh,01Ah,0CDh,045h,00Eh,0C3h,04Ah  ;1850h
4507   4356 341E340E1ACD450EC34A
4508   4360 19CD1219CDC8    .DB 019h,0CDh,012h,019h,0CDh,0C8h,00Ah,02Ah,04Bh,01Eh,04Dh,0CDh,05Eh,008h,001h,027h  ;1860h
4508   4366 0A2A4B1E4DCD5E080127
4509   4370 1ECD81083AAE    .DB 01Eh,0CDh,081h,008h,03Ah,0AEh,01Eh,0FEh,0FFh,0C2h,082h,019h,001h,0E3h,003h,0CDh  ;1870h
4509   4376 1EFEFFC2821901E303CD
4510   4380 AF0901A41FCD    .DB 0AFh,009h,001h,0A4h,01Fh,0CDh,0EAh,015h,021h,033h,01Eh,036h,000h,001h,027h,01Eh  ;1880h
4510   4386 EA1521331E360001271E
4511   4390 CD6E083AAE1E    .DB 0CDh,06Eh,008h,03Ah,0AEh,01Eh,0FEh,0FFh,0CAh,0E9h,019h,03Ah,030h,01Eh,007h,01Fh  ;1890h
4511   4396 FEFFCAE9193A301E071F
4512   43A0 D2E3193A661F    .DB 0D2h,0E3h,019h,03Ah,066h,01Fh,01Fh,0DAh,0D5h,019h,001h,001h,004h,0CDh,039h,008h  ;18A0h
4512   43A6 1FDAD519010104CD3908
4513   43B0 CD13084FCDEE    .DB 0CDh,013h,008h,04Fh,0CDh,0EEh,00Eh,0FEh,059h,0CAh,0D2h,019h,001h,023h,004h,0CDh  ;18B0h
4513   43B6 0EFE59CAD219012304CD
4514   43C0 3908CD2E0801    .DB 039h,008h,0CDh,02Eh,008h,001h,033h,004h,0CDh,0EAh,015h,001h,027h,01Eh,0CDh,0B3h  ;18C0h
4514   43C6 3304CDEA1501271ECDB3
4515   43D0 08C9CD2E083A    .DB 008h,0C9h,0CDh,02Eh,008h,03Ah,030h,01Eh,0E6h,07Fh,032h,030h,01Eh,001h,027h,01Eh  ;18D0h
4515   43D6 301EE67F32301E01271E
4516   43E0 CD060901271E    .DB 0CDh,006h,009h,001h,027h,01Eh,0CDh,0B3h,008h,001h,027h,01Eh,0C5h,01Eh,010h,001h  ;18E0h
4516   43E6 CDB30801271EC51E1001
4517   43F0 371ECD180A01    .DB 037h,01Eh,0CDh,018h,00Ah,001h,036h,004h,0CDh,0EAh,015h,001h,027h,01Eh,0CDh,0F6h  ;18F0h
4517   43F6 3604CDEA1501271ECDF6
4518   4400 08C90E0721FF    .DB 008h,0C9h,00Eh,007h,021h,0FFh,01Dh,0CDh,06Ah,01Dh,03Eh,0FFh,0CDh,041h,01Dh,02Bh  ;1900h
4518   4406 1DCD6A1D3EFFCD411D2B
4519   4410 EB21FB1D73C9    .DB 0EBh,021h,0FBh,01Dh,073h,0C9h,021h,0CAh,01Fh,022h,001h,01Eh,001h,000h,040h,011h  ;1910h
4519   4416 21CA1F22011E01004011
4520   4420 FF1DCD931DDA    .DB 0FFh,01Dh,0CDh,093h,01Dh,0DAh,031h,01Ah,021h,080h,07Fh,022h,0FFh,01Dh,0C3h,03Ch  ;1920h
4520   4426 311A21807F22FF1DC33C
4521   4430 1A2AFD1DEB2A    .DB 01Ah,02Ah,0FDh,01Dh,0EBh,02Ah,0FFh,01Dh,019h,022h,0FFh,01Dh,0CDh,002h,01Ah,0C9h  ;1930h
4521   4436 FF1D1922FF1DCD021AC9
4522   4440 01CA1F110600    .DB 001h,0CAh,01Fh,011h,006h,000h,0CDh,093h,01Dh,00Eh,001h,0E5h,0CDh,06Eh,01Dh,001h  ;1940h
4522   4446 CD931D0E01E5CD6E1D01
4523   4450 CA1F0922011E    .DB 0CAh,01Fh,009h,022h,001h,01Eh,011h,000h,0FFh,0E1h,0CDh,044h,01Dh,00Eh,001h,0CDh  ;1950h
4523   4456 1100FFE1CD441D0E01CD
4524   4460 6E1D22FD1D22    .DB 06Eh,01Dh,022h,0FDh,01Dh,022h,0FFh,01Dh,0CDh,002h,01Ah,0C9h,03Ah,0A4h,01Eh,0D6h  ;1960h
4524   4466 FF1DCD021AC93AA41ED6
4525   4470 00C6FF9F2151    .DB 000h,0C6h,0FFh,09Fh,021h,051h,01Fh,0A6h,032h,0BDh,01Fh,01Fh,0D2h,082h,01Ah,0CDh  ;1970h
4525   4476 1FA632BD1F1FD2821ACD
4526   4480 161A3A581F21    .DB 016h,01Ah,03Ah,058h,01Fh,021h,057h,01Fh,0B6h,01Fh,0D2h,093h,01Ah,0CDh,0DAh,017h  ;1980h
4526   4486 571FB61FD2931ACDDA17
4527   4490 C3A41ACD3A16    .DB 0C3h,0A4h,01Ah,0CDh,03Ah,016h,01Fh,0DAh,0A4h,01Ah,02Ah,0A8h,01Eh,04Dh,0CDh,045h  ;1990h
4527   4496 1FDAA41A2AA81E4DCD45
4528   44A0 0EC3931A3ABD    .DB 00Eh,0C3h,093h,01Ah,03Ah,0BDh,01Fh,01Fh,0D2h,0B1h,01Ah,0CDh,018h,00Eh,0CDh,040h  ;19A0h
4528   44A6 1F1FD2B11ACD180ECD40
4529   44B0 1AC9CD401A3A    .DB 01Ah,0C9h,0CDh,040h,01Ah,03Ah,04Fh,01Fh,032h,04Dh,01Fh,0CDh,063h,018h,0CDh,0BEh  ;19B0h
4529   44B6 4F1F324D1FCD6318CDBE
4530   44C0 1821BE1F3601    .DB 018h,021h,0BEh,01Fh,036h,001h,023h,036h,000h,03Eh,019h,021h,0BFh,01Fh,0BEh,0DAh  ;19C0h
4530   44C6 2336003E1921BF1FBEDA
4531   44D0 291B2ABF1F26    .DB 029h,01Bh,02Ah,0BFh,01Fh,026h,000h,001h,050h,01Fh,009h,07Eh,0FEh,000h,0CAh,022h  ;19D0h
4531   44D6 0001501F097EFE00CA22
4532   44E0 1B3ABF1FD606    .DB 01Bh,03Ah,0BFh,01Fh,0D6h,006h,0D6h,001h,09Fh,0F5h,03Ah,0BFh,01Fh,0D6h,00Eh,0D6h  ;19E0h
4532   44E6 D6019FF53ABF1FD60ED6
4533   44F0 019FC148B1F5    .DB 001h,09Fh,0C1h,048h,0B1h,0F5h,03Ah,0BFh,01Fh,0D6h,011h,0D6h,001h,09Fh,0C1h,048h  ;19F0h
4533   44F6 3ABF1FD611D6019FC148
4534   4500 B1F53ABF1FD6    .DB 0B1h,0F5h,03Ah,0BFh,01Fh,0D6h,015h,0D6h,001h,09Fh,0C1h,048h,0B1h,0F5h,03Ah,0BFh  ;1A00h
4534   4506 15D6019FC148B1F53ABF
4535   4510 1FD616D6019F    .DB 01Fh,0D6h,016h,0D6h,001h,09Fh,0C1h,048h,0B1h,01Fh,0DAh,022h,01Bh,021h,0BEh,01Fh  ;1A10h
4535   4516 C148B11FDA221B21BE1F
4536   4520 360021BF1F34    .DB 036h,000h,021h,0BFh,01Fh,034h,0C2h,0C9h,01Ah,03Ah,0BEh,01Fh,01Fh,0D2h,05Fh,01Bh  ;1A20h
4536   4526 C2C91A3ABE1F1FD25F1B
4537   4530 CD161ACD6A1B    .DB 0CDh,016h,01Ah,0CDh,06Ah,01Bh,01Fh,0DAh,059h,01Bh,0CDh,04Fh,00Ah,0CDh,06Ah,01Bh  ;1A30h
4537   4536 1FDA591BCD4F0ACD6A1B
4538   4540 1FD24D1B2A9F    .DB 01Fh,0D2h,04Dh,01Bh,02Ah,09Fh,01Eh,022h,0A1h,01Eh,0C3h,053h,01Bh,02Ah,0FFh,01Dh  ;1A40h
4538   4546 1E22A11EC3531B2AFF1D
4539   4550 22A11ECDC80A    .DB 022h,0A1h,01Eh,0CDh,0C8h,00Ah,0C3h,033h,01Bh,0CDh,040h,01Ah,0C3h,062h,01Bh,0CDh  ;1A50h
4539   4556 C3331BCD401AC3621BCD
4540   4560 6C1A2ABE1F4D    .DB 06Ch,01Ah,02Ah,0BEh,01Fh,04Dh,0CDh,031h,019h,0C9h,001h,0FFh,0FFh,011h,09Fh,01Eh  ;1A60h
4540   4566 CD3119C901FFFF119F1E
4541   4570 CD931DB5C6FF    .DB 0CDh,093h,01Dh,0B5h,0C6h,0FFh,09Fh,0C9h,021h,000h,000h,022h,0C0h,01Fh,022h,0C4h  ;1A70h
4541   4576 9FC921000022C01F22C4
4542   4580 1FCD37092A03    .DB 01Fh,0CDh,037h,009h,02Ah,003h,01Eh,04Dh,0CDh,05Eh,008h,001h,080h,000h,0CDh,086h  ;1A80h
4542   4586 1E4DCD5E08018000CD86
4543   4590 09015C00CD94    .DB 009h,001h,05Ch,000h,0CDh,094h,008h,021h,000h,000h,022h,0C2h,01Fh,03Ah,0AEh,01Eh  ;1A90h
4543   4596 0821000022C21F3AAE1E
4544   45A0 D6FFC6FF9F01    .DB 0D6h,0FFh,0C6h,0FFh,09Fh,001h,0C0h,01Fh,011h,0C2h,01Fh,0F5h,0CDh,08Eh,01Dh,09Fh  ;1AA0h
4544   45A6 C01F11C21FF5CD8E1D9F
4545   45B0 C148A11FD2C4    .DB 0C1h,048h,0A1h,01Fh,0D2h,0C4h,01Bh,02Ah,0C2h,01Fh,023h,022h,0C2h,01Fh,0CDh,0A7h  ;1AB0h
4545   45B6 1B2AC21F2322C21FCDA7
4546   45C0 08C39D1BCD2F    .DB 008h,0C3h,09Dh,01Bh,0CDh,02Fh,009h,03Ah,0AEh,01Eh,0FEh,0FFh,0C2h,0E5h,01Bh,03Eh  ;1AC0h
4546   45C6 093AAE1EFEFFC2E51B3E
4547   45D0 0011C41FCD9B    .DB 000h,011h,0C4h,01Fh,0CDh,09Bh,01Dh,0B5h,0C2h,0E1h,01Bh,001h,039h,004h,0CDh,0AFh  ;1AD0h
4547   45D6 1DB5C2E11B013904CDAF
4548   45E0 09CD2E08C92A    .DB 009h,0CDh,02Eh,008h,0C9h,02Ah,0C2h,01Fh,023h,022h,0C0h,01Fh,03Ah,0AEh,01Eh,0E6h  ;1AE0h
4548   45E6 C21F2322C01F3AAE1EE6
4549   45F0 038787878787    .DB 003h,087h,087h,087h,087h,087h,05Fh,016h,000h,021h,080h,000h,019h,0E5h,01Eh,010h  ;1AF0h
4549   45F6 5F160021800019E51E10
4550   4600 01271ECD180A    .DB 001h,027h,01Eh,0CDh,018h,00Ah,021h,027h,01Eh,036h,000h,021h,033h,01Eh,036h,000h  ;1B00h
4550   4606 21271E360021331E3600
4551   4610 01271EC51E10    .DB 001h,027h,01Eh,0C5h,01Eh,010h,001h,006h,01Eh,0CDh,018h,00Ah,03Ah,031h,01Eh,007h  ;1B10h
4551   4616 01061ECD180A3A311E07
4552   4620 2F21611FB61F    .DB 02Fh,021h,061h,01Fh,0B6h,01Fh,0D2h,045h,01Ch,02Ah,0C4h,01Fh,023h,022h,0C4h,01Fh  ;1B20h
4552   4626 D2451C2AC41F2322C41F
4553   4630 3E01CD7A1DB5    .DB 03Eh,001h,0CDh,07Ah,01Dh,0B5h,0C2h,03Fh,01Ch,001h,043h,004h,0CDh,039h,008h,0CDh  ;1B30h
4553   4636 C23F1C014304CD3908CD
4554   4640 491CCDB21AC3    .DB 049h,01Ch,0CDh,0B2h,01Ah,0C3h,081h,01Bh,0C9h,0CDh,02Eh,008h,021h,0C6h,01Fh,036h  ;1B40h
4554   4646 811BC9CD2E0821C61F36
4555   4650 013E0B21C61F    .DB 001h,03Eh,00Bh,021h,0C6h,01Fh,0BEh,0DAh,087h,01Ch,02Ah,0C6h,01Fh,026h,000h,001h  ;1B50h
4555   4656 BEDA871C2AC61F260001
4556   4660 271E097E32C7    .DB 027h,01Eh,009h,07Eh,032h,0C7h,01Fh,0FEh,020h,0CAh,080h,01Ch,03Ah,0C6h,01Fh,0FEh  ;1B60h
4556   4666 1FFE20CA801C3AC61FFE
4557   4670 09C2791C0E2E    .DB 009h,0C2h,079h,01Ch,00Eh,02Eh,0CDh,01Ch,008h,02Ah,0C7h,01Fh,04Dh,0CDh,01Ch,008h  ;1B70h
4557   4676 CD1C082AC71F4DCD1C08
4558   4680 21C61F34C251    .DB 021h,0C6h,01Fh,034h,0C2h,051h,01Ch,0C9h,03Eh,000h,021h,094h,01Fh,0BEh,0D2h,09Bh  ;1B80h
4558   4686 1CC93E0021941FBED29B
4559   4690 1C3A941F3D32    .DB 01Ch,03Ah,094h,01Fh,03Dh,032h,003h,01Eh,0C3h,0A1h,01Ch,03Ah,0FCh,01Dh,032h,003h  ;1B90h
4559   4696 031EC3A11C3AFC1D3203
4560   46A0 1EC93AF61D1F    .DB 01Eh,0C9h,03Ah,0F6h,01Dh,01Fh,0D2h,0ACh,01Ch,0CDh,05Ch,018h,03Eh,000h,021h,094h  ;1BA0h
4560   46A6 D2AC1CCD5C183E002194
4561   46B0 1FBED2BF1C3A    .DB 01Fh,0BEh,0D2h,0BFh,01Ch,03Ah,094h,01Fh,03Dh,032h,04Bh,01Eh,0C3h,0C5h,01Ch,03Ah  ;1BB0h
4561   46B6 941F3D324B1EC3C51C3A
4562   46C0 FC1D324B1EC9    .DB 0FCh,01Dh,032h,04Bh,01Eh,0C9h,021h,0C0h,01Eh,03Ah,0C1h,01Eh,0BEh,0CAh,0D1h,01Ch  ;1BC0h
4562   46C6 21C01E3AC11EBECAD11C
4563   46D0 C921031E3A4B    .DB 0C9h,021h,003h,01Eh,03Ah,04Bh,01Eh,0BEh,0C2h,0DEh,01Ch,0CDh,05Ch,018h,0C9h,0CDh  ;1BD0h
4563   46D6 1EBEC2DE1CCD5C18C9CD
4564   46E0 11123AA81EFE    .DB 011h,012h,03Ah,0A8h,01Eh,0FEh,00Dh,0CAh,0EDh,01Ch,0CDh,05Ch,018h,0C9h,021h,0C9h  ;1BE0h
4564   46E6 0DCAED1CCD5C18C921C9
4565   46F0 1F702B71CD88    .DB 01Fh,070h,02Bh,071h,0CDh,088h,01Ch,0CDh,0DFh,01Ch,001h,006h,01Eh,0C5h,02Ah,0C8h  ;1BF0h
4565   46F6 1CCDDF1C01061EC52AC8
4566   4700 1F444D1E21CD    .DB 01Fh,044h,04Dh,01Eh,021h,0CDh,018h,00Ah,0CDh,0C6h,01Ch,0C9h,001h,006h,01Eh,0CDh  ;1C00h
4566   4706 180ACDC61CC901061ECD
4567   4710 20123AA91ED6    .DB 020h,012h,03Ah,0A9h,01Eh,0D6h,001h,0D6h,001h,09Fh,0F5h,03Ah,0A8h,01Eh,0D6h,03Dh  ;1C10h
4567   4716 01D6019FF53AA81ED63D
4568   4720 D6019FC148A1    .DB 0D6h,001h,09Fh,0C1h,048h,0A1h,01Fh,0DAh,02Dh,01Dh,0CDh,05Ch,018h,03Ah,04Eh,01Fh  ;1C20h
4568   4726 1FDA2D1DCD5C183A4E1F
4569   4730 324F1FC9EB5F    .DB 032h,04Fh,01Fh,0C9h,0EBh,05Fh,016h,000h,0EBh,01Ah,085h,06Fh,013h,01Ah,08Ch,067h  ;1C30h
4569   4736 1600EB1A856F131A8C67
4570   4740 C95F16007BA5    .DB 0C9h,05Fh,016h,000h,07Bh,0A5h,06Fh,07Ah,0A4h,067h,0C9h,05Eh,023h,056h,0EBh,029h  ;1C40h
4570   4746 6F7AA467C95E2356EB29
4571   4750 E52929C109C9    .DB 0E5h,029h,029h,0C1h,009h,0C9h,05Fh,016h,000h,07Bh,0B5h,06Fh,07Ah,0B4h,067h,0C9h  ;1C50h
4571   4756 5F16007BB56F7AB467C9
4572   4760 5E2356EB290D    .DB 05Eh,023h,056h,0EBh,029h,00Dh,0C2h,064h,01Dh,0C9h,05Eh,023h,056h,0EBh,07Ch,0B7h  ;1C60h
4572   4766 C2641DC95E2356EB7CB7
4573   4770 1F677D1F6F0D    .DB 01Fh,067h,07Dh,01Fh,06Fh,00Dh,0C2h,06Eh,01Dh,0C9h,05Fh,016h,000h,07Bh,095h,06Fh  ;1C70h
4573   4776 C26E1DC95F16007B956F
4574   4780 7A9C67C94F06    .DB 07Ah,09Ch,067h,0C9h,04Fh,006h,000h,07Bh,091h,06Fh,07Ah,098h,067h,0C9h,069h,060h  ;1C80h
4574   4786 007B916F7A9867C96960
4575   4790 4E23461A916F    .DB 04Eh,023h,046h,01Ah,091h,06Fh,013h,01Ah,098h,067h,0C9h,06Fh,026h,000h,01Ah,095h  ;1C90h
4575   4796 131A9867C96F26001A95
4576   47A0 6F131A9C67C9    .DB 06Fh,013h,01Ah,09Ch,067h,0C9h,006h,00Ch,048h,00Dh,0C2h,0A9h,01Dh,03Dh,0C2h,0A8h  ;1CA0h
4576   47A6 060C480DC2A91D3DC2A8
4577   47B0 1DC900000000    .DB 01Dh,0C9h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1CB0h
4577   47B6 00000000000000000000
4578   47C0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1CC0h
4578   47C6 00000000000000000000
4579   47D0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1CD0h
4579   47D6 00000000000000000000
4580   47E0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1CE0h
4580   47E6 00000000000000000000
4581   47F0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1CF0h
4581   47F6 00000000000000000000
4582   4800 7A9C67C94F06    .DB 07Ah,09Ch,067h,0C9h,04Fh,006h,000h,07Bh,091h,06Fh,07Ah,098h,067h,0C9h,069h,060h  ;1D00h
4582   4806 007B916F7A9867C96960
4583   4810 4E23461A916F    .DB 04Eh,023h,046h,01Ah,091h,06Fh,013h,01Ah,098h,067h,0C9h,06Fh,026h,000h,01Ah,095h  ;1D10h
4583   4816 131A9867C96F26001A95
4584   4820 6F131A9C67C9    .DB 06Fh,013h,01Ah,09Ch,067h,0C9h,006h,00Ch,048h,00Dh,0C2h,0A9h,01Dh,03Dh,0C2h,0A8h  ;1D20h
4584   4826 060C480DC2A91D3DC2A8
4585   4830 1DC900000000    .DB 01Dh,0C9h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D30h
4585   4836 00000000000000000000
4586   4840 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D40h
4586   4846 00000000000000000000
4587   4850 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D50h
4587   4856 00000000000000000000
4588   4860 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D60h
4588   4866 00000000000000000000
4589   4870 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D70h
4589   4876 00000000000000000000
4590   4880 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D80h
4590   4886 00000000000000000000
4591   4890 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1D90h
4591   4896 00000000000000000000
4592   48A0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DA0h
4592   48A6 00000000000000000000
4593   48B0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DB0h
4593   48B6 00000000000000000000
4594   48C0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DC0h
4594   48C6 00000000000000000000
4595   48D0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DD0h
4595   48D6 00000000000000000000
4596   48E0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DE0h
4596   48E6 00000000000000000000
4597   48F0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1DF0h
4597   48F6 00000000000000000000
4598   4900 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E00h
4598   4906 00000000000000000000
4599   4910 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E10h
4599   4916 00000000000000000000
4600   4920 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E20h
4600   4926 00000000000000000000
4601   4930 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E30h
4601   4936 00000000000000000000
4602   4940 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E40h
4602   4946 00000000000000000000
4603   4950 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E50h
4603   4956 00000000000000000000
4604   4960 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E60h
4604   4966 00000000000000000000
4605   4970 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E70h
4605   4976 00000000000000000000
4606   4980 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E80h
4606   4986 00000000000000000000
4607   4990 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1E90h
4607   4996 00000000000000000000
4608   49A0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1EA0h
4608   49A6 00000000000000000000
4609   49B0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1EB0h
4609   49B6 00000000000000000000
4610   49C0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1EC0h
4610   49C6 00000000000000000000
4611   49D0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1ED0h
4611   49D6 00000000000000000000
4612   49E0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1EE0h
4612   49E6 00000000000000000000
4613   49F0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1EF0h
4613   49F6 00000000000000000000
4614   4A00 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F00h
4614   4A06 00000000000000000000
4615   4A10 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F10h
4615   4A16 00000000000000000000
4616   4A20 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F20h
4616   4A26 00000000000000000000
4617   4A30 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F30h
4617   4A36 00000000000000000000
4618   4A40 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F40h
4618   4A46 00000000000000000000
4619   4A50 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F50h
4619   4A56 00000000000000000000
4620   4A60 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F60h
4620   4A66 00000000000000000000
4621   4A70 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F70h
4621   4A76 00000000000000000000
4622   4A80 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F80h
4622   4A86 00000000000000000000
4623   4A90 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1F90h
4623   4A96 00000000000000000000
4624   4AA0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FA0h
4624   4AA6 00000000000000000000
4625   4AB0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FB0h
4625   4AB6 00000000000000000000
4626   4AC0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FC0h
4626   4AC6 00000000000000000000
4627   4AD0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FD0h
4627   4AD6 00000000000000000000
4628   4AE0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FE0h
4628   4AE6 00000000000000000000
4629   4AF0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;1FF0h
4629   4AF6 00000000000000000000
4630   4B00             											;BLOCK E4				
4631   4B00 310009CD3905    .DB 031h,000h,009h,0CDh,039h,005h,005h,0C2h,07Eh,001h,0CDh,046h,004h,0CDh,062h,004h  ;0000h
4631   4B06 05C27E01CD4604CD6204
4632   4B10 AF323D04CDC4    .DB 0AFh,032h,03Dh,004h,0CDh,0C4h,002h,0DAh,063h,001h,02Ah,03Bh,004h,023h,022h,03Bh  ;0010h
4632   4B16 02DA63012A3B0423223B
4633   4B20 043E01CD6C03    .DB 004h,03Eh,001h,0CDh,06Ch,003h,03Ah,03Bh,004h,0CDh,06Ch,003h,02Fh,0CDh,06Ch,003h  ;0020h
4633   4B26 3A3B04CD6C032FCD6C03
4634   4B30 210000223E04    .DB 021h,000h,000h,022h,03Eh,004h,001h,000h,080h,021h,000h,007h,07Eh,0CDh,06Ch,003h  ;0030h
4634   4B36 0100802100077ECD6C03
4635   4B40 CDD7022305C2    .DB 0CDh,0D7h,002h,023h,005h,0C2h,03Ch,001h,03Ah,045h,004h,0B7h,0CAh,057h,001h,02Ah  ;0040h
4635   4B46 3C013A4504B7CA57012A
4636   4B50 3E047CCD6C03    .DB 03Eh,004h,07Ch,0CDh,06Ch,003h,04Dh,0CDh,04Fh,003h,0CDh,075h,002h,0C2h,021h,001h  ;0050h
4636   4B56 4DCD4F03CD7502C22101
4637   4B60 C310013E04CD    .DB 0C3h,010h,001h,03Eh,004h,0CDh,06Ch,003h,0CDh,075h,002h,0C2h,063h,001h,0CDh,08Ah  ;0060h
4637   4B66 6C03CD7502C26301CD8A
4638   4B70 034F4B0D0A53    .DB 003h,04Fh,04Bh,00Dh,00Ah,053h,065h,06Eh,074h,020h,000h,0C3h,0ACh,001h,0CDh,093h  ;0070h
4638   4B76 656E742000C3AC01CD93
4639   4B80 04CDBD01DA94    .DB 004h,0CDh,0BDh,001h,0DAh,094h,001h,02Ah,03Bh,004h,023h,022h,03Bh,004h,0CDh,06Ah  ;0080h
4639   4B86 012A3B0423223B04CD6A
4640   4B90 03C38101CD6A    .DB 003h,0C3h,081h,001h,0CDh,06Ah,003h,0CDh,095h,002h,0CDh,08Ah,003h,04Fh,04Bh,000h  ;0090h
4640   4B96 03CD9502CD8A034F4B00
4641   4BA0 CD8A03526563    .DB 0CDh,08Ah,003h,052h,065h,063h,065h,069h,076h,065h,064h,000h,02Ah,03Bh,004h,0CDh  ;00A0h
4641   4BA6 6569766564002A3B04CD
4642   4BB0 1D03CD330420    .DB 01Dh,003h,0CDh,033h,004h,020h,062h,06Ch,06Fh,063h,06Bh,073h,000h,0AFh,032h,03Dh  ;00B0h
4642   4BB6 626C6F636B7300AF323D
4643   4BC0 041E14CDFD02    .DB 004h,01Eh,014h,0CDh,0FDh,002h,0DAh,0E1h,001h,0FEh,001h,0CAh,0F7h,001h,0FEh,004h  ;00C0h
4643   4BC6 DAE101FE01CAF701FE04
4644   4BD0 37C806001126    .DB 037h,0C8h,006h,000h,011h,026h,004h,005h,0CAh,09Fh,003h,0CDh,0FBh,002h,0D2h,0D4h  ;00D0h
4644   4BD6 0405CA9F03CDFB02D2D4
4645   4BE0 013A4004CD6C    .DB 001h,03Ah,040h,004h,0CDh,06Ch,003h,021h,03Dh,004h,034h,07Eh,0FEh,00Ah,0DAh,0C1h  ;00E0h
4645   4BE6 03213D04347EFE0ADAC1
4646   4BF0 0111DF03C39F    .DB 001h,011h,0DFh,003h,0C3h,09Fh,003h,03Eh,015h,032h,040h,004h,0CDh,0FBh,002h,0DAh  ;00F0h
4646   4BF6 033E15324004CDFB02DA
4647   4C00 E10157CDFB02    .DB 0E1h,001h,057h,0CDh,0FBh,002h,0DAh,0E1h,001h,02Fh,0BAh,0C2h,0D2h,001h,032h,03Ah  ;0100h
4647   4C06 DAE1012FBAC2D201323A
4648   4C10 04210000223E    .DB 004h,021h,000h,000h,022h,03Eh,004h,001h,000h,080h,021h,000h,007h,0CDh,0FBh,002h  ;0110h
4648   4C16 04010080210007CDFB02
4649   4C20 DAE10177CDD7    .DB 0DAh,0E1h,001h,077h,0CDh,0D7h,002h,023h,005h,0C2h,01Dh,002h,03Ah,045h,004h,0B7h  ;0120h
4649   4C26 022305C21D023A4504B7
4650   4C30 CA4302CDFB02    .DB 0CAh,043h,002h,0CDh,0FBh,002h,0DAh,0E1h,001h,0E5h,02Ah,03Eh,004h,04Dh,0BCh,0E1h  ;0130h
4650   4C36 DAE101E52A3E044DBCE1
4651   4C40 C2D201CDFB02    .DB 0C2h,0D2h,001h,0CDh,0FBh,002h,0DAh,0E1h,001h,0B9h,0C2h,0E1h,001h,03Ah,03Bh,004h  ;0140h
4651   4C46 DAE101B9C2E1013A3B04
4652   4C50 473A3A0490CC    .DB 047h,03Ah,03Ah,004h,090h,0CCh,06Ah,003h,0CAh,0BDh,001h,03Dh,0C2h,06Fh,002h,011h  ;0150h
4652   4C56 6A03CABD013DC26F0211
4653   4C60 5C000E15CD79    .DB 05Ch,000h,00Eh,015h,0CDh,079h,003h,011h,009h,004h,0B7h,0C2h,09Fh,003h,0C9h,011h  ;0160h
4653   4C66 03110904B7C29F03C911
4654   4C70 FD03C39F031E    .DB 0FDh,003h,0C3h,09Fh,003h,01Eh,078h,0CDh,0FDh,002h,0DAh,087h,002h,0FEh,006h,0C8h  ;0170h
4654   4C76 78CDFD02DA8702FE06C8
4655   4C80 FE15C28702B7    .DB 0FEh,015h,0C2h,087h,002h,0B7h,0C9h,021h,03Dh,004h,034h,07Eh,0FEh,00Ah,0D8h,011h  ;0180h
4655   4C86 C9213D04347EFE0AD811
4656   4C90 EF03C39F0311    .DB 0EFh,003h,0C3h,09Fh,003h,011h,05Ch,000h,00Eh,010h,0CDh,079h,003h,03Ch,0C0h,0CDh  ;0190h
4656   4C96 5C000E10CD79033CC0CD
4657   4CA0 300446494C45    .DB 030h,004h,046h,049h,04Ch,045h,020h,043h,04Ch,04Fh,053h,045h,020h,045h,052h,052h  ;01A0h
4657   4CA6 20434C4F534520455252
4658   4CB0 4F5221204D61    .DB 04Fh,052h,021h,020h,04Dh,061h,079h,020h,062h,065h,020h,063h,06Fh,072h,072h,075h  ;01B0h
4658   4CB6 7920626520636F727275
4659   4CC0 70742E003A43    .DB 070h,074h,02Eh,000h,03Ah,043h,004h,0B7h,037h,0C0h,011h,05Ch,000h,00Eh,014h,0CDh  ;01C0h
4659   4CC6 04B737C0115C000E14CD
4660   4CD0 7903324304B7    .DB 079h,003h,032h,043h,004h,0B7h,0C9h,057h,081h,04Fh,07Ah,0C5h,0E5h,02Ah,03Eh,004h  ;01D0h
4660   4CD6 C957814F7AC5E52A3E04
4661   4CE0 AC6711211006    .DB 0ACh,067h,011h,021h,010h,006h,008h,029h,0D2h,0F1h,002h,07Ch,0AAh,067h,07Dh,0ABh  ;01E0h
4661   4CE6 0829D2F1027CAA677DAB
4662   4CF0 6F05C2E70222    .DB 06Fh,005h,0C2h,0E7h,002h,022h,03Eh,004h,0E1h,0C1h,0C9h,01Eh,002h,0E5h,021h,0ACh  ;01F0h
4662   4CF6 3E04E1C1C91E02E521AC
4663   4D00 0DCD1003CD65    .DB 00Dh,0CDh,010h,003h,0CDh,065h,003h,0CAh,001h,003h,0CDh,060h,003h,0B7h,0E1h,0C9h  ;0200h
4663   4D06 03CA0103CD6003B7E1C9
4664   4D10 2B7DB4C021AC    .DB 02Bh,07Dh,0B4h,0C0h,021h,0ACh,00Dh,01Dh,0C0h,0E1h,0E1h,037h,0C9h,016h,000h,001h  ;0210h
4664   4D16 0D1DC0E1E137C9160001
4665   4D20 F0D8CD3B0301    .DB 0F0h,0D8h,0CDh,03Bh,003h,001h,018h,0FCh,0CDh,03Bh,003h,001h,09Ch,0FFh,0CDh,03Bh  ;0220h
4665   4D26 18FCCD3B03019CFFCD3B
4666   4D30 0301F6FFCD3B    .DB 003h,001h,0F6h,0FFh,0CDh,03Bh,003h,07Dh,0C3h,04Ch,003h,03Eh,0FFh,0D5h,054h,05Dh  ;0230h
4666   4D36 037DC34C033EFFD5545D
4667   4D40 3C09DA3E03EB    .DB 03Ch,009h,0DAh,03Eh,003h,0EBh,0D1h,05Fh,0B2h,0C8h,057h,07Bh,0C6h,030h,04Fh,03Eh  ;0240h
4667   4D46 D15FB2C8577BC6304F3E
4668   4D50 12E5D5C5CD5B    .DB 012h,0E5h,0D5h,0C5h,0CDh,05Bh,003h,0C1h,0D1h,0E1h,0C9h,02Ah,001h,000h,06Fh,0E9h  ;0250h
4668   4D56 03C1D1E1C92A01006FE9
4669   4D60 3E15C351033E    .DB 03Eh,015h,0C3h,051h,003h,03Eh,006h,0C3h,051h,003h,03Eh,006h,0C5h,04Fh,0CDh,04Fh  ;0260h
4669   4D66 06C351033E06C54FCD4F
4670   4D70 0379C1C90E13    .DB 003h,079h,0C1h,0C9h,00Eh,013h,011h,05Ch,000h,0E5h,0D5h,0C5h,0CDh,005h,000h,0C1h  ;0270h
4670   4D76 115C00E5D5C5CD0500C1
4671   4D80 D1E1C9CD8D03    .DB 0D1h,0E1h,0C9h,0CDh,08Dh,003h,00Dh,00Ah,000h,0C9h,0CDh,083h,003h,0E3h,0F5h,0CDh  ;0280h
4671   4D86 0D0A00C9CD8303E3F5CD
4672   4D90 9503F1E3C97E    .DB 095h,003h,0F1h,0E3h,0C9h,07Eh,023h,0B7h,0C8h,0CDh,06Ch,003h,0C3h,095h,003h,0CDh  ;0290h
4672   4D96 23B7C8CD6C03C39503CD
4673   4DA0 8A0341424F52    .DB 08Ah,003h,041h,042h,04Fh,052h,054h,03Ah,000h,0EBh,0CDh,095h,003h,03Ah,044h,004h  ;02A0h
4673   4DA6 543A00EBCD95033A4404
4674   4DB0 B7C23704CD95    .DB 0B7h,0C2h,037h,004h,0CDh,095h,002h,02Ah,03Bh,004h,07Ch,0B5h,0C2h,0A0h,001h,0CDh  ;02B0h
4674   4DB6 022A3B047CB5C2A001CD
4675   4DC0 74033CCA3704    .DB 074h,003h,03Ch,0CAh,037h,004h,0CDh,030h,004h,045h,06Dh,070h,074h,079h,020h,066h  ;02C0h
4675   4DC6 CD3004456D7074792066
4676   4DD0 696C65206465    .DB 069h,06Ch,065h,020h,064h,065h,06Ch,065h,074h,065h,064h,000h,05Eh,043h,000h,031h  ;02D0h
4676   4DD6 6C65746564005E430031
4677   4DE0 D020626C6F63    .DB 0D0h,020h,062h,06Ch,06Fh,063h,06Bh,020h,065h,072h,072h,06Fh,072h,073h,000h,031h  ;02E0h
4677   4DE6 6B206572726F72730031
4678   4DF0 D02041434B20    .DB 0D0h,020h,041h,043h,04Bh,020h,065h,072h,072h,06Fh,072h,073h,000h,06Ch,06Fh,073h  ;02F0h
4678   4DF6 6572726F7273006C6F73
4679   4E00 7420626C6F63    .DB 074h,020h,062h,06Ch,06Fh,063h,06Bh,073h,000h,064h,069h,073h,06Bh,020h,077h,072h  ;0300h
4679   4E06 6B73006469736B207772
4680   4E10 697465206661    .DB 069h,074h,065h,020h,066h,061h,069h,06Ch,000h,055h,041h,052h,054h,020h,054h,078h  ;0310h
4680   4E16 696C0055415254205478
4681   4E20 206661696C00    .DB 020h,066h,061h,069h,06Ch,000h,073h,079h,06Eh,063h,020h,066h,061h,069h,06Ch,000h  ;0320h
4681   4E26 73796E63206661696C00
4682   4E30 CD8303E1CD95    .DB 0CDh,083h,003h,0E1h,0CDh,095h,003h,0C3h,000h,000h,000h,000h,000h,000h,000h,000h  ;0330h
4682   4E36 03C30000000000000000
4683   4E40 15000000FF43    .DB 015h,000h,000h,000h,0FFh,043h,011h,05Ch,000h,00Eh,00Fh,0CDh,079h,003h,03Ch,0C0h  ;0340h
4683   4E46 115C000E0FCD79033CC0
4684   4E50 CD300446696C    .DB 0CDh,030h,004h,046h,069h,06Ch,065h,020h,06Eh,06Fh,074h,020h,066h,06Fh,075h,06Eh  ;0350h
4684   4E56 65206E6F7420666F756E
4685   4E60 6400063C2145    .DB 064h,000h,006h,03Ch,021h,045h,004h,036h,000h,011h,07Dh,004h,005h,0CAh,09Fh,003h  ;0360h
4685   4E66 043600117D0405CA9F03
4686   4E70 CDFB02FE15C8    .DB 0CDh,0FBh,002h,0FEh,015h,0C8h,0FEh,043h,0C2h,069h,004h,077h,0C9h,06Eh,06Fh,020h  ;0370h
4686   4E76 FE43C2690477C96E6F20
4687   4E80 696E69742066    .DB 069h,06Eh,069h,074h,020h,066h,072h,06Fh,06Dh,020h,072h,065h,063h,065h,069h,076h  ;0380h
4687   4E86 726F6D20726563656976
4688   4E90 657200115C00    .DB 065h,072h,000h,011h,05Ch,000h,00Eh,011h,0CDh,079h,003h,03Ch,0CAh,0DDh,004h,0CDh  ;0390h
4688   4E96 0E11CD79033CCADD04CD
4689   4EA0 8A0346696C65    .DB 08Ah,003h,046h,069h,06Ch,065h,020h,065h,078h,069h,073h,074h,073h,02Eh,020h,04Fh  ;03A0h
4689   4EA6 206578697374732E204F
4690   4EB0 766572777269    .DB 076h,065h,072h,077h,072h,069h,074h,065h,020h,028h,059h,02Fh,04Eh,029h,03Fh,000h  ;03B0h
4690   4EB6 74652028592F4E293F00
4691   4EC0 2180003610EB    .DB 021h,080h,000h,036h,010h,0EBh,00Eh,00Ah,0CDh,079h,003h,0EBh,023h,035h,0C2h,037h  ;03C0h
4691   4EC6 0E0ACD7903EB2335C237
4692   4ED0 04237EF620FE    .DB 004h,023h,07Eh,0F6h,020h,0FEh,079h,0C2h,037h,004h,0CDh,074h,003h,0CDh,08Ah,003h  ;03D0h
4692   4ED6 79C23704CD7403CD8A03
4693   4EE0 46696C652063    .DB 046h,069h,06Ch,065h,020h,063h,072h,065h,061h,074h,065h,000h,00Eh,016h,0CDh,079h  ;03E0h
4693   4EE6 7265617465000E16CD79
4694   4EF0 033CCA1605CD    .DB 003h,03Ch,0CAh,016h,005h,0CDh,08Dh,003h,064h,00Dh,00Ah,052h,065h,063h,065h,069h  ;03F0h
4694   4EF6 8D03640D0A5265636569
4695   4F00 766500016400    .DB 076h,065h,000h,001h,064h,000h,03Ah,045h,004h,0B7h,0CAh,010h,005h,032h,040h,004h  ;0400h
4695   4F06 3A4504B7CA1005324004
4696   4F10 3A4004C36C03    .DB 03Ah,040h,004h,0C3h,06Ch,003h,0CDh,033h,004h,020h,066h,061h,069h,06Ch,02Eh,020h  ;0410h
4696   4F16 CD3304206661696C2E20
4697   4F20 577269746520    .DB 057h,072h,069h,074h,065h,020h,070h,072h,06Fh,074h,065h,063h,074h,03Fh,020h,044h  ;0420h
4697   4F26 70726F746563743F2044
4698   4F30 69722066756C    .DB 069h,072h,020h,066h,075h,06Ch,06Ch,03Fh,000h,011h,080h,000h,01Ah,032h,042h,004h  ;0430h
4698   4F36 6C3F001180001A324204
4699   4F40 13CDDC06DAD0    .DB 013h,0CDh,0DCh,006h,0DAh,0D0h,005h,0CDh,0EEh,006h,0DAh,05Eh,005h,0FEh,02Fh,0C2h  ;0440h
4699   4F46 05CDEE06DA5E05FE2FC2
4700   4F50 56051B343E20    .DB 056h,005h,01Bh,034h,03Eh,020h,0FEh,020h,0C2h,047h,005h,0CDh,0A3h,005h,001h,020h  ;0450h
4700   4F56 FE20C24705CDA3050120
4701   4F60 0D215C003E2F    .DB 00Dh,021h,05Ch,000h,03Eh,02Fh,023h,005h,0CAh,076h,005h,0BEh,0C2h,066h,005h,036h  ;0460h
4701   4F66 2305CA7605BEC2660536
4702   4F70 202305C26F05    .DB 020h,023h,005h,0C2h,06Fh,005h,070h,023h,00Dh,0C2h,076h,005h,011h,000h,007h,00Eh  ;0470h
4702   4F76 70230DC276051100070E
4703   4F80 1ACD79033A44    .DB 01Ah,0CDh,079h,003h,03Ah,044h,004h,047h,03Ch,0C0h,0CDh,030h,004h,04Dh,075h,073h  ;0480h
4703   4F86 04473CC0CD30044D7573
4704   4F90 742073706563    .DB 074h,020h,073h,070h,065h,063h,069h,066h,079h,020h,02Fh,052h,020h,06Fh,072h,020h  ;0490h
4704   4F96 696679202F52206F7220
4705   4FA0 2F5300CDDC06    .DB 02Fh,053h,000h,0CDh,0DCh,006h,0D8h,001h,0A3h,005h,0C5h,0FEh,02Fh,0C2h,0B0h,006h  ;04A0h
4705   4FA6 D801A305C5FE2FC2B006
4706   4FB0 CDEE06DAB006    .DB 0CDh,0EEh,006h,0DAh,0B0h,006h,0FEh,052h,0CAh,0CAh,005h,0FEh,053h,0CAh,0CAh,005h  ;04B0h
4706   4FB6 FE52CACA05FE53CACA05
4707   4FC0 FE43C29706AF    .DB 0FEh,043h,0C2h,097h,006h,0AFh,032h,045h,004h,0C9h,0E6h,001h,032h,044h,004h,0C9h  ;04C0h
4707   4FC6 324504C9E601324404C9
4708   4FD0 CD33043D3D3D    .DB 0CDh,033h,004h,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh  ;04D0h
4708   4FD6 3D3D3D3D3D3D3D3D3D3D
4709   4FE0 3D3D3D3D3D3D    .DB 03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,00Dh,00Ah,058h,04Dh  ;04E0h
4709   4FE6 3D3D3D3D3D3D0D0A584D
4710   4FF0 4F44454D2032    .DB 04Fh,044h,045h,04Dh,020h,032h,02Eh,035h,020h,042h,079h,020h,04Dh,02Eh,020h,045h  ;04F0h
4710   4FF6 2E35204279204D2E2045
4711   5000 626572686172    .DB 062h,065h,072h,068h,061h,072h,064h,00Dh,00Ah,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh  ;0500h
4711   5006 640D0A3D3D3D3D3D3D3D
4712   5010 3D3D3D3D3D3D    .DB 03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh,03Dh  ;0510h
4712   5016 3D3D3D3D3D3D3D3D3D3D
4713   5020 3D3D0D0A0A55    .DB 03Dh,03Dh,00Dh,00Ah,00Ah,055h,073h,061h,067h,065h,03Ah,020h,058h,04Dh,04Fh,044h  ;0520h
4713   5026 736167653A20584D4F44
4714   5030 454D203C6669    .DB 045h,04Dh,020h,03Ch,066h,069h,06Ch,065h,06Eh,061h,06Dh,065h,03Eh,020h,03Ch,06Fh  ;0530h
4714   5036 6C656E616D653E203C6F
4715   5040 7074696F6E20    .DB 070h,074h,069h,06Fh,06Eh,020h,06Ch,069h,073h,074h,03Eh,00Dh,00Ah,020h,02Fh,052h  ;0540h
4715   5046 6C6973743E0D0A202F52
4716   5050 20746F207265    .DB 020h,074h,06Fh,020h,072h,065h,063h,065h,069h,076h,065h,020h,06Fh,072h,020h,02Fh  ;0550h
4716   5056 6365697665206F72202F
4717   5060 5320746F2073    .DB 053h,020h,074h,06Fh,020h,073h,065h,06Eh,064h,00Dh,00Ah,020h,02Fh,043h,020h,072h  ;0560h
4717   5066 656E640D0A202F432072
4718   5070 656365697665    .DB 065h,063h,065h,069h,076h,065h,020h,077h,069h,074h,068h,020h,063h,068h,065h,063h  ;0570h
4718   5076 20776974682063686563
4719   5080 6B73756D7320    .DB 06Bh,073h,075h,06Dh,073h,020h,069h,06Eh,073h,074h,065h,061h,064h,020h,06Fh,066h  ;0580h
4719   5086 696E7374656164206F66
4720   5090 204352430D0A    .DB 020h,043h,052h,043h,00Dh,00Ah,000h,032h,09Eh,006h,0CDh,08Ah,003h,02Fh,026h,020h  ;0590h
4720   5096 00329E06CD8A032F2620
4721   50A0 756E7265636F    .DB 075h,06Eh,072h,065h,063h,06Fh,067h,06Eh,069h,07Ah,065h,064h,000h,0C3h,0B8h,006h  ;05A0h
4721   50A6 676E697A656400C3B806
4722   50B0 CD8A034A756E    .DB 0CDh,08Ah,003h,04Ah,075h,06Eh,06Bh,000h,0CDh,033h,004h,020h,069h,06Eh,020h,063h  ;05B0h
4722   50B6 6B00CD330420696E2063
4723   50C0 6F6D6D616E64    .DB 06Fh,06Dh,06Dh,061h,06Eh,064h,020h,06Ch,069h,06Eh,065h,000h,0CDh,08Ah,003h,042h  ;05C0h
4723   50C6 206C696E6500CD8A0342
4724   50D0 61642076616C    .DB 061h,064h,020h,076h,061h,06Ch,075h,065h,000h,0C3h,0B8h,006h,0CDh,0EEh,006h,0D8h  ;05D0h
4724   50D6 756500C3B806CDEE06D8
4725   50E0 CADC06FE20CA    .DB 0CAh,0DCh,006h,0FEh,020h,0CAh,0DCh,006h,0FEh,009h,0CAh,0DCh,006h,0C9h,021h,042h  ;05E0h
4725   50E6 DC06FE09CADC06C92142
4726   50F0 047EB737C81A    .DB 004h,07Eh,0B7h,037h,0C8h,01Ah,0E6h,07Fh,013h,035h,0FEh,00Dh,0C8h,0FEh,00Ah,0C9h  ;05F0h
4726   50F6 E67F1335FE0DC8FE0AC9
4727   5100 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0600h
4727   5106 00000000000000000000
4728   5110 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0610h
4728   5116 00000000000000000000
4729   5120 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0620h
4729   5126 00000000000000000000
4730   5130 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0630h
4730   5136 00000000000000000000
4731   5140 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0640h
4731   5146 00000000000000000000
4732   5150 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0650h
4732   5156 00000000000000000000
4733   5160 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0660h
4733   5166 00000000000000000000
4734   5170 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0670h
4734   5176 00000000000000000000
4735   5180 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0680h
4735   5186 00000000000000000000
4736   5190 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0690h
4736   5196 00000000000000000000
4737   51A0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06A0h
4737   51A6 00000000000000000000
4738   51B0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06B0h
4738   51B6 00000000000000000000
4739   51C0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06C0h
4739   51C6 00000000000000000000
4740   51D0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06D0h
4740   51D6 00000000000000000000
4741   51E0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06E0h
4741   51E6 00000000000000000000
4742   51F0 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;06F0h
4742   51F6 00000000000000000000
4743   5200 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0700h
4743   5206 00000000000000000000
4744   5210 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0710h
4744   5216 00000000000000000000
4745   5220 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0720h
4745   5226 00000000000000000000
4746   5230 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0730h
4746   5236 00000000000000000000
4747   5240 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0740h
4747   5246 00000000000000000000
4748   5250 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0750h
4748   5256 00000000000000000000
4749   5260 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0760h
4749   5266 00000000000000000000
4750   5270 000000000000    .DB 000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0770h
4750   5276 00000000000000000000
4751   5280 00             .DB 000h
4752   5281 504950202020    .text    "PIP     "
4752   5287 2020
4753   5289 C34F4D000000    .DB                                              0C3h,04Fh,04Dh,000h,000h,000h,03Ah  ;0780h
4753   528F 3A
4754   5290 E0E1E2E30000    .DB 0E0h,0E1h,0E2h,0E3h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;0790h
4754   5296 00000000000000000000
4755   52A0 00             .DB 000h
4756   52A1 584D20202020    .text    "XM      "
4756   52A7 2020
4757   52A9 C34F4D000000    .DB                                              0C3h,04Fh,04Dh,000h,000h,000h,00Ch  ;07A0h
4757   52AF 0C
4758   52B0 E40000000000    .DB 0E4h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;07B0h
4758   52B6 00000000000000000000
4759   52C0 00             .DB 000h
4760   52C1 4D4F4E49544F    .text    "MONITOR "
4760   52C7 5220
4761   52C9 C34F4D000000    .DB                                              0C3h,04Fh,04Dh,000h,000h,000h,001h  ;07A0h
4761   52CF 01
4762   52D0 EA0000000000    .DB 0EAh,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h,000h  ;07B0h
4762   52D6 00000000000000000000
4763   52E0 E5E5E5E5E5E5    .DB 0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h  ;07E0h
4763   52E6 E5E5E5E5E5E5E5E5E5E5
4764   52F0 E5E5E5E5E5E5    .DB 0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h,0E5h  ;07F0h
4764   52F6 E5E5E5E5E5E5E5E5E5E5
4765   5300             											;BLOCK E5
4766   5300             
4767   5300             
4768   5300             
4769   5300             ;7B00	0EA0	EA
4770   7B00             		.ORG	7B00H
4771   7B00 31 80 FF    		LXI	SP,STACK	;Assign NEW STACK in upper RAM!
4772   7B03 21 56 01    		LXI	H,MAIN_MENU_FPON
4773   7B06 E5          		PUSH	H
4774   7B07 21 8A 0A    		LXI	H,CHKSUM_RAM_SET
4775   7B0A E5          		PUSH	H
4776   7B0B C3 5A EE    		JMP	JMP_ROM_LOW
4777   7B0E             
4778   7B0E             		.end
4779   7B0E             
4780   7B0E             
4781   7B0E             ;                       *********   *******    *********                        
4782   7B0E             ;                       *********  *********   *********                        
4783   7B0E             ;                       **         **     **   **                               
4784   7B0E             ;                       **         **     **   **                               
4785   7B0E             ;---------------------  *******    **     **   *******    --------------------- 
4786   7B0E             ;---------------------  *******    **     **   *******    --------------------- 
4787   7B0E             ;                       **         **     **   **                               
4788   7B0E             ;                       **         **     **   **                               
4789   7B0E             ;                       *********  *********   **                               
4790   7B0E             ;                       *********   *******    **                               
4791   7B0E             
4792   7B0E             
4793   7B0E             
4794   7B0E             
4795   7B0E             
4796   7B0E             
4797   7B0E             
4798   7B0E             ;----------------------------------------------------------------------------------------------------; INSTRUCTION LIST REFERENCE
4799   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4800   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4801   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4802   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4803   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4804   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4805   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4806   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4807   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4808   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4809   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4810   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4811   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4812   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4813   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4814   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4815   7B0E             ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
4816   7B0E             ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<;
4817   7B0E             ;----------------------------------------------------------------------------------------------------;
4818   7B0E             
4819   7B0E             ;DATA TRANSFER GROUP
4820   7B0E             ;'Mnem.     'TC'Description                 'Notes                '
4821   7B0E             ;'----------+--+----------------------------+---------------------'
4822   7B0E             ; MOV r1,r2 | 5| r1 <- r2                   |r = A,B,C,D,E,H,L
4823   7B0E             ; MOV r,M   | 7| r <- (HL)
4824   7B0E             ; MOV M,r   | 7| (HL) <- r
4825   7B0E             ; HLT       | 7| HALT
4826   7B0E             ; MVI r,d   | 7| r <- d, Move Immediate data
4827   7B0E             ; MVI M,d   | 7| (HL) <- d, Immediate data
4828   7B0E             ; INR r     | 5| r <- r+1
4829   7B0E             ; DCR r     | 5| r <- r-1
4830   7B0E             ; INR M     |10| (HL) <- (HL)+1
4831   7B0E             ; DCR M     |10| (HL) <- (HL)-1
4832   7B0E             ; ADD r     | 4| A <- A+r
4833   7B0E             ; ADC r     | 4| A <- A+r+CY                |Add with Carry
4834   7B0E             ; SUB r     | 4| A <- A-r
4835   7B0E             ; SBB r     | 4| A <- A-r-CY                |Subtract with Borrow
4836   7B0E             ; ANA r     | 4| A <- A AND r
4837   7B0E             ; XRA r     | 4| A <- A XOR r
4838   7B0E             ; ORA r     | 4| A <- A OR r
4839   7B0E             ; CMP r     | 4| A-r                        |Compare
4840   7B0E             ; ADD M     | 7| A <- A+(HL)
4841   7B0E             ; ADC M     | 7|
4842   7B0E             ; SUB M     | 7|
4843   7B0E             ; SBB M     | 7|
4844   7B0E             ; ANA M     | 7|
4845   7B0E             ; XRA M     | 7|
4846   7B0E             ; ORA M     | 7|
4847   7B0E             ; CMP M     | 7|
4848   7B0E             ; ADI d     | 7| A <- A+d, ADD Immediate data
4849   7B0E             ; ACI d     | 7|
4850   7B0E             ; SUI d     | 7|
4851   7B0E             ; SBI d     | 7|
4852   7B0E             ; ANI d     | 7|
4853   7B0E             ; XRI d     | 7|
4854   7B0E             ; ORI d     | 7|
4855   7B0E             ; CPI d     | 7| A-d, Z=1 if A=d, CY=0 if A>d
4856   7B0E             ; RLC       | 4| Rotate A Left,  CY<-MSB      Only Carry Affected
4857   7B0E             ; RRC       | 4| Rotate A Right, CY<-LSB      Only Carry Affected
4858   7B0E             ; RAL       | 4| Rotate A Left  through Carry Only Carry Affected
4859   7B0E             ; RAR       | 4| Rotate A Right through Carry Only Carry Affected
4860   7B0E             ; JMP addr  |10| Jump Address
4861   7B0E             ; JC  addr  |10| Jump on Carry
4862   7B0E             ; JNC addr  |10| Jump on NOT Cary
4863   7B0E             ; JZ  addr  |10| Jump on ZERO
4864   7B0E             ; JNZ addr  |10| Jump on NOT ZERO
4865   7B0E             ; JP  addr  |10| Jump on Positive (MSB=0)
4866   7B0E             ; JM  addr  |10| Jump on Minus (MSB=1)
4867   7B0E             ; JPE addr  |10| Jump on Parity Even (Parity bit =1)
4868   7B0E             ; JPO addr  |10| Jump on Parity Odd (Parity bit =0)
4869   7B0E             ; CALL addr |17| Call subroutine
4870   7B0E             ; CC  addr  |11/17|   
4871   7B0E             ; CNC addr  |11/17|   
4872   7B0E             ; CZ  addr  |11/17|   
4873   7B0E             ; CNZ addr  |11/17|   
4874   7B0E             ; CP  addr  |11/17|   
4875   7B0E             ; CM  addr  |11/17|   
4876   7B0E             ; CPE addr  |11/17|   
4877   7B0E             ; CPO addr  |11/17|      
4878   7B0E             ; RET       |10| Return from subroutine
4879   7B0E             ; RC        |5/11|   
4880   7B0E             ; RNC       |5/11|   
4881   7B0E             ; RZ        |5/11|   
4882   7B0E             ; RNZ       |5/11|   
4883   7B0E             ; RP        |5/11|   
4884   7B0E             ; RM        |5/11|   
4885   7B0E             ; RPE       |5/11|   
4886   7B0E             ; RPO       |5/11|      
4887   7B0E             ; RST n     |11| Restart to Vector n        | n=0,1,2,3,4,5,6,7
4888   7B0E             ; IN  p     |10| A <- Port p, Input
4889   7B0E             ; OUT p     |10| Port p <- A, Output
4890   7B0E             ; LXI B,dd  |10| BC <- dd, Load Immediate data, 16 bit to Register Pair
4891   7B0E             ; LXI D,dd  |10| DE <- dd
4892   7B0E             ; LXI H,dd  |10| HL <- dd
4893   7B0E             ; LXI SP,dd |10| SP <- dd
4894   7B0E             ; PUSH B    |11| PUSH BC register pair to STACK
4895   7B0E             ; PUSH D    |11| PUSH DE register pair to STACK
4896   7B0E             ; PUSH H    |11| PUSH HL register pair to STACK
4897   7B0E             ; PUSH PSW  |11| PUSH A,Flags register pair to STACK
4898   7B0E             ; POP B     |10| POP BC register pair from STACK
4899   7B0E             ; POP D     |10| POP DE register pair from STACK
4900   7B0E             ; POP H     |10| POP HL register pair from STACK
4901   7B0E             ; POP PSW   |10| POP A,Flags register pair from STACK
4902   7B0E             ; STA addr  |13| (addr) <- A, Store A Direct
4903   7B0E             ; LDA addr  |13| A <- (addr), Load A Direct
4904   7B0E             ; XCHG      | 4| Exchange HL <> DE
4905   7B0E             ; XTHL      |18| Exchange HL <> (SP), Exchange HL with Top of Stack
4906   7B0E             ; SPHL      | 5| SP <- HL, Move HL to SP
4907   7B0E             ; PCHL      | 5| PC <- HL, Move HL to PC
4908   7B0E             ; DAD B     |10| HL <- HL+BC, Add 16 bit register pairs
4909   7B0E             ; DAD D     |10| HL <- HL+DE, Add 16 bit register pairs
4910   7B0E             ; DAD H     |10| HL <- HL+HL, Add 16 bit register pairs (16 bit arithmetic shift left)
4911   7B0E             ; DAD SP    |10| HL <- HL+SP, Add 16 bit register pairs (only way to read SP)
4912   7B0E             ; STAX B    | 7| (BC) <- A, Store A Indirect
4913   7B0E             ; STAX D    | 7| (DE) <- A, Store A Indirect
4914   7B0E             ; LDAX B    | 7| A <- (BC), Load A Indirect
4915   7B0E             ; LDAX D    | 7| A <- (DE), Load A Indirect
4916   7B0E             ; INX B     | 5| BC <- BC+1, Increment 16 bit register pair
4917   7B0E             ; INX D     | 5| DE <- DE+1, Increment 16 bit register pair
4918   7B0E             ; INX H     | 5| HL <- HL+1, Increment 16 bit register pair
4919   7B0E             ; INX SP    | 5| SP <- SP+1, Increment 16 bit register
4920   7B0E             ; DCX B     | 5| BC <- BC-1, Decrement 16 bit register pair
4921   7B0E             ; DCX D     | 5| DE <- DE-1, Decrement 16 bit register pair
4922   7B0E             ; DCX H     | 5| HL <- HL-1, Decrement 16 bit register pair
4923   7B0E             ; DCX SP    | 5| SP <- SP-1, Decrement 16 bit register
4924   7B0E             ; CMA       | 4| A <- /A, Complement Accumulator
4925   7B0E             ; STC       | 4| Set Carry
4926   7B0E             ; CMC       | 4| Complement Carry
4927   7B0E             ; DAA       | 4| Decimal Adjust Accumulator
4928   7B0E             ; SHLD addr |16| (addr) <- HL, Store HL Direct
4929   7B0E             ; LHLD addr |16| HL <- (addr), Load HL Direct
4930   7B0E             ; EI        | 4| Enable Interrupts
4931   7B0E             ; DI        | 4| Disable Interrupts
4932   7B0E             ; NOP       | 4| No Op
4933   7B0E             
4934   7B0E             
tasm: Number of errors = 0
